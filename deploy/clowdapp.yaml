apiVersion: v1
kind: Template
metadata:
  name: koku
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: koku
  spec:
    database:
      name: ${DATABASE_NAME}
      version: ${{DATABASE_VERSION}}
    deployments:
    - minReplicas: ${{KOKU_MIN_REPLICAS}}
      name: clowder-api
      podSpec:
        command:
        - /usr/libexec/s2i/run
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: django-secret-key
              name: koku-secret
              optional: false
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: API_PATH_PREFIX
          value: ${API_PATH_PREFIX}
        - name: APP_DOMAIN
          value: ${APP_DOMAIN}
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: DJANGO_LOG_LEVEL
          value: ${DJANGO_LOG_LEVEL}
        - name: DJANGO_LOG_FORMATTER
          value: ${DJANGO_LOG_FORMATTER}
        - name: DJANGO_LOG_HANDLERS
          value: ${DJANGO_LOG_HANDLERS}
        - name: DJANGO_LOG_DIRECTORY
          value: ${DJANGO_LOG_DIRECTORY}
        - name: DJANGO_LOGGING_FILE
          value: ${DJANGO_LOG_FILE}
        - name: RBAC_SERVICE_PATH
          value: ${RBAC_SERVICE_PATH}
        - name: RBAC_CACHE_TTL
          value: ${RBAC_CACHE_TTL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: KOKU_API_ENABLE_SENTRY
          value: ${ENABLE_API_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: api-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: POD_CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: koku-clowder-api
              resource: limits.cpu
        - name: GUNICORN_THREADS
          value: ${GUNICORN_THREADS}
        - name: ACCOUNT_ENHANCED_METRICS
          value: ${ACCOUNT_ENHANCED_METRICS}
        - name: CACHED_VIEWS_DISABLED
          value: ${CACHED_VIEWS_DISABLED}
        image: ${IMAGE}:${IMAGE_TAG}
        initContainers:
        - command:
          - /bin/bash
          - -c
          - $HOME/scripts/run_migrations.sh
          image: ${IMAGE}:${IMAGE_TAG}
          inheritEnv: true
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: ${API_PATH_PREFIX}/v1/status/
            port: web
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: ${API_PATH_PREFIX}/v1/status/
            port: web
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: ${KOKU_CPU_LIMIT}
            memory: ${KOKU_MEMORY_LIMIT}
          requests:
            cpu: ${KOKU_CPU_REQUEST}
            memory: ${KOKU_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: true
    - minReplicas: ${{LISTENER_MIN_REPLICAS}}
      name: clowder-listener
      podSpec:
        command:
        - /bin/bash
        - -c
        - python koku/manage.py listener
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: KAFKA_CONNECT
          value: ${KAFKA_CONNECT}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_API_ENABLE_SENTRY
          value: ${ENABLE_API_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: koku-listener-dsn
              name: koku-sentry
              optional: true
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${LISTENER_CPU_LIMIT}
            memory: ${LISTENER_MEMORY_LIMIT}
          requests:
            cpu: ${LISTENER_CPU_REQUEST}
            memory: ${LISTENER_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-listener-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-listener-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{MASU_MIN_REPLICAS}}
      name: clowder-masu
      podSpec:
        command:
        - /usr/libexec/s2i/run
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: MASU
          value: "true"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: django-secret-key
              name: koku-secret
              optional: false
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: API_PATH_PREFIX
          value: ${API_PATH_PREFIX}
        - name: APP_DOMAIN
          value: ${APP_DOMAIN}
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: DJANGO_LOG_LEVEL
          value: ${DJANGO_LOG_LEVEL}
        - name: DJANGO_LOG_FORMATTER
          value: ${DJANGO_LOG_FORMATTER}
        - name: DJANGO_LOG_HANDLERS
          value: ${DJANGO_LOG_HANDLERS}
        - name: DJANGO_LOG_DIRECTORY
          value: ${DJANGO_LOG_DIRECTORY}
        - name: DJANGO_LOGGING_FILE
          value: ${DJANGO_LOG_FILE}
        - name: RBAC_SERVICE_PATH
          value: ${RBAC_SERVICE_PATH}
        - name: RBAC_CACHE_TTL
          value: ${RBAC_CACHE_TTL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: POD_CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: koku-clowder-masu
              resource: limits.cpu
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: ACCOUNT_ENHANCED_METRICS
          value: ${ACCOUNT_ENHANCED_METRICS}
        - name: CACHED_VIEWS_DISABLED
          value: ${CACHED_VIEWS_DISABLED}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: KAFKA_CONNECT
          value: ${KAFKA_CONNECT}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        image: ${IMAGE}:${IMAGE_TAG}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: ${API_PATH_PREFIX}/v1/status/?liveness
            port: web
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: ${API_PATH_PREFIX}/v1/status/
            port: web
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: ${MASU_CPU_LIMIT}
            memory: ${MASU_MEMORY_LIMIT}
          requests:
            cpu: ${MASU_CPU_REQUEST}
            memory: ${MASU_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: true
    - minReplicas: ${{SCHEDULER_MIN_REPLICAS}}
      name: clowder-scheduler
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku beat -l $LOG_LEVEL
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${SCHEDULER_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: SCHEDULE_REPORT_CHECKS
          value: ${SCHEDULE_REPORT_CHECKS}
        - name: SOURCE_STATUS_FREQUENCY_MINUTES
          value: ${SOURCE_STATUS_FREQUENCY_MINUTES}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${SCHEDULER_CPU_LIMIT}
            memory: ${SCHEDULER_MEMORY_LIMIT}
          requests:
            cpu: ${SCHEDULER_CPU_REQUEST}
            memory: ${SCHEDULER_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: false
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{SOURCES_CLIENT_MIN_REPLICAS}}
      name: clowder-sources-client
      podSpec:
        command:
        - /usr/libexec/s2i/run
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: SOURCES
          value: "true"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: django-secret-key
              name: koku-secret
              optional: false
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: API_PATH_PREFIX
          value: ${API_PATH_PREFIX}
        - name: APP_DOMAIN
          value: ${APP_DOMAIN}
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: DJANGO_LOG_LEVEL
          value: ${DJANGO_LOG_LEVEL}
        - name: DJANGO_LOG_FORMATTER
          value: ${DJANGO_LOG_FORMATTER}
        - name: DJANGO_LOG_HANDLERS
          value: ${DJANGO_LOG_HANDLERS}
        - name: DJANGO_LOG_DIRECTORY
          value: ${DJANGO_LOG_DIRECTORY}
        - name: DJANGO_LOGGING_FILE
          value: ${DJANGO_LOG_FILE}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        - name: RBAC_SERVICE_PATH
          value: ${RBAC_SERVICE_PATH}
        - name: RBAC_CACHE_TTL
          value: ${RBAC_CACHE_TTL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: KOKU_API_ENABLE_SENTRY
          value: ${ENABLE_API_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: sources-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        image: ${IMAGE}:${IMAGE_TAG}
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: ${API_PATH_PREFIX}/v1/status/?liveness
            port: web
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: ${API_PATH_PREFIX}/v1/status/
            port: web
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: ${SOURCES_CLIENT_CPU_LIMIT}
            memory: ${SOURCES_CLIENT_MEMORY_LIMIT}
          requests:
            cpu: ${SOURCES_CLIENT_CPU_REQUEST}
            memory: ${SOURCES_CLIENT_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: true
    - minReplicas: ${{SOURCES_LISTENER_MIN_REPLICAS}}
      name: clowder-sources-listener
      podSpec:
        command:
        - /bin/bash
        - -c
        - python koku/manage.py sources_listener
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: SOURCES
          value: "true"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: django-secret-key
              name: koku-secret
              optional: false
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: API_PATH_PREFIX
          value: ${API_PATH_PREFIX}
        - name: APP_DOMAIN
          value: ${APP_DOMAIN}
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: DJANGO_LOG_LEVEL
          value: ${DJANGO_LOG_LEVEL}
        - name: DJANGO_LOG_FORMATTER
          value: ${DJANGO_LOG_FORMATTER}
        - name: DJANGO_LOG_HANDLERS
          value: ${DJANGO_LOG_HANDLERS}
        - name: DJANGO_LOG_DIRECTORY
          value: ${DJANGO_LOG_DIRECTORY}
        - name: DJANGO_LOGGING_FILE
          value: ${DJANGO_LOG_FILE}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        - name: RBAC_SERVICE_PATH
          value: ${RBAC_SERVICE_PATH}
        - name: RBAC_CACHE_TTL
          value: ${RBAC_CACHE_TTL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: KOKU_API_ENABLE_SENTRY
          value: ${ENABLE_API_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: sources-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${SOURCES_LISTENER_CPU_LIMIT}
            memory: ${SOURCES_LISTENER_MEMORY_LIMIT}
          requests:
            cpu: ${SOURCES_LISTENER_CPU_REQUEST}
            memory: ${SOURCES_LISTENER_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: false
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_CELERY_MIN_REPLICAS}}
      name: clowder-worker-celery
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_CELERY_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_CELERY_CPU_LIMIT}
            memory: ${WORKER_CELERY_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_CELERY_CPU_REQUEST}
            memory: ${WORKER_CELERY_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_COST_MODEL_MIN_REPLICAS}}
      name: clowder-worker-cost-model
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_COST_MODEL_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_COST_MODEL_CPU_LIMIT}
            memory: ${WORKER_COST_MODEL_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_COST_MODEL_CPU_REQUEST}
            memory: ${WORKER_COST_MODEL_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_DOWNLOAD_MIN_REPLICAS}}
      name: clowder-worker-download
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_DOWNLOAD_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_DOWNLOAD_CPU_LIMIT}
            memory: ${WORKER_DOWNLOAD_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_DOWNLOAD_CPU_REQUEST}
            memory: ${WORKER_DOWNLOAD_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_OCP_MIN_REPLICAS}}
      name: clowder-worker-ocp
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_OCP_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_OCP_CPU_LIMIT}
            memory: ${WORKER_OCP_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_OCP_CPU_REQUEST}
            memory: ${WORKER_OCP_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_PRIORITY_MIN_REPLICAS}}
      name: clowder-worker-priority
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_PRIORITY_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_PRIORITY_CPU_LIMIT}
            memory: ${WORKER_PRIORITY_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_PRIORITY_CPU_REQUEST}
            memory: ${WORKER_PRIORITY_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_REFRESH_MIN_REPLICAS}}
      name: clowder-worker-refresh
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_REFRESH_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_REFRESH_CPU_LIMIT}
            memory: ${WORKER_REFRESH_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_REFRESH_CPU_REQUEST}
            memory: ${WORKER_REFRESH_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    - minReplicas: ${{WORKER_SUMMARY_MIN_REPLICAS}}
      name: clowder-worker-summary
      podSpec:
        command:
        - /bin/bash
        - -c
        - |
          PYTHONPATH=/opt/app-root/src/koku celery -A koku worker -E -l $LOG_LEVEL -Q $WORKER_QUEUES
        env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: prometheus_multiproc_dir
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: ENABLE_PARQUET_PROCESSING
          value: ${ENABLE_PARQUET_PROCESSING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: ENABLE_TRINO_SOURCES
          value: ${ENABLE_TRINO_SOURCES}
        - name: ENABLE_TRINO_ACCOUNTS
          value: ${ENABLE_TRINO_ACCOUNTS}
        - name: ENABLE_TRINO_SOURCE_TYPE
          value: ${ENABLE_TRINO_SOURCE_TYPE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_SUMMARY_WORKER_QUEUE}
        - name: SCHEDULE_CHECK_INTERVAL
          value: ${SCHEDULE_CHECK_INTERVAL}
        - name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
          value: ${REMOVE_EXPIRED_REPORT_DATA_ON_DAY}
        - name: REMOVE_EXPIRED_REPORT_UTC_TIME
          value: ${REMOVE_EXPIRED_REPORT_UTC_TIME}
        - name: VACUUM_DATA_DAY_OF_WEEK
          value: ${VACUUM_DATA_DAY_OF_WEEK}
        - name: VACUUM_DATA_UTC_TIME
          value: ${VACUUM_DATA_UTC_TIME}
        - name: VOLUME_FILE_RETENTION
          value: ${VOLUME_FILE_RETENTION}
        - name: CLEAN_VOLUME_DAY_OF_WEEK
          value: ${CLEAN_VOLUME_DAY_OF_WEEK}
        - name: CLEAN_VOLUME_UTC_TIME
          value: ${CLEAN_VOLUME_UTC_TIME}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: PRESTO_HOST
          value: ${PRESTO_HOST}
        - name: PRESTO_PORT
          value: ${PRESTO_PORT}
        - name: AUTO_DATA_INGEST
          value: ${AUTO_DATA_INGEST}
        - name: REPORT_PROCESSING_BATCH_SIZE
          value: ${REPORT_PROCESSING_BATCH_SIZE}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: USE_RABBIT
          value: ${USE_RABBIT}
        - name: RABBITMQ_HOST
          value: ${RABBITMQ_HOST}
        - name: RABBITMQ_PORT
          value: ${RABBITMQ_PORT}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: ${WORKER_SUMMARY_CPU_LIMIT}
            memory: ${WORKER_SUMMARY_MEMORY_LIMIT}
          requests:
            cpu: ${WORKER_SUMMARY_CPU_REQUEST}
            memory: ${WORKER_SUMMARY_MEMORY_REQUEST}
        volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - mountPath: /etc/gcp
          name: gcp-credentials
          readOnly: true
        volumes:
        - emptyDir: {}
          name: koku-worker-data
        - name: gcp-credentials
          secret:
            items:
            - key: gcp-credentials
              path: gcp-credentials.json
            secretName: koku-gcp
      webServices:
        metrics:
          enabled: true
        private:
          enabled: false
        public:
          enabled: false
    envName: ${ENV_NAME}
    inMemoryDb: true
    kafkaTopics:
    - topicName: platform.sources.event-stream
    - topicName: platform.upload.hccm
    - topicName: platform.upload.validation
    objectStore:
    - ${S3_BUCKET_NAME}
    optionalDependencies:
    - ingress
    - rbac
    - sources-api
    testing:
      iqePlugin: cost-management
- apiVersion: v1
  data:
    django-secret-key: ${SECRET_KEY}
  kind: Secret
  metadata:
    name: koku-secret
- apiVersion: v1
  data:
    aws-access-key-id: ${AWS_ACCESS_KEY_ID_EPH}
    aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY_EPH}
  kind: Secret
  metadata:
    name: koku-aws
- apiVersion: v1
  data:
    gcp-credentials: ${GCP_CREDENTIALS_EPH}
  kind: Secret
  metadata:
    name: koku-gcp
parameters:
- name: ENV_NAME
  required: true
  value: koku-env
- name: DATABASE_NAME
  required: true
  value: koku
- name: DATABASE_VERSION
  required: true
  value: "12"
- name: CLOWDER_ENABLED
  required: true
  value: "True"
- description: Image tag
  name: IMAGE_TAG
  required: true
  value: latest
- description: Image
  name: IMAGE
  required: true
  value: quay.io/cloudservices/koku
- name: S3_BUCKET_NAME
  value: koku-eph-s3
- description: GCP Credentials Location
  name: GOOGLE_APPLICATION_CREDENTIALS
  value: /etc/gcp/gcp-credentials.json
- displayName: App domain
  name: APP_DOMAIN
  value: project-koku.com
- displayName: API path prefix
  name: API_PATH_PREFIX
  required: true
  value: /api/cost-management
- displayName: Development
  name: DEVELOPMENT
  value: "False"
- displayName: Enable threads in Gunicorn
  name: GUNICORN_THREADS
  value: "True"
- displayName: Gunicorn log level
  name: LOG_LEVEL
  value: INFO
- displayName: Koku log level
  name: KOKU_LOG_LEVEL
  value: INFO
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- displayName: Django log formatter
  name: DJANGO_LOG_FORMATTER
  value: simple
- displayName: Django log handlers
  name: DJANGO_LOG_HANDLERS
  value: console
- displayName: Django log dir
  name: DJANGO_LOG_DIRECTORY
  required: false
- displayName: Django logging file
  name: DJANGO_LOG_FILE
  required: false
- displayName: Prometheus multiproc dir
  name: PROMETHEUS_DIR
  value: /tmp
- description: Koku Sentry Env
  displayName: Koku Sentry Env
  name: KOKU_SENTRY_ENV
  value: dev
- description: Enable API Sentry
  displayName: Enable API Sentry
  name: ENABLE_API_SENTRY
  value: "False"
- description: Enable Celery Sentry
  displayName: Enable Celery Sentry
  name: ENABLE_CELERY_SENTRY
  value: "False"
- description: Enable S3 Archiving
  displayName: Enable S3 Archiving
  name: ENABLE_S3_ARCHIVING
  value: "false"
- description: Enable Parquet Processing
  displayName: Enable Parquet Processing
  name: ENABLE_PARQUET_PROCESSING
  value: "false"
- description: How many CSV rows to process into a Parquet file
  displayName: Parquet processing batch size
  name: PARQUET_PROCESSING_BATCH_SIZE
  required: true
  value: "200000"
- description: Processing batch size
  displayName: Processing batch size
  name: REPORT_PROCESSING_BATCH_SIZE
  required: false
  value: "100000"
- description: Number of days at a time we process Trino SQL
  displayName: Trino date step
  name: TRINO_DATE_STEP
  required: true
  value: "5"
- description: Flag to use account enhanced prometheus metrics
  displayName: Account Enhanced Metrics
  name: ACCOUNT_ENHANCED_METRICS
  value: "True"
- description: Flag to enable/disable caching
  displayName: cached views
  name: CACHED_VIEWS_DISABLED
  value: "False"
- description: Demo account JSON
  displayName: Demo account JSON
  name: DEMO_ACCOUNTS
  value: ""
- description: Auto Ingest Flag
  displayName: AUTO_DATA_INGEST
  name: AUTO_DATA_INGEST
  value: "True"
- description: Sources to be processed with Trino
  displayName: Sources to be processed with Trino
  name: ENABLE_TRINO_SOURCES
  value: ""
- description: Accounts to be processed with Trino
  displayName: Accounts to be processed with Trino
  name: ENABLE_TRINO_ACCOUNTS
  value: ""
- description: Source Types to be processed with Trino
  displayName: Source Types to be processed with Trino
  name: ENABLE_TRINO_SOURCE_TYPE
  value: ""
- description: Scheduler check interval
  displayName: Scheduler check interval
  name: SCHEDULE_CHECK_INTERVAL
  value: "60"
- description: Remove expired data on day
  displayName: Remove expired data on day
  name: REMOVE_EXPIRED_REPORT_DATA_ON_DAY
  value: "1"
- description: Remove expired data report utc time
  displayName: Remove expired data report utc time
  name: REMOVE_EXPIRED_REPORT_UTC_TIME
  value: "00:00"
- description: Vacuum data on day
  displayName: Vacuum data on day
  name: VACUUM_DATA_DAY_OF_WEEK
  value: ""
- description: Vacuum data utc time
  displayName: Vacuum data utc time
  name: VACUUM_DATA_UTC_TIME
  value: "00:00"
- description: Volume file retention length
  displayName: Volume file retention length
  name: VOLUME_FILE_RETENTION
  value: "86400"
- description: Clean volume on day
  displayName: Clean volume on day
  name: CLEAN_VOLUME_DAY_OF_WEEK
  value: sunday
- description: Clean volume utc time
  displayName: Clean volume utc time
  name: CLEAN_VOLUME_UTC_TIME
  value: "00:00"
- displayName: Date overrider
  name: DATE_OVERRIDE
  required: false
- displayName: Retain num months
  name: RETAIN_NUM_MONTHS
  value: "3"
- displayName: Initial ingest num months
  name: INITIAL_INGEST_NUM_MONTHS
  value: "3"
- displayName: Initial ingest override
  name: INITIAL_INGEST_OVERRIDE
  value: "False"
- displayName: Kafka connect
  name: KAFKA_CONNECT
  value: "True"
- description: Use rabbitmq as message broker
  displayName: Use rabbitmq as message broker
  name: USE_RABBIT
  value: "False"
- description: RabbitMQ host
  displayName: RabbitMQ host
  name: RABBITMQ_HOST
  value: rabbitmq
- description: RabbitMQ port
  displayName: RabbitMQ port
  name: RABBITMQ_PORT
  value: "5672"
- displayName: Rbac service path
  name: RBAC_SERVICE_PATH
  value: /api/rbac/v1/access/
- displayName: Rbac cache ttl
  name: RBAC_CACHE_TTL
  value: "30"
- displayName: Presto host
  name: PRESTO_HOST
  value: presto-coordinator
- displayName: Presto port
  name: PRESTO_PORT
  value: "8000"
- displayName: Prometheus Pushgateway
  name: PROMETHEUS_PUSHGATEWAY
  value: prometheus-pushgateway:9091
- description: Source API Path prefix
  name: SOURCES_API_PREFIX
  value: /api/sources/v1.0
- displayName: Secret Key (Ephemeral)
  from: '[a-f0-9]{20}'
  generate: expression
  name: SECRET_KEY
  required: true
- displayName: AWS Access Key ID (Ephemeral)
  name: AWS_ACCESS_KEY_ID_EPH
  required: true
  value: aW5zZXJ0LWJhc2U2NC1lbmNvZGVkLXZhbHVl
- displayName: AWS Secret Access Key (Ephemeral)
  name: AWS_SECRET_ACCESS_KEY_EPH
  required: true
  value: aW5zZXJ0LWJhc2U2NC1lbmNvZGVkLXZhbHVl
- displayName: GCP Credentials (Ephemeral)
  name: GCP_CREDENTIALS_EPH
  required: true
  value: aW5zZXJ0LWJhc2U2NC1lbmNvZGVkLXZhbHVl
- displayName: Minimum replicas
  name: KOKU_MIN_REPLICAS
  required: true
  value: "3"
- displayName: Memory Request
  name: KOKU_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: KOKU_MEMORY_LIMIT
  required: true
  value: 768Mi
- displayName: CPU Request
  name: KOKU_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: KOKU_CPU_LIMIT
  required: true
  value: 300m
- displayName: Minimum replicas
  name: LISTENER_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: LISTENER_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: LISTENER_MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: CPU Request
  name: LISTENER_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: LISTENER_CPU_LIMIT
  required: true
  value: 200m
- displayName: Minimum replicas
  name: MASU_MIN_REPLICAS
  required: true
  value: "1"
- displayName: Memory Request
  name: MASU_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: MASU_MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: CPU Request
  name: MASU_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: MASU_CPU_LIMIT
  required: true
  value: 200m
- displayName: Minimum replicas
  name: SCHEDULER_MIN_REPLICAS
  required: true
  value: "1"
- displayName: Memory Request
  name: SCHEDULER_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: SCHEDULER_MEMORY_LIMIT
  required: true
  value: 256Mi
- displayName: CPU Request
  name: SCHEDULER_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: SCHEDULER_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: SCHEDULER_WORKER_QUEUE
  required: true
  value: cost_model,download,ocp,priority,refresh,summary
- displayName: Scheduler report checks
  name: SCHEDULE_REPORT_CHECKS
  value: "True"
- displayName: Frequency to check sources availability (minutes)
  name: SOURCE_STATUS_FREQUENCY_MINUTES
  value: "60"
- displayName: Minimum replicas
  name: SOURCES_CLIENT_MIN_REPLICAS
  required: true
  value: "1"
- displayName: Memory Request
  name: SOURCES_CLIENT_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: SOURCES_CLIENT_MEMORY_LIMIT
  required: true
  value: 256Mi
- displayName: CPU Request
  name: SOURCES_CLIENT_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: SOURCES_CLIENT_CPU_LIMIT
  required: true
  value: 200m
- displayName: Minimum replicas
  name: SOURCES_LISTENER_MIN_REPLICAS
  required: true
  value: "1"
- displayName: Memory Request
  name: SOURCES_LISTENER_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: SOURCES_LISTENER_MEMORY_LIMIT
  required: true
  value: 256Mi
- displayName: CPU Request
  name: SOURCES_LISTENER_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: SOURCES_LISTENER_CPU_LIMIT
  required: true
  value: 200m
- displayName: Minimum replicas
  name: WORKER_CELERY_MIN_REPLICAS
  required: true
  value: "1"
- displayName: Memory Request
  name: WORKER_CELERY_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: WORKER_CELERY_MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: CPU Request
  name: WORKER_CELERY_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_CELERY_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: WORKER_CELERY_WORKER_QUEUE
  required: true
  value: celery
- displayName: Minimum replicas
  name: WORKER_COST_MODEL_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: WORKER_COST_MODEL_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: WORKER_COST_MODEL_MEMORY_LIMIT
  required: true
  value: 256Mi
- displayName: CPU Request
  name: WORKER_COST_MODEL_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_COST_MODEL_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: WORKER_COST_MODEL_WORKER_QUEUE
  required: true
  value: cost_model
- displayName: Minimum replicas
  name: WORKER_DOWNLOAD_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: WORKER_DOWNLOAD_MEMORY_REQUEST
  required: true
  value: 256Mi
- displayName: Memory Limit
  name: WORKER_DOWNLOAD_MEMORY_LIMIT
  required: true
  value: 1Gi
- displayName: CPU Request
  name: WORKER_DOWNLOAD_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_DOWNLOAD_CPU_LIMIT
  required: true
  value: 500m
- displayName: Worker Queue
  name: WORKER_DOWNLOAD_WORKER_QUEUE
  required: true
  value: download
- displayName: Minimum replicas
  name: WORKER_OCP_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: WORKER_OCP_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: WORKER_OCP_MEMORY_LIMIT
  required: true
  value: 256Mi
- displayName: CPU Request
  name: WORKER_OCP_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_OCP_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: WORKER_OCP_WORKER_QUEUE
  required: true
  value: ocp
- displayName: Minimum replicas
  name: WORKER_PRIORITY_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: WORKER_PRIORITY_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: WORKER_PRIORITY_MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: CPU Request
  name: WORKER_PRIORITY_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_PRIORITY_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: WORKER_PRIORITY_WORKER_QUEUE
  required: true
  value: priority
- displayName: Minimum replicas
  name: WORKER_REFRESH_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: WORKER_REFRESH_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: WORKER_REFRESH_MEMORY_LIMIT
  required: true
  value: 256Mi
- displayName: CPU Request
  name: WORKER_REFRESH_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_REFRESH_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: WORKER_REFRESH_WORKER_QUEUE
  required: true
  value: refresh
- displayName: Minimum replicas
  name: WORKER_SUMMARY_MIN_REPLICAS
  required: true
  value: "2"
- displayName: Memory Request
  name: WORKER_SUMMARY_MEMORY_REQUEST
  required: true
  value: 128Mi
- displayName: Memory Limit
  name: WORKER_SUMMARY_MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: CPU Request
  name: WORKER_SUMMARY_CPU_REQUEST
  required: true
  value: 100m
- displayName: CPU Limit
  name: WORKER_SUMMARY_CPU_LIMIT
  required: true
  value: 200m
- displayName: Worker Queue
  name: WORKER_SUMMARY_WORKER_QUEUE
  required: true
  value: summary
