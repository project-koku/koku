apiVersion: v1
kind: Template
metadata:
  name: redash-template
  annotations:
    openshift.io/display-name: "Redash UI"
    openshift.io/long-description: "This template defines resources needed to deploy and run the redash."
    openshift.io/provider-display-name: "Redash"
labels:
  app: redash
  template: redash
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: redash-cfg
  data:
    PYTHONUNBUFFERED: "0"
    REDASH_LOG_LEVEL: "INFO"
    POSTGRES_PASSWORD: "insecure"
    REDASH_DATABASE_URL: "postgresql://postgres:insecure@localhost/postgres"
    PGDATA: "/var/lib/postgresql/data/pgdata"

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: redash
  spec:
    selector:
      matchLabels:
        app: redash
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: redash
      spec:
        volumes:
        - name: postgres-for-redash
          persistentVolumeClaim:
            claimName: pgredash-pv-claim
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data
        containers:
        - name: redis
          image: 'registry.redhat.io/rhel8/redis-5:latest'
          ports:
          - containerPort: 6379
          imagePullPolicy: Always
          volumeMounts:
            - name: redis-data
              mountPath: /var/lib/redis/data
        - name:  postgres
          image: postgres:9.5-alpine
          envFrom:
          - configMapRef:
              name: redash-cfg
          volumeMounts:
          - name: postgres-for-redash
            mountPath: /var/lib/postgresql/data
        - name: server
          image: redash/redash:8.0.0.b32245
          envFrom:
          - configMapRef:
              name: redash-cfg
          env:
          - name: REDASH_WEB_WORKERS
            value: "4"
          args: ["server"]
          ports:
          - containerPort: 5000
            name: redash
        - name: scheduler
          image: redash/redash:8.0.0.b32245
          envFrom:
          - configMapRef:
              name: redash-cfg
          env:
          - name: QUEUES
            value: "celery"
          - name: WORKERS_COUNT
            value: "1"
          args: ["scheduler"]
        - name: scheduled-worker
          image: redash/redash:8.0.0.b32245
          envFrom:
          - configMapRef:
              name: redash-cfg
          env:
          - name: QUEUES
            value: "scheduled_queries,schemas"
          - name: WORKERS_COUNT
            value: "1"
          args: ["worker"]
        - name: adhoc-worker
          image: redash/redash:8.0.0.b32245
          envFrom:
          - configMapRef:
              name: redash-cfg
          env:
          - name: QUEUES
            value: "queries"
          - name: WORKERS_COUNT
            value: "2"
          args: ["worker"]

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: pgredash-pv-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: redis-data
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi

- apiVersion: v1
  kind: Service
  metadata:
    name: redash
  spec:
    ports:
    - port: 5000
    selector:
      app: redash
