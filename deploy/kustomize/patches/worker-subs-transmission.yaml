- op: add
  path: /objects/0/spec/deployments/-
  value:
    name: clowder-worker-subs-transmission
    replicas: ${{WORKER_SUBS_TRANSMISSION_REPLICAS}}
    webServices:
      public:
        enabled: false
      private:
        enabled: false
    podSpec:
      image: ${IMAGE}:${IMAGE_TAG}
      command:
        - /bin/bash
        - -c
        - > # ${APP_HOME} is `/opt/koku/koku` and is defined in the Dockerfile
          PYTHONPATH=${APP_HOME}
          celery -A koku worker --without-gossip -E -l $CELERY_LOG_LEVEL -Q $WORKER_QUEUES
      env:
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws-access-key-id
              name: koku-aws
              optional: false
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws-secret-access-key
              name: koku-aws
              optional: false
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: ${GOOGLE_APPLICATION_CREDENTIALS}
        - name: SOURCES_PSK
          valueFrom:
            secretKeyRef:
              key: psk
              name: ${SOURCES_PSK_SECRET_NAME}
              optional: true
        - name: APP_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEVELOPMENT
          value: ${DEVELOPMENT}
        - name: ENABLE_SUBS_DEBUG
          value: ${ENABLE_SUBS_DEBUG}
        - name: CELERY_LOG_LEVEL
          value: ${CELERY_LOG_LEVEL}
        - name: KOKU_LOG_LEVEL
          value: ${KOKU_LOG_LEVEL}
        - name: UNLEASH_LOG_LEVEL
          value: ${UNLEASH_LOG_LEVEL}
        - name: PROMETHEUS_MULTIPROC_DIR
          value: ${PROMETHEUS_DIR}
        - name: REQUESTED_BUCKET
          value: ${S3_BUCKET_NAME}
        - name: REQUESTED_SUBS_BUCKET
          value: ${S3_SUBS_BUCKET_NAME}
        - name: ENABLE_S3_ARCHIVING
          value: ${ENABLE_S3_ARCHIVING}
        - name: PARQUET_PROCESSING_BATCH_SIZE
          value: ${PARQUET_PROCESSING_BATCH_SIZE}
        - name: TRINO_DATE_STEP
          value: ${TRINO_DATE_STEP}
        - name: KOKU_CELERY_ENABLE_SENTRY
          value: ${ENABLE_CELERY_SENTRY}
        - name: KOKU_SENTRY_ENVIRONMENT
          value: ${KOKU_SENTRY_ENV}
        - name: KOKU_CELERY_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: celery-sentry-dsn
              name: koku-sentry
              optional: true
        - name: DEMO_ACCOUNTS
          value: ${DEMO_ACCOUNTS}
        - name: WORKER_QUEUES
          value: ${WORKER_SUBS_TRANSMISSION_WORKER_QUEUE}
        - name: WORKER_PROC_ALIVE_TIMEOUT
          value: ${WORKER_PROC_ALIVE_TIMEOUT}
        - name: DATE_OVERRIDE
          value: ${DATE_OVERRIDE}
        - name: RETAIN_NUM_MONTHS
          value: ${RETAIN_NUM_MONTHS}
        - name: INITIAL_INGEST_NUM_MONTHS
          value: ${INITIAL_INGEST_NUM_MONTHS}
        - name: INITIAL_INGEST_OVERRIDE
          value: ${INITIAL_INGEST_OVERRIDE}
        - name: TRINO_HOST
          value: ${TRINO_HOST}
        - name: TRINO_PORT
          value: ${TRINO_PORT}
        - name: PROMETHEUS_PUSHGATEWAY
          value: ${PROMETHEUS_PUSHGATEWAY}
        - name: SOURCES_API_PREFIX
          value: ${SOURCES_API_PREFIX}
        - name: UNLEASH_CACHE_DIR
          value: ${UNLEASH_CACHE_DIR}
        - name: WORKER_CACHE_TIMEOUT
          value: ${WORKER_CACHE_TIMEOUT}
        - name: QE_SCHEMA
          value: ${QE_SCHEMA}
        - name: ENHANCED_ORG_ADMIN
          value: ${ENHANCED_ORG_ADMIN}
        - name: ENABLE_SUBS_DEBUG
          value: ${ENABLE_SUBS_DEBUG}
      livenessProbe:
        httpGet:
          path: /livez
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 20
        successThreshold: 1
        failureThreshold: 5
        timeoutSeconds: 10
      readinessProbe:
        httpGet:
          path: /readyz
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 20
        successThreshold: 1
        failureThreshold: 5
        timeoutSeconds: 10
      resources:
        limits:
          cpu: ${WORKER_SUBS_TRANSMISSION_CPU_LIMIT}
          memory: ${WORKER_SUBS_TRANSMISSION_MEMORY_LIMIT}
        requests:
          cpu: ${WORKER_SUBS_TRANSMISSION_CPU_REQUEST}
          memory: ${WORKER_SUBS_TRANSMISSION_MEMORY_REQUEST}
      volumeMounts:
        - mountPath: /var/tmp/masu/
          name: koku-worker-data
        - name: gcp-credentials
          mountPath: /etc/gcp
          readOnly: true
        - name: tmp-data
          mountPath: ${TMP_DIR}
      volumes:
        - name: tmp-data
          emptyDir: {}
        - name: koku-worker-data
          emptyDir: {}
        - name: gcp-credentials
          secret:
            secretName: koku-gcp
            items:
              - key: gcp-credentials
                path: gcp-credentials.json

- op: add
  path: /parameters/-
  value:
    displayName: Minimum replicas
    name: WORKER_SUBS_TRANSMISSION_REPLICAS
    required: true
    value: "0"
- op: add
  path: /parameters/-
  value:
    displayName: Memory Request
    name: WORKER_SUBS_TRANSMISSION_MEMORY_REQUEST
    required: true
    value: 300Mi
- op: add
  path: /parameters/-
  value:
    displayName: Memory Limit
    name: WORKER_SUBS_TRANSMISSION_MEMORY_LIMIT
    required: true
    value: 500Mi
- op: add
  path: /parameters/-
  value:
    displayName: CPU Request
    name: WORKER_SUBS_TRANSMISSION_CPU_REQUEST
    required: true
    value: 100m
- op: add
  path: /parameters/-
  value:
    displayName: CPU Limit
    name: WORKER_SUBS_TRANSMISSION_CPU_LIMIT
    required: true
    value: 200m
- op: add
  path: /parameters/-
  value:
    displayName: Worker Queue
    name: WORKER_SUBS_TRANSMISSION_WORKER_QUEUE
    required: true
    value: "subs_transmission"
