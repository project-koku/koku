swagger: '2.0'
info:
  description: 'The API for Project-Koku.  You can find out more about     Project-Koku at [https://github.com/project-koku/](https://github.com/project-koku/).'
  version: '1.0.0'
  title: 'Koku'
  license:
    name: 'AGPL-3.0'
    url: 'https://opensource.org/licenses/AGPL-3.0'
basePath: '/api/v1'
tags:
- name: 'Status'
  description: 'Operations about status'
- name: 'UserPreference'
  description: 'Operations about user preferences'
- name: 'Provider'
  description: 'Operations about provider interaction'
- name: 'Report'
  description: 'Operations about report interaction'
schemes:
- 'http'
paths:
  /status/:
    get:
      tags:
        - Status
      summary: Obtain server status
      operationId: getStatus
      produces:
      - 'application/json'
      responses:
        200:
          description: An object describing the server status
          schema:
            $ref: '#/definitions/Status'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /preferences/:
    post:
      tags:
        - UserPreference
      summary: Create a user preference
      operationId: createUserPreference
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: Preference to add to a Preference
        required: true
        schema:
          $ref: '#/definitions/UserPreferenceIn'
      responses:
        201:
          description: An object describing the user
          schema:
            $ref: '#/definitions/UserPreferenceOut'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    get:
      tags:
        - UserPreference
      summary: List the user's preferences
      operationId: listUserPreferences
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of user to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        200:
          description: A paginated list of preference objects
          schema:
            $ref: '#/definitions/UserPreferencePagination'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /preferences/{pref_uuid}/:
    get:
      tags:
        - UserPreference
      summary: Get a user preference
      operationId: getUserPreference
      produces:
      - 'application/json'
      parameters:
      - name: 'pref_uuid'
        in: 'path'
        description: 'ID of preference to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        200:
          description: A UserPreference object
          schema:
            $ref: '#/definitions/UserPreferenceOut'
        401:
          description: Unauthorized
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    delete:
      tags:
        - UserPreference
      summary: Delete a user preference
      operationId: deleteUserPreference
      produces:
      - 'application/json'
      parameters:
      - name: 'pref_uuid'
        in: 'path'
        description: 'ID of preference to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        204:
          description: User deleted
        401:
          description: Unauthorized
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    put:
      tags:
        - UserPreference
      summary: Update a user preference
      operationId: updateUserPreference
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - name: 'pref_uuid'
        in: 'path'
        description: 'ID of preference to get'
        required: true
        type: 'string'
        format: 'uuid'
      - in: 'body'
        name: 'body'
        description: Update to a Preference
        required: true
        schema:
          $ref: '#/definitions/UserPreferenceIn'
      responses:
        200:
          description: Preference updated
        401:
          description: Unauthorized
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /providers/:
    post:
      tags:
        - Provider
      summary: Create a provider
      operationId: createProvider
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: Provider to add to a Customer
        required: true
        schema:
          $ref: '#/definitions/ProviderIn'
      responses:
        201:
          description: An object describing the provider
          schema:
            $ref: '#/definitions/ProviderOut'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    get:
      tags:
        - Provider
      summary: List the providers
      operationId: listProviders
      produces:
      - 'application/json'
      responses:
        200:
          description: A paginated list of provider objects
          schema:
            $ref: '#/definitions/ProviderPagination'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    delete:
      tags:
        - Provider
      summary: Delete a provider
      operationId: deleteProvider
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of provider to delete'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        204:
          description: Provider deleted
        401:
          description: Unauthorized
        403:
          description: Insufficent permissions to delete provider
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /providers/{uuid}/:
    get:
      tags:
        - Provider
      summary: Get a provider
      operationId: getProvider
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of provider to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        200:
          description: A Provider object
          schema:
            $ref: '#/definitions/ProviderOut'
        401:
          description: Unauthorized
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /reports/costs/:
    get:
      tags:
        - Report
      summary: Query to obtain cost reports
      operationId: getCostReports
      produces:
      - 'application/json'
      - 'text/csv'
      parameters:
      - name: 'delta'
        in: 'query'
        description: 'Toggle to include delta values in report.'
        type: 'string'
      - name: 'filter'
        in: 'query'
        description: 'The filter to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'group_by'
        in: 'query'
        description: 'The grouping to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'order_by'
        in: 'query'
        description: 'The ordering to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'operation'
        in: 'query'
        description: 'The report operation; default is sum.'
        type: 'string'
        enum:
          - sum
          - none
      responses:
        200:
          description: A report object
          schema:
            $ref: '#/definitions/ReportCost'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /reports/inventory/instance-type/:
    get:
      tags:
        - Report
      summary: Query to obtain inventory instance type data
      operationId: getInventoryInstanceReports
      produces:
      - 'application/json'
      - 'text/csv'
      parameters:
      - name: 'filter'
        in: 'query'
        description: 'The filter to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'group_by'
        in: 'query'
        description: 'The grouping to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'order_by'
        in: 'query'
        description: 'The ordering to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'units'
        in: 'query'
        description: 'The units used to report data.'
        type: 'string'
      - name: 'operation'
        in: 'query'
        description: 'The report operation; default is sum.'
        type: 'string'
        enum:
          - sum
          - none
      responses:
        200:
          description: A report object
          schema:
            $ref: '#/definitions/ReportInstanceInventory'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /reports/inventory/storage/:
    get:
      tags:
        - Report
      summary: Query to obtain inventory storage data
      operationId: getInventoryStorageReports
      produces:
      - 'application/json'
      - 'text/csv'
      parameters:
      - name: 'filter'
        in: 'query'
        description: 'The filter to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'group_by'
        in: 'query'
        description: 'The grouping to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'order_by'
        in: 'query'
        description: 'The ordering to apply to the report as a URL encoded dictionary.'
        type: 'string'
      - name: 'units'
        in: 'query'
        description: 'The units used to report data.'
        type: 'string'
      - name: 'operation'
        in: 'query'
        description: 'The report operation; default is sum.'
        type: 'string'
        enum:
          - sum
          - none
      responses:
        200:
          description: A report object
          schema:
            $ref: '#/definitions/ReportStorageInventory'
        401:
          description: Unauthorized
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: 'apiKey'
    name: 'Authorization'
    in: 'header'
definitions:
  Customer:
    required:
      - account_id
      - org_id
    properties:
      account_id:
        type: string
        example: '11838292'
      org_id:
        type: string
        example: '1555276'
  CustomerOut:
    allOf:
      - $ref: '#/definitions/Customer'
      - required:
          - uuid
          - date_created
    properties:
      uuid:
        type: string
        format: uuid
        example: 600562e7-d7d7-4516-8522-410e72792daf
      date_created:
        type: string
        format: date-time
  Error:
    required:
      - error_key
    properties:
      error_key:
        type: string
  ListPagination:
    required:
      - previous
      - next
    properties:
      count:
        type: integer
        format: int64
        example: 30
      previous:
        type: string
        format: uri
        example: /api/v1/(resources)/?page=2
      next:
        type: string
        format: uri
        example: /api/v1/(resources)/?page=4
  ProviderAuthenticationIn:
    required:
      - provider_resource_name
    properties:
      provider_resource_name:
        type: string
        example: 'arn:aws:iam::PRODUCTION-ACCOUNT-ID:role/CostData'
  ProviderBillingSourceIn:
    required:
      - bucket
    properties:
      bucket:
        type: string
        example: cost_s3
  Provider:
    required:
      - name
      - type
    properties:
      name:
        type: string
        example: My Company AWS production
      type:
        type: string
        example: AWS
  ProviderIn:
    allOf:
      - $ref: '#/definitions/Provider'
      - required:
          - authentication
          - billing_source
    properties:
      authentication:
        $ref: '#/definitions/ProviderAuthenticationIn'
      billing_source:
        $ref: '#/definitions/ProviderBillingSourceIn'
  ProviderAuthenticationOut:
    allOf:
      - $ref: '#/definitions/ProviderAuthenticationIn'
      - required:
          - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
  ProviderBillingSourceOut:
    allOf:
      - $ref: '#/definitions/ProviderBillingSourceIn'
      - required:
          - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
  ProviderOut:
    allOf:
      - $ref: '#/definitions/Provider'
      - required:
          - uuid
          - authentication
          - billing_source
          - customer
          - created_by
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
      authentication:
        $ref: '#/definitions/ProviderAuthenticationOut'
      billing_source:
        $ref: '#/definitions/ProviderBillingSourceOut'
      customer:
        $ref: '#/definitions/CustomerOut'
      created_by:
        $ref: '#/definitions/UserOut'
  ProviderPagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
      - required:
          - results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/ProviderOut'
  ReportFilter:
    type: object
    properties:
      limit:
        type: integer
        description: Limits the data points returns and aggregates remaining data.
        example: 5
      resolution:
        $ref: '#/definitions/ReportResolution'
      time_scope_value:
        $ref: '#/definitions/ReportTimeScopeValue'
      time_scope_units:
        $ref: '#/definitions/ReportTimeScopeUnits'
      resource_scope:
        type: array
        items:
          $ref: '#/definitions/ReportResourceScope'
        example: []
      account:
        type: array
        items:
          type: string
      service:
        type: array
        items:
          type: string
      region:
        type: array
        items:
          type: string
      avail_zone:
        type: array
        items:
          type: string
  ReportGrouping:
    type: object
    properties:
      account:
        type: array
        items:
          type: string
      service:
        type: array
        items:
          type: string
      region:
        type: array
        items:
          type: string
      avail_zone:
        type: array
        items:
          type: string
      instance_type:
        type: array
        items:
          type: string
      storage_type:
        type: array
        items:
          type: string
    example: {'account': ['*']}
    description: The grouping to apply to the report. No grouping by default. When grouping by account the account_alias will be provided if avaiable.
  ReportOrdering:
    type: object
    properties:
      total:
        type: string
        enum:
          - asc
          - desc
      inventory:
        type: string
        enum:
          - asc
          - desc
    example: { 'total': 'asc' }
    description: The ordering to apply to the report. Default is ascending order for the data.
  ReportDelta:
    type: object
    properties:
      cost:
        type: string
        enum:
          - day
          - month
          - year
    example: { 'delta': 'month' }
    description: 'Toggle to include delta values in report.'
  ReportResolution:
    type: string
    enum:
      - daily
      - monthly
    description: The resolution to apply to the report. Default resolution is daily.
  ReportTimeScopeUnits:
    type: string
    enum:
      - day
      - month
    description: The units to apply to the report. Default time_scope_units is day.
  ReportTimeScopeValue:
    type: integer
    enum:
      - -1
      - -2
      - -10
      - -30
    example: -10
    description: The time scope to apply to the report. Default time scope is '-10', meaning the last 10 days. Last 30 days would be '-30'. '-10' and '-30' are only valid when used with 'day' time_scope_units.'-1' is used for current month, '-2' is used for last month when time_scope_units is 'month' otherwise invalid.
  ReportResourceScope:
    type: string
    enum:
      - EC2
      - EBS
      - EFS
      - S3
    description: The resources scope to apply to the report. Default resource scope is null, meaning no product or service filtering.
  Report:
    required:
      - delta
      - group_by
      - order_by
      - filter
      - operation
    properties:
      delta:
        $ref: '#/definitions/ReportDelta'
      group_by:
        $ref: '#/definitions/ReportGrouping'
      order_by:
        $ref: '#/definitions/ReportOrdering'
      filter:
        $ref: '#/definitions/ReportFilter'
      operation:
        description: 'The report operation; default is sum.'
        type: string
        enum:
          - sum
          - none
      units:
        description: 'The units for the output data.'
        type: string
        example: ''
  ReportCost:
    allOf:
      - $ref: '#/definitions/Report'
      - required:
          - data
    properties:
      data:
        type: array
        items:
          type: object
          example: [
                [
                {
                    'date': '2018-05-28',
                    'total': {
                      'value': 2564.775150581,
                      'units': 'USD'
                    },
                    'delta': {
                      'value': 379.43980,
                      'percent': -27.2853920
                    },
                    'accounts': [
                        {
                            'account': '8577742690384',
                            'values': [
                                {
                                    'date': '2018-05-28',
                                    'units': 'USD',
                                    'account': '8577742690384',
                                    'total': 1498.92962634,
                                    'account_alias': 'sample-account'
                                }
                            ]
                        },
                        {
                            'account': '9420673783214',
                            'values': [
                                {
                                    'date': '2018-05-28',
                                    'units': 'USD',
                                    'account': '9420673783214',
                                    'total': 1065.845524241
                                }
                            ]
                        }
                    ]
                }
                ]
            ]
  ReportInstanceInventory:
    allOf:
      - $ref: '#/definitions/Report'
      - required:
          - data
    properties:
      data:
        type: array
        items:
          type: object
          example: [
                [
                {
                    'date': '2018-05-28',
                    'instance_types': [
                        {
                            'instance_type': 't2.medium',
                            'values': [
                                {
                                    'date': '2018-05-28',
                                    'units': 'Hrs',
                                    'instance_type': 't2.medium',
                                    'total': 5,
                                    'count': 1
                                }
                            ]
                        },
                        {
                            'instance_type': 'm5.2xlarge',
                            'values': [
                                {
                                    'date': '2018-05-28',
                                    'units': 'Hrs',
                                    'instance_type': 'm5.2xlarge',
                                    'total': 29,
                                    'count': 3
                                }
                            ]
                        }
                    ]
                }
                ]
            ]
  ReportStorageInventory:
    allOf:
      - $ref: '#/definitions/Report'
      - required:
          - data
    properties:
      data:
        type: array
        items:
          type: object
          example: [
                [
                {
                    'date': '2018-07',
                    'accounts': [
                        {
                            'account': '4418636104713',
                            'values': [
                                {
                                    'date': '2018-07',
                                    'units': 'GB-Mo',
                                    'account': '4418636104713',
                                    'total': 1826.74238146924
                                }
                            ]
                        },
                        {
                            'account': '8577742690384',
                            'values': [
                                {
                                    'date': '2018-07',
                                    'units': 'GB-Mo',
                                    'account': '8577742690384',
                                    'total': 1137.74036198065
                                }
                            ]
                        },
                        {
                            'account': '3474227945050',
                            'values': [
                                {
                                    'date': '2018-07',
                                    'units': 'GB-Mo',
                                    'account': '3474227945050',
                                    'total': 1045.80659412797
                                }
                            ]
                        },
                        {
                            'account': '7249815104968',
                            'values': [
                                {
                                    'date': '2018-07',
                                    'units': 'GB-Mo',
                                    'account': '7249815104968',
                                    'total': 807.326470618818
                                }
                            ]
                        },
                        {
                            'account': '9420673783214',
                            'values': [
                                {
                                    'date': '2018-07',
                                    'units': 'GB-Mo',
                                    'account': '9420673783214',
                                    'total': 658.306642830709
                                }
                            ]
                        }
                    ]
                }
                ]
            ]
  Status:
    required:
      - api_version
      - name
    properties:
      api_version:
        type: integer
        format: int64
        example: 1
      commit:
        type: string
        example: 178d2ea
      server_address:
        type: string
        example: '127.0.0.1:8000'
      platform_info:
        type: object
        example:
          system: Darwin
          node: node-1.example.com
          release: 17.5.0
          version: Darwin Kernel Version 17.5.0
          machine: x86_64
          processor: i386
      python_version:
        type: string
        example: 3.6.1
      modules:
        type: object
        example:
          coverage: 4.5.1
          coverage.version: 4.5.1
          coverage.xmlreport: 4.5.1
          cryptography: 2.0.3
          ctypes: 1.1.0
          ctypes.macholib: '1.0'
          decimal: '1.70'
          django: 1.11.5
          django.utils.six: 1.10.0
          django_filters: 1.0.4
          http.server: '0.6'
  User:
    required:
      - username
      - email
    properties:
      username:
        type: string
        example: smithj
      email:
        type: string
        format: email
        example: smithj@mytechco.com
  UserPreference:
    required:
      - name
      - preference
    properties:
      name:
        type: string
        example: my-preference-name
      preference:
        type: object
        format: json
        example: {'timezone': 'UTC'}
      description:
        type: string
        example: my long preference description
  UserOut:
    allOf:
      - $ref: '#/definitions/User'
      - required:
          - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
  UserPreferenceIn:
    allOf:
      - $ref: '#/definitions/UserPreference'
      - required:
          - name
          - preference
    properties:
      name:
        type: string
        example: my-preference-name
      preference:
        type: object
        format: json
        example: {'currency': 'USD'}
      description:
        type: string
        example: my long preference description
  UserPreferencePagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
      - required:
          - results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/UserPreferenceOut'
  UserPreferenceOut:
    allOf:
      - $ref: '#/definitions/UserPreference'
      - required:
          - uuid
          - user
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
      user:
        $ref: '#/definitions/UserOut'
externalDocs:
  description: 'Find out more about Project-Koku'
  url: 'https://github.com/project-koku/'
