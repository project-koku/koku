kind: Template
apiVersion: v1
metadata:
  name: koku-secrets-template
  annotations:
    openshift.io/display-name: "Koku"
    description: "Cloud Cost Management powered by Django+PostgreSQL"
    tags: "quickstart,python,django,postgresql"
    iconClass: "icon-python"
    openshift.io/long-description: "This template defines secret values required to run the Koku application."
    openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/documentation-url: "https://koku.readthedocs.io/en/latest/"
labels:
  app: koku
  template: koku-secret
objects:
# postgresql-exporter
- apiVersion: v1
  stringData:
    data-source-name: postgresql://${DB_MONITOR_USER}:${DB_MONITOR_USER_PW}@${DATABASE_HOST}:5432/dbname?sslmode=disable
    query-yaml: |-
      pg_stat_statements:
        query: "SELECT queryid, query, calls, total_time, min_time, max_time, mean_time, stddev_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time, blk_write_time FROM public.pg_stat_statements() WHERE userid in (SELECT usesysid FROM pg_user WHERE usename != any(array['postgres', 'kokumon']) and usename !~ 'test') AND mean_time > 500 AND query !~ 'INSERT INTO' AND query !~ 'CREATE'"
        master: true
        cache_seconds: 60
        metrics:
          - queryid:
              usage: "LABEL"
              description: "Query identifier"
          - query:
              usage: "LABEL"
              description: "Parameterized SQL query"
          - calls:
              usage: "COUNTER"
              description: "Number of times executed"
          - total_time:
              usage: "COUNTER"
              description: "Total time spent in the statement, in milliseconds"
          - min_time:
              usage: "GAUGE"
              description: "Minimum time spent in the statement, in milliseconds"
          - max_time:
              usage: "GAUGE"
              description: "Maximum time spent in the statement, in milliseconds"
          - mean_time:
              usage: "GAUGE"
              description: "Mean time spent in the statement, in milliseconds"
          - stddev_time:
              usage: "GAUGE"
              description: "Population standard deviation of time spent in the statement, in milliseconds"
          - rows:
              usage: "COUNTER"
              description: "Total number of rows retrieved or affected by the statement"
          - shared_blks_hit:
              usage: "COUNTER"
              description: "Total number of shared block cache hits by the statement"
          - shared_blks_read:
              usage: "COUNTER"
              description: "Total number of shared blocks read by the statement"
          - shared_blks_dirtied:
              usage: "COUNTER"
              description: "Total number of shared blocks dirtied by the statement"
          - shared_blks_written:
              usage: "COUNTER"
              description: "Total number of shared blocks written by the statement"
          - local_blks_hit:
              usage: "COUNTER"
              description: "Total number of local block cache hits by the statement"
          - local_blks_read:
              usage: "COUNTER"
              description: "Total number of local blocks read by the statement"
          - local_blks_dirtied:
              usage: "COUNTER"
              description: "Total number of local blocks dirtied by the statement"
          - local_blks_written:
              usage: "COUNTER"
              description: "Total number of local blocks written by the statement"
          - temp_blks_read:
              usage: "COUNTER"
              description: "Total number of temp blocks read by the statement"
          - temp_blks_written:
              usage: "COUNTER"
              description: "Total number of temp blocks written by the statement"
          - blk_read_time:
              usage: "COUNTER"
              description: "Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)"
          - blk_write_time:
              usage: "COUNTER"
              description: "Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)"
  kind: Secret
  metadata:
    labels:
      app: postgresql-exporter
      template: postgresql-exporter-template
    name: postgresql-exporter
    namespace: secrets
  type: Opaque

# rdsexporter
- apiVersion: v1
  stringData:
    aws-access-key-id: ${AWS_ACCESS_KEY_ID}
    aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-aws_access_key_id: '{.data[''aws-access-key-id'']}'
      template.openshift.io/expose-aws_secret_access_key: '{.data[''aws-secret-access-key'']}'
    labels:
      app: rdsexporter
      template: rdsexporter-template
    name: rdsexporter
    namespace: secrets
  type: Opaque

# koku-aws
- apiVersion: v1
  stringData:
    aws-access-key-id: ${AWS_ACCESS_KEY_ID}
    aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-aws_access_key_id: '{.data[''aws-access-key-id'']}'
      template.openshift.io/expose-aws_secret_access_key: '{.data[''aws-secret-access-key'']}'
    labels:
      app: koku
      template: koku-secret
    name: koku-aws
    namespace: secrets
  type: Opaque

# cloudwatch
- apiVersion: v1
  stringData:
    aws_access_key_id: ${CLOUDWATCH_AWS_ACCESS_KEY_ID}
    aws_secret_access_key: ${CLOUDWATCH_AWS_SECRET_ACCESS_KEY}
    aws_region: 'us-east-1'
    log_group_name: ${CLOUDWATCH_LOG_GROUP}
    # for sources
    CW_AWS_ACCESS_KEY_ID: ${CLOUDWATCH_AWS_ACCESS_KEY_ID}
    CW_AWS_SECRET_ACCESS_KEY: ${CLOUDWATCH_AWS_SECRET_ACCESS_KEY}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-access_key: '{.data[''aws_access_key_id'']}'
      template.openshift.io/expose-log_group: '{.data[''log_group_name'']}'
      template.openshift.io/expose-region: '{.data[''aws_region'']}'
      template.openshift.io/expose-secret: '{.data[''aws_secret_access_key'']}'
    labels:
      app: koku
      template: koku-secret
    name: cloudwatch
    namespace: secrets
  type: Opaque

# koku-gcp
- apiVersion: v1
  data:
    gcp-credentials: ${GCP_CREDENTIALS}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-gcp_credentials: '{.data[''gcp-credentials'']}'
    labels:
      app: koku
      template: koku-secret
    name: koku-gcp
    namespace: secrets
  type: Opaque

# koku-db
- apiVersion: v1
  stringData:
    db.name: ${DATABASE_NAME}
    db.password: ${DATABASE_PASSWORD}
    db.user: ${DATABASE_USER}
    db.host: ${DATABASE_HOST}
    db.port: ${DATABASE_PORT}
    db.monitor.user: ${DB_MONITOR_USER}
    db.monitor.user.password: ${DB_MONITOR_USER_PW}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
      template.openshift.io/expose-username: '{.data[''database-host'']}'
    labels:
      app: koku
      template: koku-secret
    name: koku-db
    namespace: secrets
  type: Opaque

# db-ssl-cert
- apiVersion: v1
  stringData:
    db.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR3ekNDQXFzQ0ZCQnRuTVEyMWszaHlmcVJpVXp5S2xIamlzN3dNQTBHQ1NxR1NJYjNEUUVCRFFVQU1JR2QKTVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNBd0lVSEp2ZG1sdVkyVXhGVEFUQmdOVkJBY01ERVJsWm1GMQpiSFFnUTJsMGVURWNNQm9HQTFVRUNnd1RSR1ZtWVhWc2RDQkRiMjF3WVc1NUlFeDBaREVOTUFzR0ExVUVDd3dFClZXNXBkREVQTUEwR0ExVUVBd3dHYzJWeWRtVnlNU1l3SkFZSktvWklodmNOQVFrQkZoZG1iMjh0WW1GeVFHWmgKYTJVdFpXMWhhV3d1Wm1GclpUQWVGdzB5TVRBek1Ea3hPRFF3TXpkYUZ3MHpNVEF6TURjeE9EUXdNemRhTUlHZApNUXN3Q1FZRFZRUUdFd0pWVXpFUk1BOEdBMVVFQ0F3SVVISnZkbWx1WTJVeEZUQVRCZ05WQkFjTURFUmxabUYxCmJIUWdRMmwwZVRFY01Cb0dBMVVFQ2d3VFJHVm1ZWFZzZENCRGIyMXdZVzU1SUV4MFpERU5NQXNHQTFVRUN3d0UKVlc1cGRERVBNQTBHQTFVRUF3d0djMlZ5ZG1WeU1TWXdKQVlKS29aSWh2Y05BUWtCRmhkbWIyOHRZbUZ5UUdaaAphMlV0WlcxaGFXd3VabUZyWlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXRCCmJaWmVjQVIwL3BocS9QbUJGZmpOVGpRV0JBakhVRUZyVW03c0Era1Fpc0VmNC9WOHE4MFdzdlc3d0pWNlgrUHQKeXljVFIyN1dTL241WnN4RENNWCsrWkVKTjQvaFBEQ0xDWU5yMjZDaVhMVXloZW1uL0E0RUVWMVBMTG1vdEdSRQo4RHZOZGVESTBpY21UbjdBOWE5MndnNDVxdmlodC9aSTBUS0daQ05YNzcxYmhGaGRkbjEwaTZnTkJhWUJ2S2xtCnNmL0lFZTRwMG9kSnNIK1M4U0J6WUtGMi9PeVpzb1lBSmNIT2N4cGE0WTU2NXBSZDFTVTBaTHFDSFdONDZKZEQKL3lMQ1dyR0pINldHMU1wV2FZYnQ1S21vODdqdS9ZTGRqc0JwQXVBYk1VdU93czF0SUlSSVNLT0FoL2duOWtNYwpFaWRtcWxXSVgyQzQ0V05UblFjQ0F3RUFBVEFOQmdrcWhraUc5dzBCQVEwRkFBT0NBUUVBajZwUUgrNFNrTHdGCkI0QjlFQy9UaDQ2c050aWMyV1phZ21SUktIdi8xajBpdksrc3NzRDhubE5hc0lJdG83aTgxQkVJRUlKdnRxQzUKOFNyanJSMmxjQlAyZUhMU3VQVzVGaHVDVWY0eWdsTWY2NHBkVTJpQmV4aUZYS2JwbDBzbitYZFRNTHNBaDRsUApuZHJWczVVOStWOUVMZUxOaTRNODFRTERQNHJnY25Ea0phNGdacGVYSi9pcWtnK2k5S0RzWTlsVUhWcjJXTzhEClBnVElvMURLU3BkWmE3Yno1bm5PUlh0RWYwTXlCVkhjeGc3ZCtST3pnRzcwTHkrMkhSL3BTN3NtS2FGZkhVZmgKQ2YrRGU3SDNsYVdycXhaMElxYVNqUGlWeDNUNHpXOVlxSGFyd0NkYmpHQnhiRnhoNFhCR254c1Y0amRHTUp3Vwo2cDYwTWVnN0RnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    db.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeTBGdGxsNXdCSFQrbUdyOCtZRVYrTTFPTkJZRUNNZFFRV3RTYnV3RDZSQ0t3Ui9qCjlYeXJ6UmF5OWJ2QWxYcGY0KzNMSnhOSGJ0WkwrZmxtekVNSXhmNzVrUWszaitFOE1Jc0pnMnZib0tKY3RUS0YKNmFmOERnUVJYVThzdWFpMFpFVHdPODExNE1qU0p5Wk9mc0QxcjNiQ0RqbXErS0czOWtqUk1vWmtJMWZ2dlZ1RQpXRjEyZlhTTHFBMEZwZ0c4cVdheC84Z1I3aW5TaDBtd2Y1THhJSE5nb1hiODdKbXloZ0Fsd2M1ekdscmhqbnJtCmxGM1ZKVFJrdW9JZFkzam9sMFAvSXNKYXNZa2ZwWWJVeWxacGh1M2txYWp6dU83OWd0Mk93R2tDNEJzeFM0N0MKelcwZ2hFaElvNENIK0NmMlF4d1NKMmFxVlloZllMamhZMU9kQndJREFRQUJBb0lCQUc2eW9xbXJvMXg2RDVNWgphYy9GZ3g3dlNmRktNRVpMcnlVQiszSlg3a1ZIOGhuK2NWdm8yM1NtTVM5dVl4UEdBMldTdy9yeklBdDRnUWFTCjAyN1o3M1JPU3NPMy9sL0pMc3ZOWFpBSzlTSEdhN0Z2NDhqKzZXTUV5aVJFazdwRjdJRlRubmNqamxpdlp1MVYKaXBpMEpOcThWaklETEYrZlRCN0JSOVk1cFY0dGRNb1RuSDRaZmU3TzQvS0EzQVl1TmR5aGZFSlZEbEhOaXpBdgoreEJ3ZURxY3Y2ek5yVDgrZjVHa3I1UWppY1dEUW5QaC9BMEo2NmZlSjRjQWpsMmQreThJQ2diVjUxby80MHRjCnFuV3lZRlNFZkhHQ1hIU3M5cjRLd0wzaHl3Q2FuT1kvcUw4b0dpTUpmSDRzdEFlenNJRElGMXNDSTExYUUvL0UKRWF0R0JtRUNnWUVBN05tYkxvNjQzSUdSY0IyZS9TT0NUMkh0WVBQTVQ2anl4MmpMTVpqdWdOVWt6SXM4b004NQpEZmNORjhUS0g2R0NEbDQyb05FUjI5Q3NQSW1XN3JWcDQ5NVJXdVA3UEV6TnN2N3VpeHAyUDRFeEozODN4YWRyClpiVGNSSExtWFV2aTlLZzFHUFBuRmkwY0ZyNWJ2K01aYmpTUDBjS0tocU52TlVRYlJtdmhsZEVDZ1lFQTI3QjUKVGRKRG4vd25YaXp1OVZFRHVmSGM5amZySktrZ015WkdXMFFkWVVLdm45d1lHc3dqbEZPWEFRc3NrOWZGbFAxVAplSlhmL1lqZ1lWd3o2QlQ4U1RCYmYvUlVnU0lTUDRHMVNXQkI1TFFBMnJPRklGVlBmMjBWSVZ2ZllNSVcwVkFyClcvdE1oaGpjMUhNd2JZbGJjZ3F2VmxyU2hxSTY1S2dXVTNFMFExY0NnWUVBdXBOb3hUSTB1YTl2akN3cFZDdW0KdVRYaE11Q2FiNTRkTWF5QmRGNk9jdnAwZEpTeWU5TUJsTmlxZmJETnNFRWdISVZtN3lRQ3QzQVlYYy9kRDhuawowbFlOTEZZdlVQOEhneHVEZWh5c1RiWk5yRmx3NjhqSXQyUFRxREFDL0RlTlgwRXFJcS92dCs1dEZCVjhYUnBlCnJBdkh4MnRDaUhFeVozbHhLdlpNekNFQ2dZQURsKzlrQm54MHNYc3pYeWpKZW5uRklOK3NaMTNCUzhMckUwVXoKV1BuaURXVXlDRGVjdUpvY1l3R2xVcmwzOForWndFc05QZVpjRDFFY1JwWFN4Z1VhYldBUng3MWFIMlNOQldJaAp3U0ZTekY3M05OaUludHllQ1BxL2dQRTJjL1pMbGpRZlhRenpaSlM0Sk9vMTRIbE9kRDVKKzFKV1FYRVZMR3F4CkVyajRJUUtCZ0Y0cFhSeklPMG50cVlFK0wvTTloZHJaM1BCckVVMHBMU3RqNnlCcnpxUG1OcHM2UzNpckFnVXUKMlcremt1dXI0QWdEY1MrVmc1Q1lLUmx6ZzNJMUtQWXh3WVFzMFlqYktrZlJRUVJlcEhKMmVPaDZKOUIxS1VMWAp2NUtjQzF0eU4xMEJsVFVhbzBja1cybDFoT2pwaWhlMjh2OU1RUHdXWW0rc1ByS0NqY3NZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  kind: Secret
  metadata:
    labels:
      app: koku
      template: koku-secret
    name: db-ssl-cert
    namespace: secrets
  type: Opaque

# hive-db
- apiVersion: v1
  stringData:
    database_password: ${HIVE_DATABASE_PASSWORD}
    database_user: ${HIVE_DATABASE_USER}
    database_name: ${HIVE_DATABASE_NAME}
  kind: Secret
  metadata:
    labels:
      app: koku
      template: koku-secret
    name: hive-db
    namespace: secrets
  type: Opaque

# koku-flower
- apiVersion: v1
  stringData:
    flower-auth-scheme: ${FLOWER_AUTH_SCHEME}
    flower-basic-auth-params: ${FLOWER_BASIC_AUTH_PARAMS}
    flower-oauth2-key: ${FLOWER_OAUTH2_KEY}
    flower-oauth2-secret: ${FLOWER_OAUTH2_SECRET}
    flower-oauth2-redirect-uri: ${FLOWER_OAUTH2_REDIRECT_URI}
    flower-oauth2-domains: ${FLOWER_OAUTH2_DOMAINS}
  kind: Secret
  metadata:
    annotations:
    labels:
      app: koku
      template: koku-secret
    name: koku-flower
    namespace: secrets
  type: Opaque

# koku-secret
- apiVersion: v1
  stringData:
    django-secret-key: ${DJANGO_SECRET_KEY}
    database-client-cert: ${DATABASE_CLIENT_CERT}
    database-admin-password: ${DATABASE_ADMIN_PASSWORD}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-django_secret_key: '{.data[''django-secret-key'']}'
      template.openshift.io/expose-database-client-cert: '{.data[''database-client-cert'']}'
    labels:
      app: koku
      template: koku-secret
    name: koku-secret
    namespace: secrets
  type: Opaque

# koku-daily-secret
- apiVersion: v1
  stringData:
    django-secret-key: ${DJANGO_SECRET_KEY}
    database-client-cert: ${DATABASE_CLIENT_CERT}
    database-admin-password: ${DATABASE_ADMIN_PASSWORD}
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-django_secret_key: '{.data[''django-secret-key'']}'
      template.openshift.io/expose-database-client-cert: '{.data[''database-client-cert'']}'
    labels:
      app: koku
      template: koku-secret
    name: koku-daily-secret
    namespace: secrets
  type: Opaque

# koku-sentry
- apiVersion: v1
  kind: Secret
  metadata:
    name: koku-sentry
  stringData:
    api-sentry-dsn: ${KOKU_API_SENTRY_DSN}
    celery-sentry-dsn: ${KOKU_CELERY_SENTRY_DSN}
  labels:
    app: koku
    template: koku-secret
  name: koku-sentry
  namespace: secrets

# aws s3 secrets
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-aws_access_key_id: "{.data['aws_access_key_id']}"
      template.openshift.io/expose-aws_region: "{.data['aws_region']}"
      template.openshift.io/expose-aws_secret_access_key: "{.data['aws_secret_access_key']}"
      template.openshift.io/expose-bucket: "{.data['bucket']}"
      template.openshift.io/expose-endpoint: "{.data['endpoint']}"
    name: hccm-s3
  stringData:
    aws_access_key_id: ${S3_ACCESS_KEY}
    aws_region: ${S3_REGION}
    aws_secret_access_key: ${S3_SECRET}
    bucket: ${S3_BUCKET}
    endpoint: ${S3_ENDPOINT}

# nise-populator-secret
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
    name: nise-populator-secret
  stringData:
    aws-access-key-id: ${AWS_ACCESS_KEY_ID}
    aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
    azure-storage-account: ''
    azure-storage-connection-string: ''
    insights-url: ''
    insights-user: ''
    insights-password: ''
    insights-account: ''
    insights-org-id: ''

# nise-populator-secret
- apiVersion: v1
  stringData:
    aws-access-key-id:
    aws-secret-access-key:
    azure-storage-account:
    azure-storage-connection-string:
    insights-account:
    insights-org-id:
    insights-password:
    insights-url:
    insights-user:
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-aws_access_key_id: '{.data[''aws-access-key-id'']}'
      template.openshift.io/expose-aws_secret_access_key: '{.data[''aws-secret-access-key'']}'
      template.openshift.io/expose-azure_storage_account: '{.data[''azure-storage-account'']}'
      template.openshift.io/expose-azure_storage_connection_string: '{.data[''azure-storage-connection-string'']}'
      template.openshift.io/expose-insights_account: '{.data[''insights-account'']}'
      template.openshift.io/expose-insights_org_id: '{.data[''insights-org-id'']}'
      template.openshift.io/expose-insights_password: '{.data[''insights-password'']}'
      template.openshift.io/expose-insights_url: '{.data[''insights-url'']}'
      template.openshift.io/expose-insights_user: '{.data[''insights-user'']}'
    labels:
      app: nise-populator
    name: nise-populator-secret
  type: Opaque

# koku-daily secret
- apiVersion: v1
  data:
    email_password: Zm9vX3Bhc3N3b3Jk
    email_user: Zm9vX3VzZXI=
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-email_password: '{.data[''email_password'']}'
      template.openshift.io/expose-email_user: '{.data[''email_user'']}'
    labels:
      app: koku-daily
    name: koku-daily-secret
  type: Opaque

# sources-db
- apiVersion: v1
  stringData:
    db.name: 'sources_production'
    db.password: ${DATABASE_PASSWORD}
    db.user: ${DATABASE_USER}
    db.host: 'sources-postgresql.sources.svc.cluster.local'
    db.port: ${DATABASE_PORT}
  kind: Secret
  metadata:
    name: sources-db
    namespace: secrets
  type: Opaque

# sources-api-secrets
- apiVersion: v1
  stringData:
    encryption-key: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
    secret-key: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
  kind: Secret
  metadata:
    name: sources-api-secrets
    namespace: secrets
  type: Opaque

# rds-client-ca
- apiVersion: v1
  data:
    rds-cacert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4RENDQWRpZ0F3SUJBZ0lVZjJ3YnY3K1dDd0E4cXV2S05ZOGZLU2hwRHVJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJeE1ERXlNakUzTlRBeU5Wb1hEVEl4TURJeQpNVEUzTlRBeU5Wb3dGREVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBeFV0OWxCZzFsOXBaMzRsV09BbGNnM0lidjE4UU9ZZkRmcmZaOHVlQ3ptK1UKM1o5QmE5R3ZhNzY2WUxwSHhxL0x5QTBIdlh1VjFPWUtNcmUzUlpMbmJ4TGgvcEpjWFhDUDhnUExlaTRXK2dPVQpXTkc5QXl0eG1hdVpHa2RCcjA4L1VHNDE1SFNKU3RkMW9ZZ1RsSTlJandlNWp6RUZZbHhDNDJreG44a0cxL3pWCmRyVkNVTlM2eE9xRTdteTdjQkJQVm5YWXRFcWdkeWZyMExSYnEwNldPTVdaM0ZEVE5Oc1hDUGtxMkZJSjlmRGwKTVFUei9qS0VVbG51WG5nZjFkcThSOXFHYURUeDhFaDQ3Mys3U2ZWdzlrUlJ1OVRoY0ZNT2VqaTAzRnZKV25PSQpBYW5OMUpqcXE2TGwrUzk0NFp0OTRrTHh6d0FkRHg2bU1Ea2NxOHJWNndJREFRQUJvem93T0RBVUJnTlZIUkVFCkRUQUxnZ2xzYjJOaGJHaHZjM1F3Q3dZRFZSMFBCQVFEQWdlQU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUIKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDK2VlNmZQOUFCN2FZQW82KzZ0eCt6L3hNa1ZtU2FsWDZMWnFDcQpmRnI3blV3MHJtYUNFRGhFM1pzNHVwdGJwUXV6M3diWjhtUTB4dXlBRDI5NjZXc3JidDZFeWljVHNzUmlBUkZpCjFjc0JkM05Cc3ArMDk1dXhLcTU4OFFEQWVGeHRUKzlsYnltOXArcmtSdzZvM3VSdmIwcG1uQi84cERlV3lzZTYKL3FCNEhuSUV1Q3AxZWZCczZvb2YxdEJIcFdjZlgwWXFnTHpVVDF2by9rWHRlM3pnaFRjdGpJYW9ZdmsxdzgyMApUaHpoQVo4Q0lodXhKakorWVdNcklxOWJrMW1aRk01S3BsWUI5QnM1U1hkdmZJdE4vR2Z1R05EZFJGOTl5WGxXCjF4cXg0QVNVZ3hITDJQVk01TGc5U05iV3c2RnhVd215dmlFWWFzcXNvK0RNaEhoRAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  kind: Secret
  metadata:
    name: rds-client-ca
    namespace: secrets
  type: Opaque

# elasticache-redis
- apiVersion: v1
  stringData:
    db.endpoint: 'koku-redis.hccm.svc.cluster.local'
  kind: Secret
  metadata:
    name: elasticache-redis
    namespace: secrets
  type: Opaque


parameters:
# database params
- displayName: Database Name
  name: DATABASE_NAME
  required: true
  value: koku
- displayName: Database host
  name: DATABASE_HOST
  required: true
  value: koku-db.hccm.svc.cluster.local
- displayName: Database port
  name: DATABASE_PORT
  required: true
  value: '5432'
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: koku
- displayName: Database Username
  from: 'user_[a-zA-Z0-9]{12}'
  generate: expression
  name: DATABASE_USER
  required: true
- displayName: Database User Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
  required: true
- displayName: Database Admin Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_ADMIN_PASSWORD
  required: true
- displayName: Database Client Certificate
  name: DATABASE_CLIENT_CERT
  required: false
  value: ''
- displayName: Database Monitoring User
  name: DB_MONITOR_USER
  required: true
  value: kokumon
- displayName: Database Monitoring User Password
  name: DB_MONITOR_USER_PW
  required: true
  from: '[a-zA-Z0-9]{16}'
  generate: expression

# hive db params
- displayName: Hive Database Name
  name: HIVE_DATABASE_NAME
  required: true
  value: hive
- displayName: Hive Database Username
  from: 'hive_[a-zA-Z0-9]{12}'
  generate: expression
  name: HIVE_DATABASE_USER
  required: true
- displayName: Hive Database Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: HIVE_DATABASE_PASSWORD
  required: true

# application secret keys
- description: Set this to a long random string.
  displayName: Django Secret Key
  from: '[a-zA-Z0-9]{50}'
  generate: expression
  name: DJANGO_SECRET_KEY
  required: true

# Primary AWS account creds
- displayName: AWS Access Key ID
  from: ${AWS_ACCESS_KEY_ID}
  name: AWS_ACCESS_KEY_ID
  required: true
  value: 'AAAAAAAAAAAAAAAAAAAA'
- displayName: AWS Secret Access Key
  from: ${AWS_SECRET_ACCESS_KEY}
  name: AWS_SECRET_ACCESS_KEY
  required: true
  value: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'

# cloudwatch account creds
- displayName: Cloud Watch Amazon Web Services Access ID
  required: false
  name: CLOUDWATCH_AWS_ACCESS_KEY_ID
- displayName: Cloud Watch Amazon Web Services Secret Access Key
  required: false
  name: CLOUDWATCH_AWS_SECRET_ACCESS_KEY
- displayName: Cloud Watch Amazon Web Services Logging Group
  required: false
  name: CLOUDWATCH_LOG_GROUP

- displayName: GCP Credentials
  from: ${GCP_CREDENTIALS}
  name: GCP_CREDENTIALS
  required: true
  value: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'

# (optional) flower params
- description: One of 'basic', 'google', or 'github'
  displayName: Flower auth scheme
  name: FLOWER_AUTH_SCHEME
  required: false
- description: Flower basic auth parameters
  displayName: Flower basic auth parameters
  name: FLOWER_BASIC_AUTH_PARAMS
  required: false
- description: Flower OAuth2 key
  displayName: Flower OAuth2 key
  name: FLOWER_OAUTH2_KEY
  required: false
- description: Flower OAuth2 secret
  displayName: Flower OAuth2 secret
  name: FLOWER_OAUTH2_SECRET
  required: false
- description: Flower OAuth2 redirect URI
  displayName: Flower OAuth2 redirect URI
  name: FLOWER_OAUTH2_REDIRECT_URI
  required: false
  value: 'http://flower.example.com/login'
- description: Flower OAuth2 allowlisted domains
  displayName: Flower OAuth2 allowlisted domains
  name: FLOWER_OAUTH2_DOMAINS
  required: false
  value: '.*@example\.com'

  # optional sentry params
- description: Koku API Sentry DSN
  displayName: Koku API Sentry DSN
  name: KOKU_API_SENTRY_DSN
  required: false
- description: Koku Celery Sentry DSN
  displayName: Koku Celery Sentry DSN
  name: KOKU_CELERY_SENTRY_DSN
  required: false

# AWS S3 account creds
- displayName: S3 Bucket Access Key
  name: S3_ACCESS_KEY
  required: true
  value: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
- displayName: S3 Bucket Secret Key
  name: S3_SECRET
  required: true
  value: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
- displayName: S3 Region
  name: S3_REGION
  required: true
  value: us-east-1
- displayName: S3 Bucket
  name: S3_BUCKET
  required: true
  value: koku
- displayName: S3 Endpoint
  name: S3_ENDPOINT
  required: true
  value: s3.us-east-1.amazonaws.com
