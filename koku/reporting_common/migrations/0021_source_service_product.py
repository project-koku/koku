# Generated by Django 2.2.11 on 2020-03-18 18:52
import json
import pkgutil

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
from django.db import migrations
from django.db import models


def reload_source_service_products(apps, schema_editor):
    """Update report to database mapping."""
    SourceServiceProduct = apps.get_model("reporting_common", "SourceServiceProduct")
    SourceServiceProduct.objects.all().delete()

    data = pkgutil.get_data("reporting_common", "data/source_service_product.json")

    data = json.loads(data)

    for entry in data:
        map = SourceServiceProduct(**entry)
        map.save()


class Migration(migrations.Migration):

    dependencies = [("reporting_common", "0020_auto_20191022_1620_squashed_0025_auto_20200116_2048")]

    operations = [
        migrations.CreateModel(
            name="SourceServiceProduct",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("source", models.TextField()),
                ("service_category", models.TextField()),
                ("product_codes", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
            ],
        ),
        migrations.AddIndex(
            model_name="sourceserviceproduct",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["product_codes"], name="ix_rptcommsrcsrvprdcd_pocd"
            ),
        ),
        migrations.AddIndex(
            model_name="sourceserviceproduct",
            index=models.Index(fields=["service_category"], name="ix_rptcommsrcsrvprdcd_svc"),
        ),
        migrations.AlterUniqueTogether(name="sourceserviceproduct", unique_together={("source", "service_category")}),
        migrations.RunSQL(
            sql="""
COMMENT ON TABLE reporting_common_sourceserviceproduct IS 'Map of product codes to a service category for a source';
COMMENT ON COLUMN reporting_common_sourceserviceproduct.source IS 'Standardized source name (AWS, Azure, etc)';
COMMENT ON COLUMN reporting_common_sourceserviceproduct.service_category IS 'App-internal, normalized service category name (compute, database, network, etc)';
COMMENT ON COLUMN reporting_common_sourceserviceproduct.product_codes IS 'Array of associated product codes from the source.';
            """
        ),
        migrations.RunPython(code=reload_source_service_products),
    ]
