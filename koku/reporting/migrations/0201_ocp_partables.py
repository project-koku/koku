# Generated by Django 3.1.13 on 2021-10-26 16:49
import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations
from django.db import models

from koku.database import set_pg_extended_mode
from koku.database import unset_pg_extended_mode


class Migration(migrations.Migration):

    dependencies = [("api", "0050_exchangerates"), ("reporting", "0200_ocpgcp_partables")]

    operations = [
        migrations.RunPython(code=set_pg_extended_mode, reverse_code=unset_pg_extended_mode),
        migrations.CreateModel(
            name="OCPVolumeSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                (
                    "persistentvolumeclaim_usage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "volume_request_storage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_volume_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_volume_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="OCPVolumeSummaryByProjectP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                (
                    "persistentvolumeclaim_usage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "volume_request_storage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_volume_summary_by_project_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_volume_summary_by_project_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="OCPPodSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("pod_usage_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_usage_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("cluster_capacity_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                (
                    "cluster_capacity_memory_gigabyte_hours",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_pod_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_pod_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="OCPPodSummaryByProjectP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("pod_usage_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_usage_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("cluster_capacity_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                (
                    "cluster_capacity_memory_gigabyte_hours",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_pod_summary_by_project_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_pod_summary_by_project_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="OCPCostSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_cost_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_cost_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="OCPCostSummaryByProjectP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_project_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                (
                    "infrastructure_project_markup_cost",
                    models.DecimalField(decimal_places=15, max_digits=33, null=True),
                ),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_project_monthly_cost", models.JSONField(null=True)),
                ("supplementary_project_monthly_cost", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_cost_summary_by_project_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_cost_summary_by_project_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="OCPCostSummaryByNodeP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("node", models.CharField(max_length=253)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_ocp_cost_summary_by_node_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_ocp_cost_summary_by_node_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.AddIndex(
            model_name="ocpvolumesummaryp", index=models.Index(fields=["usage_start"], name="ocpvolsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="ocpvolumesummarybyprojectp",
            index=models.Index(fields=["usage_start"], name="ocpvolsumm_proj_usage_start"),
        ),
        migrations.AddIndex(
            model_name="ocpvolumesummarybyprojectp",
            index=models.Index(fields=["namespace"], name="ocpvolsumm_proj_namespace"),
        ),
        migrations.AddIndex(
            model_name="ocppodsummaryp", index=models.Index(fields=["usage_start"], name="ocppodsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="ocppodsummarybyprojectp",
            index=models.Index(fields=["usage_start"], name="ocppodsumm_proj_usage_start"),
        ),
        migrations.AddIndex(
            model_name="ocppodsummarybyprojectp",
            index=models.Index(fields=["namespace"], name="ocppodsumm_proj_namespace"),
        ),
        migrations.AddIndex(
            model_name="ocpcostsummaryp", index=models.Index(fields=["usage_start"], name="ocpcostsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="ocpcostsummarybyprojectp",
            index=models.Index(fields=["usage_start"], name="ocpcostsumm_proj_usage_start"),
        ),
        migrations.AddIndex(
            model_name="ocpcostsummarybyprojectp",
            index=models.Index(fields=["namespace"], name="ocpcostsumm_proj_namespace"),
        ),
        migrations.AddIndex(
            model_name="ocpcostsummarybynodep",
            index=models.Index(fields=["usage_start"], name="ocpcostsumm_node_usage_start"),
        ),
        migrations.AddIndex(
            model_name="ocpcostsummarybynodep", index=models.Index(fields=["node"], name="ocpcostsumm_node_node")
        ),
        migrations.RunPython(code=unset_pg_extended_mode, reverse_code=set_pg_extended_mode),
    ]
