# Generated by Django 2.2.11 on 2020-03-25 18:52
import django.contrib.postgres.fields
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [("reporting", "0102_auto_20200228_1812")]

    operations = [
        migrations.CreateModel(
            name="AzureComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                (
                    "instance_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("instance_count", models.IntegerField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.CharField(max_length=63, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.CharField(max_length=50)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummaryByLocation",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("resource_location", models.CharField(max_length=50)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_cost_summary_by_location", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("service_name", models.TextField()),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("service_name", models.TextField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.CharField(max_length=63, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("service_name", models.TextField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.CharField(max_length=63, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("service_name", models.TextField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.CharField(max_length=63, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(default="USD", max_length=10)),
            ],
            options={"db_table": "reporting_azure_storage_summary", "managed": False},
        ),
        migrations.RunSQL(
            sql="""
CREATE MATERIALIZED VIEW reporting_azure_cost_summary AS(
    SELECT row_number() OVER(ORDER BY usage_start) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start
)
;

CREATE UNIQUE INDEX azure_cost_summary
ON reporting_azure_cost_summary (usage_start)
;

CREATE MATERIALIZED VIEW reporting_azure_cost_summary_by_account AS(
    SELECT row_number() OVER(ORDER BY usage_start, subscription_guid) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        subscription_guid,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start, subscription_guid
)
;

CREATE UNIQUE INDEX azure_cost_summary_account
ON reporting_azure_cost_summary_by_account (usage_start, subscription_guid)
;

CREATE MATERIALIZED VIEW reporting_azure_cost_summary_by_location AS(
    SELECT row_number() OVER(ORDER BY usage_start, resource_location) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        resource_location,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start, resource_location
)
;

CREATE UNIQUE INDEX azure_cost_summary_location
ON reporting_azure_cost_summary_by_location (usage_start, resource_location)
;

CREATE MATERIALIZED VIEW reporting_azure_cost_summary_by_service AS(
    SELECT row_number() OVER(ORDER BY usage_start, service_name) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        service_name,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start, service_name
)
;

CREATE UNIQUE INDEX azure_cost_summary_service
ON reporting_azure_cost_summary_by_service (usage_start, service_name)
;

CREATE MATERIALIZED VIEW reporting_azure_compute_summary AS(
SELECT ROW_NUMBER() OVER(ORDER BY c.usage_start, c.instance_type) AS id,
       c.usage_start,
       c.usage_start as usage_end,
       c.instance_type,
       r.instance_ids,
       CARDINALITY(r.instance_ids) AS instance_count,
       c.usage_quantity,
       c.unit_of_measure,
       c.pretax_cost,
       c.markup_cost,
       c.currency
  FROM (
        -- this group by gets the counts
         SELECT usage_start,
                instance_type,
                SUM(usage_quantity) AS usage_quantity,
                MAX(unit_of_measure) AS unit_of_measure,
                SUM(pretax_cost) AS pretax_cost,
                SUM(markup_cost) AS markup_cost,
                MAX(currency) AS currency
           FROM reporting_azurecostentrylineitem_daily_summary
          WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
            AND instance_type IS NOT NULL
          GROUP
             BY usage_start,
                instance_type
       ) AS c
  JOIN (
        -- this group by gets the distinct resources running by day
         SELECT usage_start,
                instance_type,
                ARRAY_AGG(DISTINCT instance_id ORDER BY instance_id) as instance_ids
           FROM (
                  SELECT usage_start,
                         instance_type,
                         UNNEST(instance_ids) AS instance_id
                    FROM reporting_azurecostentrylineitem_daily_summary
                   WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                     AND instance_type IS NOT NULL
                ) AS x
          GROUP
             BY usage_start,
                instance_type
       ) AS r
    ON c.usage_start = r.usage_start
   AND c.instance_type = r.instance_type
       )
  WITH DATA
;

CREATE UNIQUE INDEX azure_compute_summary
    ON reporting_azure_compute_summary (usage_start, instance_type)
;

CREATE MATERIALIZED VIEW reporting_azure_storage_summary AS(
    SELECT row_number() OVER(ORDER BY usage_start, service_name) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        service_name,
        sum(usage_quantity) as usage_quantity,
        max(unit_of_measure) as unit_of_measure,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE service_name LIKE '%Storage%'
        AND usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start, service_name
)
;

CREATE UNIQUE INDEX azure_storage_summary
ON reporting_azure_storage_summary (usage_start, service_name)
;


CREATE MATERIALIZED VIEW reporting_azure_network_summary AS(
    SELECT row_number() OVER(ORDER BY usage_start, service_name) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        service_name,
        sum(usage_quantity) as usage_quantity,
        max(unit_of_measure) as unit_of_measure,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE service_name IN ('Virtual Network','VPN','DNS','Traffic Manager','ExpressRoute','Load Balancer','Application Gateway')
        AND usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start, service_name
)
;

CREATE UNIQUE INDEX azure_network_summary
ON reporting_azure_network_summary (usage_start, service_name)
;

CREATE MATERIALIZED VIEW reporting_azure_database_summary AS(
    SELECT row_number() OVER(ORDER BY usage_start, service_name) as id,
        usage_start as usage_start,
        usage_start as usage_end,
        service_name,
        sum(usage_quantity) as usage_quantity,
        max(unit_of_measure) as unit_of_measure,
        sum(pretax_cost) as pretax_cost,
        sum(markup_cost) as markup_cost,
        max(currency) as currency
    FROM reporting_azurecostentrylineitem_daily_summary
    -- Get data for this month or last month
    WHERE service_name IN ('Cosmos DB','Cache for Redis') OR service_name ILIKE '%database%'
        AND usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
    GROUP BY usage_start, service_name
)
;

CREATE UNIQUE INDEX azure_database_summary
ON reporting_azure_database_summary (usage_start, service_name)
;
            """
        ),
    ]
