# Generated by Django 3.1.13 on 2021-11-11 16:29
import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations
from django.db import models

from koku.database import set_pg_extended_mode
from koku.database import unset_pg_extended_mode


class Migration(migrations.Migration):

    dependencies = [("api", "0050_exchangerates"), ("reporting", "0208_savingsplan_markup_fields")]

    operations = [
        migrations.RunPython(code=set_pg_extended_mode, reverse_code=unset_pg_extended_mode),
        migrations.CreateModel(
            name="GCPStorageSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_storage_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_storage_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByServiceP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_service_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_storage_summary_by_service_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByRegionP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_region_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_storage_summary_by_region_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByProjectP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("project_id", models.CharField(max_length=256)),
                ("project_name", models.CharField(max_length=256)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_project_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_storage_summary_by_project_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByAccountP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_account_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_storage_summary_by_account_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPNetworkSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_network_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_network_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPDatabaseSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_database_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_database_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPCostSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_cost_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_cost_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByServiceP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_service_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_cost_summary_by_service_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByRegionP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_region_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_cost_summary_by_region_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByProjectP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("project_id", models.CharField(max_length=256)),
                ("project_name", models.CharField(max_length=256)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_project_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_cost_summary_by_project_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByAccountP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_account_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_cost_summary_by_account_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_compute_summary_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_compute_summary_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByServiceP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_service_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_compute_summary_by_service_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByRegionP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_region_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_compute_summary_by_region_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByProjectP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("project_id", models.CharField(max_length=256)),
                ("project_name", models.CharField(max_length=256)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_project_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_compute_summary_by_project_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByAccountP",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("credit_amount", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                (
                    "source_uuid",
                    models.ForeignKey(
                        db_column="source_uuid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.provider",
                    ),
                ),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_account_p"},
        ),
        migrations.RunSQL(
            sql="ALTER TABLE reporting_gcp_compute_summary_by_account_p ALTER COLUMN id SET DEFAULT uuid_generate_v4()",
            reverse_sql="select 1",
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummaryp", index=models.Index(fields=["usage_start"], name="gcpstorsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummaryp", index=models.Index(fields=["invoice_month"], name="gcpstorsumm_invmonth")
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyservicep",
            index=models.Index(fields=["usage_start"], name="gcpstorsumm_ser_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyservicep",
            index=models.Index(fields=["service_id"], name="gcpstorsumm_ser_service_id"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyservicep",
            index=models.Index(fields=["account_id"], name="gcpstorsumm_ser_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyservicep",
            index=models.Index(fields=["invoice_month"], name="gcpstorsumm_ser_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyregionp",
            index=models.Index(fields=["usage_start"], name="gcpstorsumm_reg_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyregionp",
            index=models.Index(fields=["account_id"], name="gcpstorsumm_reg_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyregionp",
            index=models.Index(fields=["invoice_month"], name="gcpstorsumm_reg_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyprojectp",
            index=models.Index(fields=["usage_start"], name="gcpstorsumm_pro_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyprojectp",
            index=models.Index(fields=["project_id"], name="gcpstorsumm_pro_project_id"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyprojectp",
            index=models.Index(fields=["account_id"], name="gcpstorsumm_pro_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyprojectp",
            index=models.Index(fields=["invoice_month"], name="gcpstorsumm_pro_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyaccountp",
            index=models.Index(fields=["usage_start"], name="gcpstorsumm_acc_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyaccountp",
            index=models.Index(fields=["account_id"], name="gcpstorsumm_acc_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpstoragesummarybyaccountp",
            index=models.Index(fields=["invoice_month"], name="gcpstorsumm_acc_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpnetworksummaryp", index=models.Index(fields=["usage_start"], name="gcpnetsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="gcpnetworksummaryp", index=models.Index(fields=["invoice_month"], name="gcpnetsumm_invmonth")
        ),
        migrations.AddIndex(
            model_name="gcpdatabasesummaryp", index=models.Index(fields=["usage_start"], name="gcpdbsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="gcpdatabasesummaryp", index=models.Index(fields=["invoice_month"], name="gcpdbsumm_invmonth")
        ),
        migrations.AddIndex(
            model_name="gcpcostsummaryp", index=models.Index(fields=["usage_start"], name="gcpcostsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="gcpcostsummaryp", index=models.Index(fields=["invoice_month"], name="gcpcostsumm_invmonth")
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyservicep",
            index=models.Index(fields=["usage_start"], name="gcpcostsumm_ser_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyservicep",
            index=models.Index(fields=["service_id"], name="gcpcostsumm_ser_service_id"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyservicep",
            index=models.Index(fields=["invoice_month"], name="gcpcostsumm_ser_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyregionp",
            index=models.Index(fields=["usage_start"], name="gcpcostsumm_reg_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyregionp", index=models.Index(fields=["region"], name="gcpcostsumm_reg_region")
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyregionp",
            index=models.Index(fields=["invoice_month"], name="gcpcostsumm_reg_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyprojectp",
            index=models.Index(fields=["usage_start"], name="gcpcostsumm_pro_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyprojectp",
            index=models.Index(fields=["project_id"], name="gcpcostsumm_pro_project_id"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyprojectp",
            index=models.Index(fields=["invoice_month"], name="gcpcostsumm_pro_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyaccountp",
            index=models.Index(fields=["usage_start"], name="gcpcostsumm_acc_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyaccountp",
            index=models.Index(fields=["account_id"], name="gcpcostsumm_acc_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpcostsummarybyaccountp",
            index=models.Index(fields=["invoice_month"], name="gcpcostsumm_acc_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummaryp", index=models.Index(fields=["usage_start"], name="gcpcompsumm_usage_start")
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummaryp", index=models.Index(fields=["instance_type"], name="gcpcompsumm_insttyp")
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummaryp", index=models.Index(fields=["invoice_month"], name="gcpcompsumm_invmonth")
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyservicep",
            index=models.Index(fields=["usage_start"], name="gcpcompsumm_ser_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyservicep",
            index=models.Index(fields=["instance_type"], name="gcpcompsumm_ser_insttyp"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyservicep",
            index=models.Index(fields=["invoice_month"], name="gcpcompsumm_ser_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyregionp",
            index=models.Index(fields=["account_id"], name="gcpcompsumm_reg_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyregionp",
            index=models.Index(fields=["usage_start"], name="gcpcompsumm_reg_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyregionp",
            index=models.Index(fields=["instance_type"], name="gcpcompsumm_reg_insttyp"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyregionp",
            index=models.Index(fields=["invoice_month"], name="gcpcompsumm_reg_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyprojectp",
            index=models.Index(fields=["usage_start"], name="gcpcompsumm_pro_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyprojectp",
            index=models.Index(fields=["instance_type"], name="gcpcompsumm_pro_insttyp"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyprojectp",
            index=models.Index(fields=["project_id"], name="gcpcompsumm_pro_project_id"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyprojectp",
            index=models.Index(fields=["invoice_month"], name="gcpcompsumm_pro_invmonth"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyaccountp",
            index=models.Index(fields=["account_id"], name="gcpcompsumm_acc_account_id"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyaccountp",
            index=models.Index(fields=["usage_start"], name="gcpcompsumm_acc_usage_start"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyaccountp",
            index=models.Index(fields=["instance_type"], name="gcpcompsumm_acc_insttyp"),
        ),
        migrations.AddIndex(
            model_name="gcpcomputesummarybyaccountp",
            index=models.Index(fields=["invoice_month"], name="gcpcompsumm_acc_invmonth"),
        ),
        migrations.RunPython(code=unset_pg_extended_mode, reverse_code=set_pg_extended_mode),
    ]
