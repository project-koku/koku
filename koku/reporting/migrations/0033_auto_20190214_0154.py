# Generated by Django 2.1.5 on 2019-02-14 01:54

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('reporting', '0032_auto_20190213_2152'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DROP VIEW IF EXISTS reporting_ocpawscostlineitem_daily;

            CREATE OR REPLACE VIEW reporting_ocpawscostlineitem_daily AS (
                SELECT ocp.cluster_id,
                    ocp.cluster_alias,
                    ocp.namespace,
                    ocp.pod,
                    ocp.node,
                    ocp.pod_labels,
                    ocp.pod_usage_cpu_core_seconds,
                    ocp.pod_request_cpu_core_seconds,
                    ocp.pod_limit_cpu_core_seconds,
                    ocp.pod_usage_memory_byte_seconds,
                    ocp.pod_request_memory_byte_seconds,
                    ocp.node_capacity_cpu_cores,
                    ocp.node_capacity_cpu_core_seconds,
                    ocp.node_capacity_memory_bytes,
                    ocp.node_capacity_memory_byte_seconds,
                    ocp.cluster_capacity_cpu_core_seconds,
                    ocp.cluster_capacity_memory_byte_seconds,
                    aws.cost_entry_product_id,
                    aws.cost_entry_pricing_id,
                    aws.cost_entry_reservation_id,
                    aws.line_item_type,
                    aws.usage_account_id,
                    aws.usage_start,
                    aws.usage_end,
                    aws.product_code,
                    aws.usage_type,
                    aws.operation,
                    aws.availability_zone,
                    aws.resource_id,
                    aws.usage_amount,
                    aws.normalization_factor,
                    aws.normalized_usage_amount,
                    aws.currency_code,
                    aws.unblended_rate,
                    aws.unblended_cost,
                    aws.blended_rate,
                    aws.blended_cost,
                    aws.public_on_demand_cost,
                    aws.public_on_demand_rate,
                    aws.tax_type,
                    aws.tags
                FROM reporting_awscostentrylineitem_daily as aws
                JOIN reporting_ocpusagelineitem_daily as ocp
                    ON aws.resource_id = ocp.resource_id
                        AND aws.usage_start::date = ocp.usage_start::date

                UNION

                SELECT ocp2.cluster_id,
                    ocp2.cluster_alias,
                    ocp2.namespace,
                    ocp2.pod,
                    ocp2.node,
                    ocp2.pod_labels,
                    ocp2.pod_usage_cpu_core_seconds,
                    ocp2.pod_request_cpu_core_seconds,
                    ocp2.pod_limit_cpu_core_seconds,
                    ocp2.pod_usage_memory_byte_seconds,
                    ocp2.pod_request_memory_byte_seconds,
                    ocp2.node_capacity_cpu_cores,
                    ocp2.node_capacity_cpu_core_seconds,
                    ocp2.node_capacity_memory_bytes,
                    ocp2.node_capacity_memory_byte_seconds,
                    ocp2.cluster_capacity_cpu_core_seconds,
                    ocp2.cluster_capacity_memory_byte_seconds,
                    aws2.cost_entry_product_id,
                    aws2.cost_entry_pricing_id,
                    aws2.cost_entry_reservation_id,
                    aws2.line_item_type,
                    aws2.usage_account_id,
                    aws2.usage_start,
                    aws2.usage_end,
                    aws2.product_code,
                    aws2.usage_type,
                    aws2.operation,
                    aws2.availability_zone,
                    aws2.resource_id,
                    aws2.usage_amount,
                    aws2.normalization_factor,
                    aws2.normalized_usage_amount,
                    aws2.currency_code,
                    aws2.unblended_rate,
                    aws2.unblended_cost,
                    aws2.blended_rate,
                    aws2.blended_cost,
                    aws2.public_on_demand_cost,
                    aws2.public_on_demand_rate,
                    aws2.tax_type,
                    aws2.tags
                FROM (
                    SELECT aws.id,
                        aws.usage_start,
                        LOWER(key) as key,
                        LOWER(value) as value
                        FROM reporting_awscostentrylineitem_daily as aws,
                            jsonb_each_text(aws.tags) labels
                ) AS aws
                JOIN (
                    SELECT ocp.id,
                        ocp.usage_start,
                        ocp.cluster_alias,
                        ocp.node,
                        ocp.namespace,
                        LOWER(key) as key,
                        LOWER(value) as value
                    FROM reporting_ocpusagelineitem_daily as ocp,
                        jsonb_each_text(ocp.pod_labels) labels
                ) AS ocp
                    ON aws.usage_start::date = ocp.usage_start::date
                        AND (
                            (aws.key = ocp.key AND aws.value = ocp.value)
                            OR (aws.key = 'ocp_cluster' AND aws.value = ocp.cluster_alias)
                            OR (aws.key = 'ocp_node' AND aws.value = ocp.node)
                            OR (aws.key = 'ocp_project' AND aws.value = ocp.namespace)
                        )
                JOIN reporting_awscostentrylineitem_daily as aws2
                    ON aws.id = aws2.id
                JOIN reporting_ocpusagelineitem_daily as ocp2
                    ON ocp.id = ocp2.id
            );
            """
        )
    ]
