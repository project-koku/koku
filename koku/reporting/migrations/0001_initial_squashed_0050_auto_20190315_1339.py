# Generated by Django 2.2.1 on 2019-05-31 16:01

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('reporting', '0001_initial'), ('reporting', '0002_auto_20180926_1818'), ('reporting', '0003_auto_20180928_1840'), ('reporting', '0004_auto_20181003_1633'), ('reporting', '0005_auto_20181003_1416'), ('reporting', '0006_awscostentrylineitemaggregates_account_alias'), ('reporting', '0007_awscostentrybill_provider_id'), ('reporting', '0008_auto_20181012_1724'), ('reporting', '0009_auto_20181016_1940'), ('reporting', '0010_auto_20181017_1659'), ('reporting', '0011_auto_20181018_1811'), ('reporting', '0012_auto_20181106_1502'), ('reporting', '0013_auto_20181107_1956'), ('reporting', '0014_auto_20181108_0207'), ('reporting', '0015_auto_20181109_1618'), ('reporting', '0016_delete_rate'), ('reporting', '0017_auto_20181121_1444'), ('reporting', '0018_auto_20181129_0217'), ('reporting', '0019_auto_20181206_2138'), ('reporting', '0020_auto_20181211_1557'), ('reporting', '0021_auto_20181212_1816'), ('reporting', '0022_auto_20181221_1617'), ('reporting', '0023_awscostentrylineitemdailysummary_tags'), ('reporting', '0024_ocpusagepodlabelsummary'), ('reporting', '0025_auto_20190128_1825'), ('reporting', '0026_auto_20190130_1746'), ('reporting', '0027_auto_20190205_1659'), ('reporting', '0028_auto_20190205_2022'), ('reporting', '0029_auto_20190207_1526'), ('reporting', '0030_auto_20190208_0159'), ('reporting', '0031_ocpawscostlineitemdailysummary_instance_type'), ('reporting', '0032_auto_20190213_2152'), ('reporting', '0033_auto_20190214_1637'), ('reporting', '0034_ocpstoragevolumeclaimlabelsummary_ocpstoragevolumelabelsummary'), ('reporting', '0035_ocpawscostlineitemdailysummary_currency_code'), ('reporting', '0036_auto_20190215_2058'), ('reporting', '0037_auto_20190218_2054'), ('reporting', '0038_auto_20190220_1511'), ('reporting', '0039_auto_20190220_1610'), ('reporting', '0040_auto_20190226_1538'), ('reporting', '0041_auto_20190301_1548'), ('reporting', '0042_awscostentrylineitemdailysummary_resource_ids'), ('reporting', '0043_auto_20190228_2016'), ('reporting', '0044_costsummary'), ('reporting', '0045_auto_20190308_1839'), ('reporting', '0046_auto_20190313_1533'), ('reporting', '0047_auto_20190311_2021'), ('reporting', '0048_auto_20190313_1804'), ('reporting', '0049_auto_20190314_2016'), ('reporting', '0050_auto_20190315_1339')]

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AWSAccountAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=50, unique=True)),
                ('account_alias', models.CharField(max_length=63, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AWSCostEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval_start', models.DateTimeField()),
                ('interval_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AWSCostEntryBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_resource', models.CharField(default='aws', max_length=50)),
                ('bill_type', models.CharField(max_length=50)),
                ('payer_account_id', models.CharField(max_length=50)),
                ('billing_period_start', models.DateTimeField()),
                ('billing_period_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AWSCostEntryLineItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('hash', models.TextField(null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('invoice_id', models.CharField(max_length=63, null=True)),
                ('line_item_type', models.CharField(max_length=50)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('product_code', models.CharField(max_length=50)),
                ('usage_type', models.CharField(max_length=50, null=True)),
                ('operation', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('resource_id', models.CharField(max_length=256, null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('normalization_factor', models.FloatField(null=True)),
                ('normalized_usage_amount', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('unblended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('reservation_amortized_upfront_fee', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('reservation_amortized_upfront_cost_for_usage', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('reservation_recurring_fee_for_usage', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('reservation_unused_quantity', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('reservation_unused_recurring_fee', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('tax_type', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AWSCostEntryLineItemAggregates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_scope_value', models.IntegerField()),
                ('report_type', models.CharField(max_length=50)),
                ('usage_account_id', models.CharField(max_length=50, null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('region', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('resource_count', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'reporting_awscostentrylineitem_aggregates',
            },
        ),
        migrations.CreateModel(
            name='AWSCostEntryLineItemDaily',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('line_item_type', models.CharField(max_length=50)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('usage_type', models.CharField(max_length=50, null=True)),
                ('operation', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('resource_id', models.CharField(max_length=256, null=True)),
                ('usage_amount', models.FloatField(null=True)),
                ('normalization_factor', models.FloatField(null=True)),
                ('normalized_usage_amount', models.FloatField(null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('unblended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('tax_type', models.TextField(null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'db_table': 'reporting_awscostentrylineitem_daily',
            },
        ),
        migrations.CreateModel(
            name='AWSCostEntryLineItemDailySummary',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('product_code', models.CharField(max_length=50)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('instance_type', models.CharField(max_length=50, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('resource_count', models.IntegerField(null=True)),
                ('usage_amount', models.FloatField(null=True)),
                ('normalization_factor', models.FloatField(null=True)),
                ('normalized_usage_amount', models.FloatField(null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('unblended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('tax_type', models.TextField(null=True)),
            ],
            options={
                'db_table': 'reporting_awscostentrylineitem_daily_summary',
            },
        ),
        migrations.CreateModel(
            name='AWSCostEntryPricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=63, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AWSCostEntryProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=128, null=True)),
                ('product_name', models.CharField(max_length=63, null=True)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('service_code', models.CharField(max_length=50, null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('instance_type', models.CharField(max_length=50, null=True)),
                ('memory', models.FloatField(null=True)),
                ('memory_unit', models.CharField(max_length=24, null=True)),
                ('vcpu', models.PositiveIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AWSCostEntryReservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_arn', models.TextField(unique=True)),
                ('number_of_reservations', models.PositiveIntegerField(null=True)),
                ('units_per_reservation', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
            ],
        ),
        migrations.AddIndex(
            model_name='awscostentryproduct',
            index=models.Index(fields=['region'], name='region_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='awscostentryproduct',
            unique_together={('sku', 'product_name', 'region')},
        ),
        migrations.AlterUniqueTogether(
            name='awscostentrypricing',
            unique_together={('term', 'unit')},
        ),
        migrations.AddField(
            model_name='awscostentrylineitemdailysummary',
            name='account_alias',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSAccountAlias'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitemdaily',
            name='cost_entry_pricing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryPricing'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitemdaily',
            name='cost_entry_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryProduct'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitemdaily',
            name='cost_entry_reservation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryReservation'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitem',
            name='cost_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntry'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitem',
            name='cost_entry_bill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryBill'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitem',
            name='cost_entry_pricing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryPricing'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitem',
            name='cost_entry_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryProduct'),
        ),
        migrations.AddField(
            model_name='awscostentrylineitem',
            name='cost_entry_reservation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryReservation'),
        ),
        migrations.AddField(
            model_name='awscostentry',
            name='bill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSCostEntryBill'),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdailysummary',
            index=models.Index(fields=['usage_start'], name='summary_usage_start_idx'),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdailysummary',
            index=models.Index(fields=['product_code'], name='summary_product_code_idx'),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdailysummary',
            index=models.Index(fields=['usage_account_id'], name='summary_usage_account_id_idx'),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdaily',
            index=models.Index(fields=['usage_start'], name='usage_start_idx'),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdaily',
            index=models.Index(fields=['product_code'], name='product_code_idx'),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdaily',
            index=models.Index(fields=['usage_account_id'], name='usage_account_id_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='awscostentrylineitem',
            unique_together={('hash', 'cost_entry')},
        ),
        migrations.AddIndex(
            model_name='awscostentry',
            index=models.Index(fields=['interval_start'], name='interval_start_idx'),
        ),
        migrations.CreateModel(
            name='OCPUsageLineItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_usage_cpu_core_seconds', models.DecimalField(decimal_places=5, max_digits=17, null=True)),
                ('pod_usage_memory_seconds', models.DecimalField(decimal_places=5, max_digits=17, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OCPUsageLineItemDaily',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_usage_cpu_core_seconds', models.DecimalField(decimal_places=5, max_digits=17, null=True)),
                ('pod_usage_memory_seconds', models.DecimalField(decimal_places=5, max_digits=17, null=True)),
            ],
            options={
                'db_table': 'reporting_ocpusagelineitem_daily',
            },
        ),
        migrations.CreateModel(
            name='OCPUsageLineItemDailySummary',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_usage_cpu_core_seconds', models.DecimalField(decimal_places=5, max_digits=17, null=True)),
                ('pod_usage_memory_seconds', models.DecimalField(decimal_places=5, max_digits=17, null=True)),
            ],
            options={
                'db_table': 'reporting_ocpusagelineitem_daily_summary',
            },
        ),
        migrations.CreateModel(
            name='OCPUsageReportPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50)),
                ('report_period_start', models.DateTimeField()),
                ('report_period_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='OCPUsageReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval_start', models.DateTimeField()),
                ('interval_end', models.DateTimeField()),
                ('report_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.OCPUsageReportPeriod')),
            ],
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['usage_start'], name='summary_ocp_usage_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['namespace'], name='summary_namespace_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['pod'], name='summary_pod_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['node'], name='summary_node_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdaily',
            index=models.Index(fields=['usage_start'], name='ocp_usage_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdaily',
            index=models.Index(fields=['namespace'], name='namespace_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdaily',
            index=models.Index(fields=['pod'], name='pod_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdaily',
            index=models.Index(fields=['node'], name='node_idx'),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.OCPUsageReport'),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='report_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.OCPUsageReportPeriod'),
        ),
        migrations.AddIndex(
            model_name='ocpusagereport',
            index=models.Index(fields=['interval_start'], name='ocp_interval_start_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ocpusagelineitem',
            unique_together={('report', 'namespace', 'pod', 'node')},
        ),
        migrations.RenameField(
            model_name='ocpusagelineitem',
            old_name='pod_usage_memory_seconds',
            new_name='pod_limit_cpu_cores',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdaily',
            old_name='pod_usage_memory_seconds',
            new_name='pod_limit_cpu_cores',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdailysummary',
            old_name='pod_usage_memory_seconds',
            new_name='pod_limit_cpu_cores',
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='pod_limit_memory_bytes',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='pod_request_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='pod_request_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='pod_usage_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_limit_memory_bytes',
            field=models.DecimalField(decimal_places=5, max_digits=17, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_request_cpu_core_seconds',
            field=models.DecimalField(decimal_places=5, max_digits=17, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_request_memory_byte_seconds',
            field=models.DecimalField(decimal_places=5, max_digits=17, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_usage_memory_byte_seconds',
            field=models.DecimalField(decimal_places=5, max_digits=17, null=True),
        ),
        migrations.RemoveField(
            model_name='ocpusagelineitem',
            name='usage_end',
        ),
        migrations.RemoveField(
            model_name='ocpusagelineitem',
            name='usage_start',
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_limit_cpu_cores',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='pod_limit_memory_bytes',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='pod_request_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='pod_request_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_usage_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='pod_usage_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='awscostentrybill',
            name='finalized_datetime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='awscostentrybill',
            name='summary_data_creation_datetime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='awscostentrybill',
            name='summary_data_updated_datetime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='awscostentrylineitemaggregates',
            name='account_alias',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSAccountAlias'),
        ),
        migrations.AddField(
            model_name='awscostentrybill',
            name='provider_id',
            field=models.IntegerField(null=True),
        ),
        migrations.AlterUniqueTogether(
            name='awscostentrybill',
            unique_together={('bill_type', 'payer_account_id', 'billing_period_start')},
        ),
        migrations.CreateModel(
            name='OCPUsageLineItemAggregates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_scope_value', models.IntegerField()),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('pod_usage_cpu_core_hours', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_cpu_core_hours', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_cpu_cores', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_usage_memory_gigabytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_memory_gigabytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_memory_gigabytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
            ],
            options={
                'db_table': 'reporting_ocpusagelineitem_aggregates',
            },
        ),
        migrations.DeleteModel(
            name='OCPUsageLineItemDailySummary',
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='cluster_id',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagereportperiod',
            name='provider_id',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='ocpusagereportperiod',
            name='summary_data_creation_datetime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='ocpusagereportperiod',
            name='summary_data_updated_datetime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterUniqueTogether(
            name='ocpusagereport',
            unique_together={('report_period', 'interval_start')},
        ),
        migrations.AlterUniqueTogether(
            name='ocpusagereportperiod',
            unique_together={('cluster_id', 'report_period_start')},
        ),
        migrations.AlterField(
            model_name='ocpusagelineitemdaily',
            name='pod_limit_cpu_cores',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitemdaily',
            name='pod_usage_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.CreateModel(
            name='OCPUsageLineItemDailySummary',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_usage_cpu_core_hours', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_cpu_core_hours', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_cpu_cores', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_usage_memory_gigabytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_memory_gigabytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_memory_gigabytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
            ],
            options={
                'db_table': 'reporting_ocpusagelineitem_daily_summary',
            },
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='total_seconds',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['usage_start'], name='summary_ocp_usage_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['namespace'], name='summary_namespace_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['pod'], name='summary_pod_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['node'], name='summary_node_idx'),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='node_capacity_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='node_capacity_cpu_cores',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='node_capacity_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='node_capacity_memory_bytes',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='pod_labels',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemaggregates',
            name='node_capacity_cpu_core_hours',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemaggregates',
            name='node_capacity_cpu_cores',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemaggregates',
            name='node_capacity_memory_byte_hours',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemaggregates',
            name='node_capacity_memory_bytes',
            field=models.DecimalField(decimal_places=6, max_digits=20, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='node_capacity_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='node_capacity_cpu_cores',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='node_capacity_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='node_capacity_memory_bytes',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='pod_labels',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='node_capacity_cpu_core_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='node_capacity_cpu_cores',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_charge_cpu_core_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_charge_memory_gigabyte_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.RenameField(
            model_name='ocpusagelineitem',
            old_name='pod_limit_cpu_cores',
            new_name='pod_limit_cpu_core_seconds',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitem',
            old_name='pod_limit_memory_bytes',
            new_name='pod_limit_memory_byte_seconds',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemaggregates',
            old_name='pod_limit_cpu_cores',
            new_name='pod_limit_cpu_core_hours',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdaily',
            old_name='pod_limit_cpu_cores',
            new_name='pod_limit_cpu_core_seconds',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdaily',
            old_name='pod_limit_memory_bytes',
            new_name='pod_limit_memory_byte_seconds',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdailysummary',
            old_name='pod_limit_cpu_cores',
            new_name='pod_limit_cpu_core_hours',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdailysummary',
            old_name='pod_limit_memory_gigabytes',
            new_name='pod_limit_memory_gigabyte_hours',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdailysummary',
            old_name='pod_request_memory_gigabytes',
            new_name='pod_request_memory_gigabyte_hours',
        ),
        migrations.RenameField(
            model_name='ocpusagelineitemdailysummary',
            old_name='pod_usage_memory_gigabytes',
            new_name='pod_usage_memory_gigabyte_hours',
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='node_capacity_memory_gigabyte_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='node_capacity_memory_gigabytes',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_limit_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_limit_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_request_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_request_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_usage_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpusagelineitem',
            name='pod_usage_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='cluster_capacity_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='cluster_capacity_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='cluster_capacity_cpu_core_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='cluster_capacity_memory_gigabyte_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_label_key',
            field=models.CharField(max_length=253, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_label_value',
            field=models.CharField(max_length=253, null=True),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['pod_label_key'], name='pod_label_key_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=models.Index(fields=['pod_label_value'], name='pod_label_value_idx'),
        ),
        migrations.RemoveIndex(
            model_name='ocpusagelineitemdailysummary',
            name='pod_label_key_idx',
        ),
        migrations.RemoveIndex(
            model_name='ocpusagelineitemdailysummary',
            name='pod_label_value_idx',
        ),
        migrations.RemoveField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_label_key',
        ),
        migrations.RemoveField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_label_value',
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='pod_labels',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.AddIndex(
            model_name='ocpusagelineitemdailysummary',
            index=django.contrib.postgres.indexes.GinIndex(fields=['pod_labels'], name='pod_labels_idx'),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='cluster_alias',
            field=models.CharField(max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='cluster_alias',
            field=models.CharField(max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='awscostentrylineitemdailysummary',
            name='tags',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.CreateModel(
            name='OCPUsagePodLabelSummary',
            fields=[
                ('key', models.CharField(max_length=253, primary_key=True, serialize=False)),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None)),
            ],
            options={
                'db_table': 'reporting_ocpusagepodlabel_summary',
            },
        ),
        migrations.AddField(
            model_name='ocpusagelineitem',
            name='resource_id',
            field=models.CharField(max_length=253, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemaggregates',
            name='resource_id',
            field=models.CharField(max_length=253, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='resource_id',
            field=models.CharField(max_length=253, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='resource_id',
            field=models.CharField(max_length=253, null=True),
        ),
        migrations.CreateModel(
            name='AWSTagsSummary',
            fields=[
                ('key', models.CharField(max_length=253, primary_key=True, serialize=False)),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None)),
            ],
            options={
                'db_table': 'reporting_awstags_summary',
            },
        ),
        migrations.AddField(
            model_name='awscostentrylineitemaggregates',
            name='tags',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdailysummary',
            index=django.contrib.postgres.indexes.GinIndex(fields=['tags'], name='tags_idx'),
        ),
        migrations.RunSQL(
            sql='\n            DROP VIEW IF EXISTS reporting_ocpawscostlineitem_daily;\n\n            CREATE OR REPLACE VIEW reporting_ocpawscostlineitem_daily AS (\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.pod_labels,\n                    ocp.pod_usage_cpu_core_seconds,\n                    ocp.pod_request_cpu_core_seconds,\n                    ocp.pod_limit_cpu_core_seconds,\n                    ocp.pod_usage_memory_byte_seconds,\n                    ocp.pod_request_memory_byte_seconds,\n                    ocp.node_capacity_cpu_cores,\n                    ocp.node_capacity_cpu_core_seconds,\n                    ocp.node_capacity_memory_bytes,\n                    ocp.node_capacity_memory_byte_seconds,\n                    ocp.cluster_capacity_cpu_core_seconds,\n                    ocp.cluster_capacity_memory_byte_seconds,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags\n                FROM reporting_awscostentrylineitem_daily as aws\n                JOIN reporting_ocpusagelineitem_daily as ocp\n                    ON aws.resource_id = ocp.resource_id\n                        AND aws.usage_start::date = ocp.usage_start::date\n            );\n            ',
        ),
        migrations.CreateModel(
            name='OCPAWSCostLineItemDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('resource_id', models.CharField(max_length=253, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_usage_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_usage_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_cpu_cores', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_memory_bytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('cluster_capacity_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('cluster_capacity_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('total_seconds', models.IntegerField()),
                ('pod_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('line_item_type', models.CharField(max_length=50)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('product_code', models.CharField(max_length=50)),
                ('usage_type', models.CharField(max_length=50, null=True)),
                ('operation', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('usage_amount', models.FloatField(null=True)),
                ('normalization_factor', models.FloatField(null=True)),
                ('normalized_usage_amount', models.FloatField(null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('unblended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('tax_type', models.TextField(null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'db_table': 'reporting_ocpawscostlineitem_daily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OCPAWSCostLineItemDailySummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('resource_id', models.CharField(max_length=253, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('pod_cost', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('account_alias', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='reporting.AWSAccountAlias')),
            ],
            options={
                'db_table': 'reporting_ocpawscostlineitem_daily_summary',
            },
        ),
        migrations.AddIndex(
            model_name='ocpawscostlineitemdailysummary',
            index=models.Index(fields=['usage_start'], name='cost_summary_ocp_usage_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpawscostlineitemdailysummary',
            index=models.Index(fields=['namespace'], name='cost_summary_namespace_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpawscostlineitemdailysummary',
            index=models.Index(fields=['node'], name='cost_summary_node_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpawscostlineitemdailysummary',
            index=django.contrib.postgres.indexes.GinIndex(fields=['pod_labels'], name='cost_pod_labels_idx'),
        ),
        migrations.CreateModel(
            name='OCPStorageLineItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253, null=True)),
                ('persistentvolumeclaim', models.CharField(max_length=253)),
                ('persistentvolume', models.CharField(max_length=253)),
                ('storageclass', models.CharField(max_length=50, null=True)),
                ('persistentvolumeclaim_capacity_bytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_capacity_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('volume_request_storage_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_usage_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolume_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('persistentvolumeclaim_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.OCPUsageReport')),
                ('report_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reporting.OCPUsageReportPeriod')),
            ],
            options={
                'unique_together': {('report', 'namespace', 'persistentvolumeclaim')},
            },
        ),
        migrations.AddField(
            model_name='ocpawscostlineitemdailysummary',
            name='normalized_usage_amount',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='ocpawscostlineitemdailysummary',
            name='usage_amount',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='ocpawscostlineitemdailysummary',
            name='instance_type',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='OCPStorageVolumeClaimLabelSummary',
            fields=[
                ('key', models.CharField(max_length=253, primary_key=True, serialize=False)),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None)),
            ],
            options={
                'db_table': 'reporting_ocpstoragevolumeclaimlabel_summary',
            },
        ),
        migrations.CreateModel(
            name='OCPStorageVolumeLabelSummary',
            fields=[
                ('key', models.CharField(max_length=253, primary_key=True, serialize=False)),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None)),
            ],
            options={
                'db_table': 'reporting_ocpstoragevolumelabel_summary',
            },
        ),
        migrations.AddField(
            model_name='ocpawscostlineitemdailysummary',
            name='currency_code',
            field=models.CharField(max_length=10, null=True),
        ),
        migrations.CreateModel(
            name='OCPStorageLineItemDaily',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253, null=True)),
                ('persistentvolumeclaim', models.CharField(max_length=253)),
                ('persistentvolume', models.CharField(max_length=253)),
                ('storageclass', models.CharField(max_length=50, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('persistentvolumeclaim_capacity_bytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_capacity_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('volume_request_storage_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_usage_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('total_seconds', models.IntegerField()),
                ('persistentvolume_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('persistentvolumeclaim_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('node', models.CharField(max_length=253, null=True)),
            ],
            options={
                'db_table': 'reporting_ocpstoragelineitem_daily',
            },
        ),
        migrations.CreateModel(
            name='OCPStorageLineItemDailySummary',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('persistentvolumeclaim', models.CharField(max_length=253)),
                ('persistentvolume', models.CharField(max_length=253)),
                ('storageclass', models.CharField(max_length=50, null=True)),
                ('pod', models.CharField(max_length=253, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('volume_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('persistentvolumeclaim_capacity_gigabyte', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_capacity_gigabyte_months', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('volume_request_storage_gigabyte_months', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_usage_gigabyte_months', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_charge_gb_month', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node', models.CharField(max_length=253, null=True)),
            ],
            options={
                'db_table': 'reporting_ocpstoragelineitem_daily_summary',
            },
        ),
        migrations.RunSQL(
            sql="\n            DROP VIEW IF EXISTS reporting_ocpawscostlineitem_daily;\n            DROP VIEW IF EXISTS reporting_ocpawsusagecostlineitem_daily;\n\n            CREATE OR REPLACE VIEW reporting_ocpawsusagelineitem_daily AS (\n                WITH cte_usage_tag_matched as (\n                    SELECT aws.id as aws_id,\n                            ocp.id as ocp_id,\n                            aws.usage_start,\n                            ocp.namespace\n                        FROM (\n                        SELECT aws.id,\n                            aws.usage_start,\n                            LOWER(key) as key,\n                            LOWER(value) as value\n                            FROM reporting_awscostentrylineitem_daily as aws,\n                                jsonb_each_text(aws.tags) labels\n                        ) AS aws\n                        JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpusagelineitem_daily as ocp,\n                                jsonb_each_text(ocp.pod_labels) labels\n                        ) AS ocp\n                            ON aws.usage_start::date = ocp.usage_start::date\n                                AND (\n                                    (aws.key = ocp.key AND aws.value = ocp.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = ocp.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = ocp.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = ocp.namespace)\n                                )\n                        GROUP BY aws.id, ocp.id, aws.usage_start, ocp.namespace\n                ),\n                cte_number_of_shared_projects AS (\n                    SELECT usage_start,\n                        aws_id,\n                        count(DISTINCT namespace) as shared_projects\n                    FROM cte_usage_tag_matched\n                    GROUP BY usage_start, aws_id\n                )\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.pod_labels,\n                    ocp.pod_usage_cpu_core_seconds,\n                    ocp.pod_request_cpu_core_seconds,\n                    ocp.pod_limit_cpu_core_seconds,\n                    ocp.pod_usage_memory_byte_seconds,\n                    ocp.pod_request_memory_byte_seconds,\n                    ocp.node_capacity_cpu_cores,\n                    ocp.node_capacity_cpu_core_seconds,\n                    ocp.node_capacity_memory_bytes,\n                    ocp.node_capacity_memory_byte_seconds,\n                    ocp.cluster_capacity_cpu_core_seconds,\n                    ocp.cluster_capacity_memory_byte_seconds,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    1::int as shared_projects\n                FROM reporting_awscostentrylineitem_daily as aws\n                JOIN reporting_ocpusagelineitem_daily as ocp\n                    ON aws.resource_id = ocp.resource_id\n                        AND aws.usage_start::date = ocp.usage_start::date\n\n                UNION\n\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.pod_labels,\n                    ocp.pod_usage_cpu_core_seconds,\n                    ocp.pod_request_cpu_core_seconds,\n                    ocp.pod_limit_cpu_core_seconds,\n                    ocp.pod_usage_memory_byte_seconds,\n                    ocp.pod_request_memory_byte_seconds,\n                    ocp.node_capacity_cpu_cores,\n                    ocp.node_capacity_cpu_core_seconds,\n                    ocp.node_capacity_memory_bytes,\n                    ocp.node_capacity_memory_byte_seconds,\n                    ocp.cluster_capacity_cpu_core_seconds,\n                    ocp.cluster_capacity_memory_byte_seconds,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    tm.shared_projects\n                FROM (\n                    SELECT tm.usage_start,\n                        tm.ocp_id,\n                        tm.aws_id,\n                        max(sp.shared_projects) as shared_projects\n                    FROM cte_usage_tag_matched AS tm\n                    LEFT JOIN cte_number_of_shared_projects AS sp\n                        ON tm.aws_id = sp.aws_id\n                    GROUP BY tm.usage_start, tm.ocp_id, tm.aws_id\n                ) AS tm\n                JOIN reporting_awscostentrylineitem_daily as aws\n                    ON tm.aws_id = aws.id\n                JOIN reporting_ocpusagelineitem_daily as ocp\n                    ON tm.ocp_id = ocp.id\n            );\n            ",
        ),
        migrations.RunSQL(
            sql="\n            DROP VIEW IF EXISTS reporting_ocpawsstoragelineitem_daily;\n\n            CREATE OR REPLACE VIEW reporting_ocpawsstoragelineitem_daily AS (\n                WITH cte_storage_tag_matchted as (\n                    SELECT aws.id as aws_id,\n                            COALESCE(pvl.id, pvcl.id) as ocp_id,\n                            aws.usage_start,\n                            COALESCE(pvl.namespace, pvcl.namespace) as namespace\n                        FROM (\n                        SELECT aws.id,\n                            aws.usage_start,\n                            LOWER(key) as key,\n                            LOWER(value) as value\n                            FROM reporting_awscostentrylineitem_daily as aws,\n                                jsonb_each_text(aws.tags) labels\n                        ) AS aws\n                        LEFT JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpstoragelineitem_daily as ocp,\n                                jsonb_each_text(ocp.persistentvolume_labels) labels\n                        ) AS pvl\n                            ON aws.usage_start::date = pvl.usage_start::date\n                                AND (\n                                    (aws.key = pvl.key AND aws.value = pvl.value)\n                                    OR (aws.key = 'ocp_cluster' AND aws.value = pvl.cluster_alias)\n                                    OR (aws.key = 'ocp_node' AND aws.value = pvl.node)\n                                    OR (aws.key = 'ocp_project' AND aws.value = pvl.namespace)\n                                )\n                        LEFT JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpstoragelineitem_daily as ocp,\n                                jsonb_each_text(ocp.persistentvolumeclaim_labels) labels\n                    ) AS pvcl\n                            ON aws.usage_start::date = pvcl.usage_start::date\n                                AND (\n                                    (aws.key = pvcl.key AND aws.value = pvcl.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = pvcl.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = pvcl.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = pvcl.namespace)\n                                )\n                    WHERE (pvl.id IS NOT NULL OR pvcl.id IS NOT NULL) OR pvl.id = pvcl.id\n                    GROUP BY aws.usage_start, aws.id, pvl.id, pvcl.id, pvl.namespace, pvcl.namespace\n                ),\n                cte_number_of_shared_projects AS (\n                    SELECT usage_start,\n                        aws_id,\n                        count(DISTINCT namespace) as shared_projects\n                    FROM cte_storage_tag_matchted\n                    GROUP BY usage_start, aws_id\n                )\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.persistentvolumeclaim,\n                    ocp.persistentvolume,\n                    ocp.storageclass,\n                    ocp.persistentvolumeclaim_capacity_bytes,\n                    ocp.persistentvolumeclaim_capacity_byte_seconds,\n                    ocp.volume_request_storage_byte_seconds,\n                    ocp.persistentvolumeclaim_usage_byte_seconds,\n                    ocp.persistentvolume_labels,\n                    ocp.persistentvolumeclaim_labels,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    tm.shared_projects\n                FROM (\n                    SELECT tm.usage_start,\n                        tm.ocp_id,\n                        tm.aws_id,\n                        max(sp.shared_projects) as shared_projects\n                    FROM cte_storage_tag_matchted AS tm\n                    LEFT JOIN cte_number_of_shared_projects AS sp\n                        ON tm.aws_id = sp.aws_id\n                    GROUP BY tm.usage_start, tm.ocp_id, tm.aws_id\n                ) AS tm\n                JOIN reporting_awscostentrylineitem_daily as aws\n                    ON tm.aws_id = aws.id\n                JOIN reporting_ocpstoragelineitem_daily as ocp\n                    ON tm.ocp_id = ocp.id\n            )\n            ;\n            ",
        ),
        migrations.CreateModel(
            name='OCPAWSStorageLineItemDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('resource_id', models.CharField(max_length=253, null=True)),
                ('persistentvolumeclaim', models.CharField(max_length=253)),
                ('persistentvolume', models.CharField(max_length=253)),
                ('storageclass', models.CharField(max_length=50, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('persistentvolumeclaim_capacity_bytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_capacity_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('volume_request_storage_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_usage_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolume_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('persistentvolumeclaim_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('line_item_type', models.CharField(max_length=50)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('product_code', models.CharField(max_length=50)),
                ('usage_type', models.CharField(max_length=50, null=True)),
                ('operation', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('usage_amount', models.FloatField(null=True)),
                ('normalization_factor', models.FloatField(null=True)),
                ('normalized_usage_amount', models.FloatField(null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('unblended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('tax_type', models.TextField(null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'db_table': 'reporting_ocpawsstoragelineitem_daily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OCPAWSUsageLineItemDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253)),
                ('node', models.CharField(max_length=253)),
                ('resource_id', models.CharField(max_length=253, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_usage_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_usage_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_request_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_limit_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_cpu_cores', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_memory_bytes', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('node_capacity_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('cluster_capacity_cpu_core_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('cluster_capacity_memory_byte_seconds', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_labels', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('line_item_type', models.CharField(max_length=50)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('product_code', models.CharField(max_length=50)),
                ('usage_type', models.CharField(max_length=50, null=True)),
                ('operation', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('usage_amount', models.FloatField(null=True)),
                ('normalization_factor', models.FloatField(null=True)),
                ('normalized_usage_amount', models.FloatField(null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('unblended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('blended_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_cost', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('public_on_demand_rate', models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ('tax_type', models.TextField(null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'db_table': 'reporting_ocpawsusagelineitem_daily',
                'managed': False,
            },
        ),
        migrations.RemoveIndex(
            model_name='ocpawscostlineitemdailysummary',
            name='cost_pod_labels_idx',
        ),
        migrations.RenameField(
            model_name='ocpawscostlineitemdailysummary',
            old_name='pod_labels',
            new_name='openshift_labels',
        ),
        migrations.AddField(
            model_name='ocpawscostlineitemdailysummary',
            name='shared_projects',
            field=models.IntegerField(default=1),
        ),
        migrations.AddIndex(
            model_name='ocpawscostlineitemdailysummary',
            index=models.Index(fields=['resource_id'], name='cost_summary_resource_idx'),
        ),
        migrations.AddIndex(
            model_name='ocpawscostlineitemdailysummary',
            index=django.contrib.postgres.indexes.GinIndex(fields=['openshift_labels'], name='cost_labels_idx'),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='total_capacity_cpu_core_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdaily',
            name='total_capacity_memory_byte_seconds',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='total_capacity_cpu_core_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.AddField(
            model_name='ocpusagelineitemdailysummary',
            name='total_capacity_memory_gigabyte_hours',
            field=models.DecimalField(decimal_places=6, max_digits=24, null=True),
        ),
        migrations.RunSQL(
            sql="\n            DROP VIEW IF EXISTS reporting_ocpawsstoragelineitem_daily;\n\n            CREATE OR REPLACE VIEW reporting_ocpawsstoragelineitem_daily AS (\n                WITH cte_storage_tag_matchted as (\n                    SELECT aws.id as aws_id,\n                            COALESCE(pvl.id, pvcl.id) as ocp_id,\n                            aws.usage_start,\n                            COALESCE(pvl.namespace, pvcl.namespace) as namespace\n                        FROM (\n                        SELECT aws.id,\n                            aws.usage_start,\n                            LOWER(key) as key,\n                            LOWER(value) as value\n                            FROM reporting_awscostentrylineitem_daily as aws,\n                                jsonb_each_text(aws.tags) labels\n                        ) AS aws\n                        LEFT JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpstoragelineitem_daily as ocp,\n                                jsonb_each_text(ocp.persistentvolume_labels) labels\n                        ) AS pvl\n                            ON aws.usage_start::date = pvl.usage_start::date\n                                AND (\n                                    (aws.key = pvl.key AND aws.value = pvl.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = pvl.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = pvl.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = pvl.namespace)\n                                )\n                        LEFT JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpstoragelineitem_daily as ocp,\n                                jsonb_each_text(ocp.persistentvolumeclaim_labels) labels\n                    ) AS pvcl\n                            ON aws.usage_start::date = pvcl.usage_start::date\n                                AND (\n                                    (aws.key = pvcl.key AND aws.value = pvcl.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = pvcl.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = pvcl.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = pvcl.namespace)\n                                )\n                    WHERE (pvl.id IS NOT NULL OR pvcl.id IS NOT NULL) OR pvl.id = pvcl.id\n                    GROUP BY aws.usage_start, aws.id, pvl.id, pvcl.id, pvl.namespace, pvcl.namespace\n                ),\n                cte_number_of_shared_projects AS (\n                    SELECT usage_start,\n                        aws_id,\n                        count(DISTINCT namespace) as shared_projects\n                    FROM cte_storage_tag_matchted\n                    GROUP BY usage_start, aws_id\n                )\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.persistentvolumeclaim,\n                    ocp.persistentvolume,\n                    ocp.storageclass,\n                    ocp.persistentvolumeclaim_capacity_bytes,\n                    ocp.persistentvolumeclaim_capacity_byte_seconds,\n                    ocp.volume_request_storage_byte_seconds,\n                    ocp.persistentvolumeclaim_usage_byte_seconds,\n                    ocp.persistentvolume_labels,\n                    ocp.persistentvolumeclaim_labels,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    tm.shared_projects\n                FROM (\n                    SELECT tm.usage_start,\n                        tm.ocp_id,\n                        tm.aws_id,\n                        max(sp.shared_projects) as shared_projects\n                    FROM cte_storage_tag_matchted AS tm\n                    LEFT JOIN cte_number_of_shared_projects AS sp\n                        ON tm.aws_id = sp.aws_id\n                    GROUP BY tm.usage_start, tm.ocp_id, tm.aws_id\n                ) AS tm\n                JOIN reporting_awscostentrylineitem_daily as aws\n                    ON tm.aws_id = aws.id\n                JOIN reporting_ocpstoragelineitem_daily as ocp\n                    ON tm.ocp_id = ocp.id\n            )\n            ;\n            ",
        ),
        migrations.AddField(
            model_name='awscostentrylineitemdailysummary',
            name='resource_ids',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), null=True, size=None),
        ),
        migrations.RemoveField(
            model_name='awscostentrylineitemaggregates',
            name='account_alias',
        ),
        migrations.DeleteModel(
            name='OCPUsageLineItemAggregates',
        ),
        migrations.DeleteModel(
            name='AWSCostEntryLineItemAggregates',
        ),
        migrations.CreateModel(
            name='CostSummary',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cluster_id', models.CharField(max_length=50, null=True)),
                ('cluster_alias', models.CharField(max_length=256, null=True)),
                ('namespace', models.CharField(max_length=253)),
                ('pod', models.CharField(max_length=253, null=True)),
                ('node', models.CharField(max_length=253, null=True)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField()),
                ('pod_charge_cpu_core_hours', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('pod_charge_memory_gigabyte_hours', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ('persistentvolumeclaim_charge_gb_month', models.DecimalField(decimal_places=6, max_digits=24, null=True)),
            ],
            options={
                'db_table': 'reporting_costs_summary',
                'managed': False,
            },
        ),
        migrations.RunSQL(
            sql='\n            DROP VIEW IF EXISTS reporting_costs_summary;\n\n            CREATE OR REPLACE VIEW reporting_costs_summary AS (\n                SELECT usageli.usage_start,\n                    usageli.usage_end,\n                    usageli.cluster_id,\n                    usageli.namespace,\n                    usageli.pod,\n                    COALESCE(usageli.pod_charge_cpu_core_hours, 0) AS pod_charge_cpu_core_hours,\n                    COALESCE(usageli.pod_charge_memory_gigabyte_hours, 0) AS pod_charge_memory_gigabyte_hours,\n                    COALESCE(storageli.persistentvolumeclaim_charge_gb_month, 0) AS persistentvolumeclaim_charge_gb_month\n                FROM reporting_ocpusagelineitem_daily_summary as usageli\n                LEFT JOIN reporting_ocpstoragelineitem_daily_summary as storageli\n                    ON usageli.usage_start = storageli.usage_start\n                        AND usageli.usage_end = storageli.usage_end\n                        AND usageli.cluster_id = storageli.cluster_id\n                        AND usageli.namespace = storageli.namespace\n                        AND usageli.pod = storageli.pod\n            )\n            ;\n            ',
        ),
        migrations.AddIndex(
            model_name='awscostentrylineitemdailysummary',
            index=models.Index(fields=['account_alias'], name='summary_account_alias_idx'),
        ),
        migrations.RunSQL(
            sql='\n            DROP VIEW IF EXISTS reporting_costs_summary;\n            DROP VIEW IF EXISTS reporting_ocpcosts_summary;\n\n            CREATE OR REPLACE VIEW reporting_ocpcosts_summary AS (\n                SELECT usageli.usage_start,\n                    usageli.usage_end,\n                    usageli.cluster_id,\n                    usageli.cluster_alias,\n                    usageli.namespace,\n                    usageli.pod,\n                    usageli.node,\n                    COALESCE(usageli.pod_charge_cpu_core_hours, 0) AS pod_charge_cpu_core_hours,\n                    COALESCE(usageli.pod_charge_memory_gigabyte_hours, 0) AS pod_charge_memory_gigabyte_hours,\n                    COALESCE(storageli.persistentvolumeclaim_charge_gb_month, 0) AS persistentvolumeclaim_charge_gb_month,\n                    COALESCE(ocp_aws.infra_cost, 0) as infra_cost,\n                    COALESCE(ocp_aws.project_infra_cost, 0) as project_infra_cost\n                FROM reporting_ocpusagelineitem_daily_summary as usageli\n                LEFT JOIN reporting_ocpstoragelineitem_daily_summary as storageli\n                    ON usageli.usage_start = storageli.usage_start\n                        AND usageli.usage_end = storageli.usage_end\n                        AND usageli.cluster_id = storageli.cluster_id\n                        AND usageli.namespace = storageli.namespace\n                        AND usageli.pod = storageli.pod\n                LEFT JOIN (\n                    SELECT cluster_id,\n                        usage_start,\n                        namespace,\n                        pod,\n                        node,\n                        sum(ocp_aws.unblended_cost / ocp_aws.shared_projects) as infra_cost,\n                        sum(ocp_aws.pod_cost) as project_infra_cost\n                    FROM reporting_ocpawscostlineitem_daily_summary AS ocp_aws\n                    GROUP BY cluster_id,\n                            usage_start,\n                            namespace,\n                            pod,\n                            node\n                ) as ocp_aws\n                    ON usageli.usage_start = ocp_aws.usage_start\n                        AND usageli.cluster_id = ocp_aws.cluster_id\n                        AND usageli.namespace = ocp_aws.namespace\n                        AND usageli.pod = ocp_aws.pod\n                        AND usageli.node = ocp_aws.node\n            )\n            ;\n            ',
        ),
        migrations.AlterModelTable(
            name='costsummary',
            table='reporting_ocpcosts_summary',
        ),
        migrations.AlterUniqueTogether(
            name='awscostentrybill',
            unique_together={('bill_type', 'payer_account_id', 'billing_period_start', 'provider_id')},
        ),
        migrations.AlterUniqueTogether(
            name='ocpusagereportperiod',
            unique_together={('cluster_id', 'report_period_start', 'provider_id')},
        ),
        migrations.RunSQL(
            sql='\n            DROP VIEW IF EXISTS reporting_ocpawsstoragelineitem_daily;\n            DROP VIEW IF EXISTS reporting_ocpawsusagelineitem_daily;\n            ',
        ),
        migrations.AlterField(
            model_name='awscostentrylineitemdaily',
            name='usage_amount',
            field=models.DecimalField(decimal_places=9, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='awscostentrylineitemdailysummary',
            name='usage_amount',
            field=models.DecimalField(decimal_places=9, max_digits=24, null=True),
        ),
        migrations.AlterField(
            model_name='ocpawscostlineitemdailysummary',
            name='usage_amount',
            field=models.DecimalField(decimal_places=9, max_digits=24, null=True),
        ),
        migrations.RunSQL(
            sql="\n            CREATE OR REPLACE VIEW reporting_ocpawsstoragelineitem_daily AS (\n                WITH cte_storage_tag_matchted as (\n                    SELECT aws.id as aws_id,\n                            COALESCE(pvl.id, pvcl.id) as ocp_id,\n                            aws.usage_start,\n                            COALESCE(pvl.namespace, pvcl.namespace) as namespace\n                        FROM (\n                        SELECT aws.id,\n                            aws.usage_start,\n                            LOWER(key) as key,\n                            LOWER(value) as value\n                            FROM reporting_awscostentrylineitem_daily as aws,\n                                jsonb_each_text(aws.tags) labels\n                        ) AS aws\n                        LEFT JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpstoragelineitem_daily as ocp,\n                                jsonb_each_text(ocp.persistentvolume_labels) labels\n                        ) AS pvl\n                            ON aws.usage_start::date = pvl.usage_start::date\n                                AND (\n                                    (aws.key = pvl.key AND aws.value = pvl.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = pvl.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = pvl.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = pvl.namespace)\n                                )\n                        LEFT JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpstoragelineitem_daily as ocp,\n                                jsonb_each_text(ocp.persistentvolumeclaim_labels) labels\n                    ) AS pvcl\n                            ON aws.usage_start::date = pvcl.usage_start::date\n                                AND (\n                                    (aws.key = pvcl.key AND aws.value = pvcl.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = pvcl.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = pvcl.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = pvcl.namespace)\n                                )\n                    WHERE (pvl.id IS NOT NULL OR pvcl.id IS NOT NULL) OR pvl.id = pvcl.id\n                    GROUP BY aws.usage_start, aws.id, pvl.id, pvcl.id, pvl.namespace, pvcl.namespace\n                ),\n                cte_number_of_shared_projects AS (\n                    SELECT usage_start,\n                        aws_id,\n                        count(DISTINCT namespace) as shared_projects\n                    FROM cte_storage_tag_matchted\n                    GROUP BY usage_start, aws_id\n                )\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.persistentvolumeclaim,\n                    ocp.persistentvolume,\n                    ocp.storageclass,\n                    ocp.persistentvolumeclaim_capacity_bytes,\n                    ocp.persistentvolumeclaim_capacity_byte_seconds,\n                    ocp.volume_request_storage_byte_seconds,\n                    ocp.persistentvolumeclaim_usage_byte_seconds,\n                    ocp.persistentvolume_labels,\n                    ocp.persistentvolumeclaim_labels,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    tm.shared_projects\n                FROM (\n                    SELECT tm.usage_start,\n                        tm.ocp_id,\n                        tm.aws_id,\n                        max(sp.shared_projects) as shared_projects\n                    FROM cte_storage_tag_matchted AS tm\n                    LEFT JOIN cte_number_of_shared_projects AS sp\n                        ON tm.aws_id = sp.aws_id\n                    GROUP BY tm.usage_start, tm.ocp_id, tm.aws_id\n                ) AS tm\n                JOIN reporting_awscostentrylineitem_daily as aws\n                    ON tm.aws_id = aws.id\n                JOIN reporting_ocpstoragelineitem_daily as ocp\n                    ON tm.ocp_id = ocp.id\n            )\n            ;\n\n            CREATE OR REPLACE VIEW reporting_ocpawsusagelineitem_daily AS (\n                WITH cte_usage_tag_matched as (\n                    SELECT aws.id as aws_id,\n                            ocp.id as ocp_id,\n                            aws.usage_start,\n                            ocp.namespace\n                        FROM (\n                        SELECT aws.id,\n                            aws.usage_start,\n                            LOWER(key) as key,\n                            LOWER(value) as value\n                            FROM reporting_awscostentrylineitem_daily as aws,\n                                jsonb_each_text(aws.tags) labels\n                        ) AS aws\n                        JOIN (\n                            SELECT ocp.id,\n                                ocp.usage_start,\n                                ocp.cluster_alias,\n                                ocp.node,\n                                ocp.namespace,\n                                LOWER(key) as key,\n                                LOWER(value) as value\n                            FROM reporting_ocpusagelineitem_daily as ocp,\n                                jsonb_each_text(ocp.pod_labels) labels\n                        ) AS ocp\n                            ON aws.usage_start::date = ocp.usage_start::date\n                                AND (\n                                    (aws.key = ocp.key AND aws.value = ocp.value)\n                                    OR (aws.key = 'openshift_cluster' AND aws.value = ocp.cluster_alias)\n                                    OR (aws.key = 'openshift_node' AND aws.value = ocp.node)\n                                    OR (aws.key = 'openshift_project' AND aws.value = ocp.namespace)\n                                )\n                        GROUP BY aws.id, ocp.id, aws.usage_start, ocp.namespace\n                ),\n                cte_number_of_shared_projects AS (\n                    SELECT usage_start,\n                        aws_id,\n                        count(DISTINCT namespace) as shared_projects\n                    FROM cte_usage_tag_matched\n                    GROUP BY usage_start, aws_id\n                )\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.pod_labels,\n                    ocp.pod_usage_cpu_core_seconds,\n                    ocp.pod_request_cpu_core_seconds,\n                    ocp.pod_limit_cpu_core_seconds,\n                    ocp.pod_usage_memory_byte_seconds,\n                    ocp.pod_request_memory_byte_seconds,\n                    ocp.node_capacity_cpu_cores,\n                    ocp.node_capacity_cpu_core_seconds,\n                    ocp.node_capacity_memory_bytes,\n                    ocp.node_capacity_memory_byte_seconds,\n                    ocp.cluster_capacity_cpu_core_seconds,\n                    ocp.cluster_capacity_memory_byte_seconds,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    1::int as shared_projects\n                FROM reporting_awscostentrylineitem_daily as aws\n                JOIN reporting_ocpusagelineitem_daily as ocp\n                    ON aws.resource_id = ocp.resource_id\n                        AND aws.usage_start::date = ocp.usage_start::date\n\n                UNION\n\n                SELECT ocp.cluster_id,\n                    ocp.cluster_alias,\n                    ocp.namespace,\n                    ocp.pod,\n                    ocp.node,\n                    ocp.pod_labels,\n                    ocp.pod_usage_cpu_core_seconds,\n                    ocp.pod_request_cpu_core_seconds,\n                    ocp.pod_limit_cpu_core_seconds,\n                    ocp.pod_usage_memory_byte_seconds,\n                    ocp.pod_request_memory_byte_seconds,\n                    ocp.node_capacity_cpu_cores,\n                    ocp.node_capacity_cpu_core_seconds,\n                    ocp.node_capacity_memory_bytes,\n                    ocp.node_capacity_memory_byte_seconds,\n                    ocp.cluster_capacity_cpu_core_seconds,\n                    ocp.cluster_capacity_memory_byte_seconds,\n                    aws.cost_entry_product_id,\n                    aws.cost_entry_pricing_id,\n                    aws.cost_entry_reservation_id,\n                    aws.line_item_type,\n                    aws.usage_account_id,\n                    aws.usage_start,\n                    aws.usage_end,\n                    aws.product_code,\n                    aws.usage_type,\n                    aws.operation,\n                    aws.availability_zone,\n                    aws.resource_id,\n                    aws.usage_amount,\n                    aws.normalization_factor,\n                    aws.normalized_usage_amount,\n                    aws.currency_code,\n                    aws.unblended_rate,\n                    aws.unblended_cost,\n                    aws.blended_rate,\n                    aws.blended_cost,\n                    aws.public_on_demand_cost,\n                    aws.public_on_demand_rate,\n                    aws.tax_type,\n                    aws.tags,\n                    tm.shared_projects\n                FROM (\n                    SELECT tm.usage_start,\n                        tm.ocp_id,\n                        tm.aws_id,\n                        max(sp.shared_projects) as shared_projects\n                    FROM cte_usage_tag_matched AS tm\n                    LEFT JOIN cte_number_of_shared_projects AS sp\n                        ON tm.aws_id = sp.aws_id\n                    GROUP BY tm.usage_start, tm.ocp_id, tm.aws_id\n                ) AS tm\n                JOIN reporting_awscostentrylineitem_daily as aws\n                    ON tm.aws_id = aws.id\n                JOIN reporting_ocpusagelineitem_daily as ocp\n                    ON tm.ocp_id = ocp.id\n            );\n            ",
        ),
    ]
