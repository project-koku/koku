# Generated by Django 3.2.18 on 2023-05-16 13:29
import uuid

from django.db import connection
from django.db import migrations
from django.db import models


def insert_tenant_schema_providers(apps, schema_editor):
    Provider = apps.get_model("api", "Provider")
    tenant_Provider = apps.get_model("reporting", "Provider")
    providers = Provider.objects.filter(customer__schema_name=connection.schema_name).all()

    for provider in providers:
        tenant_provider = tenant_Provider()
        tenant_provider.uuid = provider.uuid
        tenant_provider.name = provider.name
        tenant_provider.type = provider.type
        tenant_provider.save()


class Migration(migrations.Migration):

    dependencies = [
        ("reporting", "0277_store_aws_amoritized_cost"),
    ]

    operations = [
        migrations.CreateModel(
            name="Provider",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("name", models.TextField()),
                (
                    "type",
                    models.TextField(
                        choices=[
                            ("AWS", "AWS"),
                            ("OCP", "OCP"),
                            ("Azure", "Azure"),
                            ("GCP", "GCP"),
                            ("IBM", "IBM"),
                            ("OCI", "OCI"),
                            ("AWS-local", "AWS-local"),
                            ("Azure-local", "Azure-local"),
                            ("GCP-local", "GCP-local"),
                            ("IBM-local", "IBM-local"),
                            ("OCI-local", "OCI-local"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "provider",
            },
        ),
        migrations.RunPython(insert_tenant_schema_providers)
        # migrations.RunSQL(
        #     f"""
        #     INSERT INTO provider (
        #         SELECT p.uuid,
        #             p.name,
        #             p.type
        #         FROM public.api_provider p
        #         JOIN public.api_customer c
        #         ON p.customer_id = c.id
        #         WHERE c.schema_name = '{connection.schema_name}'
        #     )
        #     """
        # )
    ]
