# Generated by Django 2.2.6 on 2019-12-05 19:05

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reporting', '0088_auto_20191210_2116'),
    ]

    operations = [
        migrations.CreateModel(
            name='AWSComputeSummary',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('instance_type', models.CharField(max_length=50, null=True)),
                ('resource_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), null=True, size=None)),
                ('resource_count', models.IntegerField(null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_compute_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSComputeSummaryByAccount',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('instance_type', models.CharField(max_length=50, null=True)),
                ('resource_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), null=True, size=None)),
                ('resource_count', models.IntegerField(null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_compute_summary_by_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSComputeSummaryByRegion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('instance_type', models.CharField(max_length=50, null=True)),
                ('resource_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), null=True, size=None)),
                ('resource_count', models.IntegerField(null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_compute_summary_by_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSComputeSummaryByService',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('instance_type', models.CharField(max_length=50, null=True)),
                ('resource_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), null=True, size=None)),
                ('resource_count', models.IntegerField(null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_compute_summary_by_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSCostSummary',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_cost_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSCostSummaryByAccount',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_cost_summary_by_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSCostSummaryByRegion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_cost_summary_by_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSCostSummaryByService',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_cost_summary_by_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSDatabaseSummary',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_database_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSNetworkSummary',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_network_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSStorageSummary',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_storage_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSStorageSummaryByAccount',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('usage_account_id', models.CharField(max_length=50)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_storage_summary_by_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSStorageSummaryByRegion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('region', models.CharField(max_length=50, null=True)),
                ('availability_zone', models.CharField(max_length=50, null=True)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_storage_summary_by_region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWSStorageSummaryByService',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('usage_start', models.DateTimeField()),
                ('usage_end', models.DateTimeField(null=True)),
                ('product_code', models.CharField(max_length=50)),
                ('product_family', models.CharField(max_length=150, null=True)),
                ('usage_amount', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('unit', models.CharField(max_length=63, null=True)),
                ('unblended_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('markup_cost', models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ('currency_code', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'reporting_aws_storage_summary_by_service',
                'managed': False,
            },
        ),
        migrations.RunSQL(
            """
            CREATE MATERIALIZED VIEW reporting_aws_cost_summary AS(
                SELECT row_number() OVER(ORDER BY date(usage_start)) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE date_trunc('month', usage_start) = date_trunc('month', now())
                    OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                GROUP BY date(usage_start)
            )
            ;

            CREATE UNIQUE INDEX aws_cost_summary
            ON reporting_aws_cost_summary (usage_start)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_cost_summary_by_service AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), product_code, product_family) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    product_code,
                    product_family,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE date_trunc('month', usage_start) = date_trunc('month', now())
                    OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                GROUP BY date(usage_start), product_code, product_family
            )
            ;

            CREATE UNIQUE INDEX aws_cost_summary_service
            ON reporting_aws_cost_summary_by_service (usage_start, product_code, product_family)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_cost_summary_by_account AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), usage_account_id, account_alias_id) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    usage_account_id,
                    account_alias_id,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE date_trunc('month', usage_start) = date_trunc('month', now())
                    OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                GROUP BY date(usage_start), usage_account_id, account_alias_id
            )
            ;

            CREATE UNIQUE INDEX aws_cost_summary_account
            ON reporting_aws_cost_summary_by_account (usage_start, usage_account_id, account_alias_id)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_cost_summary_by_region AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), region, availability_zone) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    region,
                    availability_zone,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE date_trunc('month', usage_start) = date_trunc('month', now())
                    OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                GROUP BY date(usage_start), region, availability_zone
            )
            ;

            CREATE UNIQUE INDEX aws_cost_summary_region
            ON reporting_aws_cost_summary_by_region (usage_start, region, availability_zone)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_compute_summary AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), instance_type) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    instance_type,
                    array_agg(DISTINCT resource_id) as resource_ids,
                    count(DISTINCT resource_id) as resource_count,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary,
                    unnest(resource_ids) resource_id
                -- Get data for this month or last month
                WHERE instance_type IS NOT NULL
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), instance_type
            )
            ;

            CREATE UNIQUE INDEX aws_compute_summary
            ON reporting_aws_compute_summary (usage_start, instance_type)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_compute_summary_by_service AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), product_code, product_family, instance_type) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    product_code,
                    product_family,
                    instance_type,
                    array_agg(DISTINCT resource_id) as resource_ids,
                    count(DISTINCT resource_id) as resource_count,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary,
                    unnest(resource_ids) resource_id
                -- Get data for this month or last month
                WHERE instance_type IS NOT NULL
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), product_code, product_family, instance_type
            )
            ;

            CREATE UNIQUE INDEX aws_compute_summary_service
            ON reporting_aws_compute_summary_by_service (usage_start, product_code, product_family, instance_type)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_compute_summary_by_account AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), usage_account_id, account_alias_id, instance_type) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    usage_account_id,
                    account_alias_id,
                    instance_type,
                    array_agg(DISTINCT resource_id) as resource_ids,
                    count(DISTINCT resource_id) as resource_count,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary,
                    unnest(resource_ids) resource_id
                -- Get data for this month or last month
                WHERE instance_type IS NOT NULL
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), usage_account_id, account_alias_id, instance_type
            )
            ;

            CREATE UNIQUE INDEX aws_compute_summary_account
            ON reporting_aws_compute_summary_by_account (usage_start, usage_account_id, account_alias_id, instance_type)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_compute_summary_by_region AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), region, availability_zone, instance_type) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    region,
                    availability_zone,
                    instance_type,
                    array_agg(DISTINCT resource_id) as resource_ids,
                    count(DISTINCT resource_id) as resource_count,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary,
                    unnest(resource_ids) resource_id
                -- Get data for this month or last month
                WHERE instance_type IS NOT NULL
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), region, availability_zone, instance_type
            )
            ;

            CREATE UNIQUE INDEX aws_compute_summary_region
            ON reporting_aws_compute_summary_by_region (usage_start, region, availability_zone, instance_type)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_storage_summary AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), product_family) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    product_family,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_family LIKE '%Storage%'
                    AND unit = 'GB-Mo'
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), product_family
            )
            ;

            CREATE UNIQUE INDEX aws_storage_summary
            ON reporting_aws_storage_summary (usage_start, product_family)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_storage_summary_by_service AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), product_code, product_family) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    product_code,
                    product_family,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_family LIKE '%Storage%'
                    AND unit = 'GB-Mo'
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), product_code, product_family
            )
            ;

            CREATE UNIQUE INDEX aws_storage_summary_service
            ON reporting_aws_storage_summary_by_service (usage_start, product_code, product_family)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_storage_summary_by_account AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), usage_account_id, account_alias_id, product_family) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    usage_account_id,
                    account_alias_id,
                    product_family,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_family LIKE '%Storage%'
                    AND unit = 'GB-Mo'
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), usage_account_id, account_alias_id, product_family
            )
            ;

            CREATE UNIQUE INDEX aws_storage_summary_account
            ON reporting_aws_storage_summary_by_account (usage_start, usage_account_id, account_alias_id, product_family)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_storage_summary_by_region AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), region, availability_zone, product_family) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    region,
                    availability_zone,
                    product_family,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_family LIKE '%Storage%'
                    AND unit = 'GB-Mo'
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), region, availability_zone, product_family
            )
            ;

            CREATE UNIQUE INDEX aws_storage_summary_region
            ON reporting_aws_storage_summary_by_region (usage_start, region, availability_zone, product_family)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_network_summary AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), product_code) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    product_code,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_code IN ('AmazonVPC','AmazonCloudFront','AmazonRoute53','AmazonAPIGateway')
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), product_code
            )
            ;

            CREATE UNIQUE INDEX aws_network_summary
            ON reporting_aws_network_summary (usage_start, product_code)
            ;

            CREATE MATERIALIZED VIEW reporting_aws_database_summary AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), product_code) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    product_code,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_awscostentrylineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_code IN ('AmazonRDS','AmazonDynamoDB','AmazonElastiCache','AmazonNeptune','AmazonRedshift','AmazonDocumentDB')
                    AND (
                        date_trunc('month', usage_start) = date_trunc('month', now())
                            OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                    )
                GROUP BY date(usage_start), product_code
            )
            ;

            CREATE UNIQUE INDEX aws_database_summary
            ON reporting_aws_database_summary (usage_start, product_code)
            ;
            """
        ),
    ]
