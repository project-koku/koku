# Generated by Django 3.2.19 on 2023-06-08 15:23
import uuid

import django.db.models.deletion
from django.db import connection
from django.db import migrations
from django.db import models


def insert_tenant_schema_providers(apps, schema_editor):
    provider = apps.get_model("api", "Provider")
    tenant_api_provider = apps.get_model("reporting", "TenantAPIProvider")
    providers = provider.objects.filter(customer__schema_name=connection.schema_name).all()

    for p in providers:
        tenant_provider = tenant_api_provider()
        tenant_provider.uuid = p.uuid
        tenant_provider.name = p.name
        tenant_provider.type = p.type
        tenant_provider.provider = p
        tenant_provider.save()


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0059_alter_tenant_schema"),
        ("reporting", "0280_markup_amortized_cost"),
    ]

    operations = [
        migrations.CreateModel(
            name="TenantAPIProvider",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("type", models.TextField()),
                (
                    "provider",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
                ),
            ],
            options={
                "db_table": "reporting_tenant_api_provider",
            },
        ),
        migrations.RunPython(insert_tenant_schema_providers, reverse_code=migrations.RunPython.noop),
    ]
