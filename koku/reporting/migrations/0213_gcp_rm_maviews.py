# Generated by Django 3.1.13 on 2022-01-04 21:09
from django.db import migrations

SQL_TMPL = """DROP MATERIALIZED VIEW IF EXISTS {} CASCADE ;"""


def drop_matview_sql(model_str):
    return SQL_TMPL.format(model_str)


class Migration(migrations.Migration):

    dependencies = [("reporting", "0212_auto_20211203_1640")]

    operations = [
        migrations.RunSQL(sql=drop_matview_sql("reporting_gcp_compute_summary"), reverse_sql=migrations.RunSQL.noop),
        migrations.DeleteModel(name="GCPComputeSummary"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_compute_summary_by_account"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPComputeSummaryByAccount"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_compute_summary_by_project"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPComputeSummaryByProject"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_compute_summary_by_region"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPComputeSummaryByRegion"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_compute_summary_by_service"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPComputeSummaryByService"),
        migrations.RunSQL(sql=drop_matview_sql("reporting_gcp_cost_summary"), reverse_sql=migrations.RunSQL.noop),
        migrations.DeleteModel(name="GCPCostSummary"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_cost_summary_by_account"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPCostSummaryByAccount"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_cost_summary_by_project"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPCostSummaryByProject"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_cost_summary_by_region"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPCostSummaryByRegion"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_cost_summary_by_service"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPCostSummaryByService"),
        migrations.RunSQL(sql=drop_matview_sql("reporting_gcp_database_summary"), reverse_sql=migrations.RunSQL.noop),
        migrations.DeleteModel(name="GCPDatabaseSummary"),
        migrations.RunSQL(sql=drop_matview_sql("reporting_gcp_network_summary"), reverse_sql=migrations.RunSQL.noop),
        migrations.DeleteModel(name="GCPNetworkSummary"),
        migrations.RunSQL(sql=drop_matview_sql("reporting_gcp_storage_summary"), reverse_sql=migrations.RunSQL.noop),
        migrations.DeleteModel(name="GCPStorageSummary"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_storage_summary_by_account"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPStorageSummaryByAccount"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_storage_summary_by_project"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPStorageSummaryByProject"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_storage_summary_by_region"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPStorageSummaryByRegion"),
        migrations.RunSQL(
            sql=drop_matview_sql("reporting_gcp_storage_summary_by_service"), reverse_sql=migrations.RunSQL.noop
        ),
        migrations.DeleteModel(name="GCPStorageSummaryByService"),
    ]
