# Generated by Django 2.2.11 on 2020-03-23 20:39
import django.contrib.postgres.fields
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [
        (
            "reporting",
            "0105_ocpcostsummary_ocpcostsummarybynode_ocpcostsummarybyproject_ocppodsummary_ocppodsummarybyproject_ocp",
        )
    ]

    operations = [
        migrations.CreateModel(
            name="OCPAWSCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
            ],
            options={"db_table": "reporting_ocpaws_storage_summary", "managed": False},
        ),
        migrations.RunSQL(
            """
            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_cost_summary
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_cost_summary AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_cost_summary
            ON reporting_ocpaws_cost_summary (usage_start, cluster_id, cluster_alias)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_cost_summary_by_account
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_cost_summary_by_account AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias, usage_account_id, account_alias_id) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    usage_account_id,
                    account_alias_id,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias, usage_account_id, account_alias_id
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_cost_summary_account
            ON reporting_ocpaws_cost_summary_by_account (usage_start, cluster_id, cluster_alias, usage_account_id, account_alias_id)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_cost_summary_by_service
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_cost_summary_by_service AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias, product_code, product_family) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    product_code,
                    product_family,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias, product_code, product_family
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_cost_summary_service
            ON reporting_ocpaws_cost_summary_by_service (usage_start, cluster_id, cluster_alias, product_code, product_family)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_cost_summary_by_region
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_cost_summary_by_region AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias, region, availability_zone) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    region,
                    availability_zone,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias, region, availability_zone
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_cost_summary_region
            ON reporting_ocpaws_cost_summary_by_region (usage_start, cluster_id, cluster_alias, region, availability_zone)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_compute_summary
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_compute_summary AS(
                SELECT ROW_NUMBER() OVER(ORDER BY usage_start, cluster_id, cluster_alias, instance_type, resource_id) AS id,
                    usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    instance_type,
                    resource_id,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                WHERE usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                    AND instance_type IS NOT NULL
                GROUP BY usage_start, cluster_id, cluster_alias, instance_type, resource_id
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_compute_summary
                ON reporting_ocpaws_compute_summary (usage_start, cluster_id, cluster_alias, instance_type, resource_id)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_storage_summary
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_storage_summary AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias, product_family) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    product_family,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_family LIKE '%Storage%'
                    AND unit = 'GB-Mo'
                    AND usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias, product_family
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_storage_summary
            ON reporting_ocpaws_storage_summary (usage_start, cluster_id, cluster_alias, product_family)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_network_summary
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_network_summary AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias, product_code) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    product_code,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_code IN ('AmazonVPC','AmazonCloudFront','AmazonRoute53','AmazonAPIGateway')
                    AND usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias, product_code
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_network_summary
            ON reporting_ocpaws_network_summary (usage_start, cluster_id, cluster_alias, product_code)
            ;

            DROP MATERIALIZED VIEW IF EXISTS reporting_ocpaws_database_summary
            ;

            CREATE MATERIALIZED VIEW reporting_ocpaws_database_summary AS(
                SELECT row_number() OVER(ORDER BY usage_start, cluster_id, cluster_alias, product_code) as id,
                    usage_start as usage_start,
                    usage_start as usage_end,
                    cluster_id,
                    cluster_alias,
                    product_code,
                    sum(usage_amount) as usage_amount,
                    max(unit) as unit,
                    sum(unblended_cost) as unblended_cost,
                    sum(markup_cost) as markup_cost,
                    max(currency_code) as currency_code
                FROM reporting_ocpawscostlineitem_daily_summary
                -- Get data for this month or last month
                WHERE product_code IN ('AmazonRDS','AmazonDynamoDB','AmazonElastiCache','AmazonNeptune','AmazonRedshift','AmazonDocumentDB')
                    AND usage_start >= DATE_TRUNC('month', NOW() - '1 month'::interval)::date
                GROUP BY usage_start, cluster_id, cluster_alias, product_code
            )
            WITH DATA
            ;

            CREATE UNIQUE INDEX ocpaws_database_summary
            ON reporting_ocpaws_database_summary (usage_start, cluster_id, cluster_alias, product_code)
            ;
            """
        ),
    ]
