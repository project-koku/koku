# Generated by Django 3.1.13 on 2021-08-10 21:53
import logging
import os
import pkgutil
import uuid
from decimal import Decimal

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.db.models.deletion
import sqlparse
from django.db import migrations
from django.db import models
from jinjasql import JinjaSql

import reporting.partition.models
from koku import migration_sql_helpers as msh
from koku.database import set_pg_extended_schema_editor
from koku.database import unset_pg_extended_schema_editor


LOG = logging.getLogger(__name__)


def apply_partitioned_tables_trigger(apps, schema_editor):
    path = msh.find_db_functions_dir()
    for funcfile in ("partitioned_manage_trigger.sql",):
        msh.apply_sql_file(schema_editor, os.path.join(path, funcfile))


# def apply_initial_reporting_migration(apps, schema_editor):
#     conn = schema_editor.connection
#     schema = conn.get_schema()
#     if schema != "public":
#         jsql = JinjaSql()
#         init_sql = pkgutil.get_data("api.iam", "sql/tenant-from-template0.sql").decode("utf-8")
#         jparams = {"schema_name": schema}
#         init_sql, _ = jsql.prepare_query(init_sql, jparams)
#         with conn.cursor() as cur:
#             for stmt in sqlparse.split(init_sql):
#                 cur.execute(str(stmt))


def set_partitioned_mode(apps, schema_editor):
    set_pg_extended_schema_editor(schema_editor)


def unset_partitioned_mode(apps, schema_editor):
    unset_pg_extended_schema_editor(schema_editor)


def apply_views(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    initial = True

    replaces = []

    dependencies = [("api", "0001_initial")]

    operations = [
        migrations.RunSQL(sql="\ncreate extension if not exists pg_trgm schema public;\n"),
        # migrations.RunPython(code=apply_initial_reporting_migration),
        migrations.RunPython(code=set_partitioned_mode),
        migrations.CreateModel(
            name="PartitionedTable",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("schema_name", models.TextField(validators=[reporting.partition.models.validate_not_empty])),
                ("table_name", models.TextField(validators=[reporting.partition.models.validate_not_empty])),
                (
                    "partition_of_table_name",
                    models.TextField(validators=[reporting.partition.models.validate_not_empty]),
                ),
                ("partition_type", models.TextField(validators=[reporting.partition.models.validate_not_empty])),
                ("partition_col", models.TextField(validators=[reporting.partition.models.validate_not_empty])),
                ("partition_parameters", models.JSONField(validators=[reporting.partition.models.validate_not_empty])),
                ("active", models.BooleanField(default=True)),
                ("subpartition_type", models.TextField(null=True)),
                ("subpartition_col", models.TextField(null=True)),
            ],
            options={"db_table": "partitioned_tables"},
        ),
        migrations.AddIndex(
            model_name="partitionedtable",
            index=models.Index(fields=["schema_name", "table_name"], name="partable_table"),
        ),
        migrations.AddIndex(
            model_name="partitionedtable",
            index=models.Index(fields=["partition_type"], name="partable_partition_type"),
        ),
        migrations.AddIndex(
            model_name="partitionedtable",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["partition_parameters"], name="partable_partition_parameters"
            ),
        ),
        migrations.AlterUniqueTogether(name="partitionedtable", unique_together={("schema_name", "table_name")}),
        migrations.RunSQL("""ALTER TABLE partitioned_tables ALTER COLUMN active SET DEFAULT true"""),
        migrations.RunPython(code=apply_partitioned_tables_trigger),
        migrations.CreateModel(
            name="AWSComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSComputeSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_compute_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSComputeSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_compute_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSComputeSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_compute_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSCostSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_cost_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_storage_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSStorageSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_storage_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSStorageSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_storage_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSStorageSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_aws_storage_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("instance_type", models.TextField(null=True)),
                (
                    "instance_ids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
                ("instance_count", models.IntegerField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummaryByLocation",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("resource_location", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_cost_summary_by_location", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField()),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="AzureStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azure_storage_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByProject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("project_id", models.CharField(max_length=256, unique=True)),
                ("project_name", models.CharField(max_length=256)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_project", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPComputeSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_compute_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByProject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("project_id", models.CharField(max_length=256, unique=True)),
                ("project_name", models.CharField(max_length=256)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_project", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("account_id", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_storage_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByProject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("project_id", models.CharField(max_length=256, unique=True)),
                ("project_name", models.CharField(max_length=256)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_project", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="GCPStorageSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("account_id", models.CharField(max_length=50)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcp_storage_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_code", models.CharField(max_length=50)),
                ("instance_type", models.CharField(max_length=50)),
                ("resource_id", models.CharField(max_length=253)),
                ("usage_amount", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllCostLineItemDailySummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("source_type", models.TextField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                (
                    "namespace",
                    django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None),
                ),
                ("node", models.CharField(max_length=253, null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("tags", models.JSONField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("shared_projects", models.IntegerField(default=1)),
                ("source_uuid", models.UUIDField(null=True)),
                ("tags_hash", models.TextField(max_length=512)),
            ],
            options={"db_table": "reporting_ocpallcostlineitem_daily_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllCostLineItemProjectDailySummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("source_type", models.TextField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("node", models.CharField(max_length=253, null=True)),
                ("pod_labels", models.JSONField(null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("project_markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("pod_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpallcostlineitem_project_daily_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllCostSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_cost_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAllStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpall_storage_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummaryByRegion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("region", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary_by_region", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAWSStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpaws_storage_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureComputeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("instance_type", models.TextField(null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_compute_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureCostSummaryByAccount",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_cost_summary_by_account", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureCostSummaryByLocation",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("resource_location", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_cost_summary_by_location", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureCostSummaryByService",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_cost_summary_by_service", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureDatabaseSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_database_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureNetworkSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_network_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPAzureStorageSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("subscription_guid", models.TextField()),
                ("service_name", models.TextField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazure_storage_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPCostSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocp_cost_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPCostSummaryByNode",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("node", models.CharField(max_length=253)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocp_cost_summary_by_node", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPCostSummaryByProject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_project_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                (
                    "infrastructure_project_markup_cost",
                    models.DecimalField(decimal_places=15, max_digits=33, null=True),
                ),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
                ("infrastructure_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_project_monthly_cost", models.JSONField(null=True)),
                ("supplementary_project_monthly_cost", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocp_cost_summary_by_project", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPPodSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("pod_usage_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_usage_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("cluster_capacity_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                (
                    "cluster_capacity_memory_gigabyte_hours",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("infrastructure_monthly_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.JSONField(null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocp_pod_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPPodSummaryByProject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("pod_usage_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_usage_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("cluster_capacity_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                (
                    "cluster_capacity_memory_gigabyte_hours",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("source_uuid", models.UUIDField(null=True)),
                ("infrastructure_monthly_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.JSONField(null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocp_pod_summary_by_project", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPVolumeSummary",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                (
                    "persistentvolumeclaim_usage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "volume_request_storage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("infrastructure_monthly_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.JSONField(null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocp_volume_summary", "managed": False},
        ),
        migrations.CreateModel(
            name="OCPVolumeSummaryByProject",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                (
                    "persistentvolumeclaim_usage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "volume_request_storage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("source_uuid", models.UUIDField(null=True)),
                ("infrastructure_monthly_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.JSONField(null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocp_volume_summary_by_project", "managed": False},
        ),
        migrations.CreateModel(
            name="AWSAccountAlias",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("account_id", models.CharField(max_length=50, unique=True)),
                ("account_alias", models.CharField(max_length=63, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSCostEntry",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("interval_start", models.DateTimeField()),
                ("interval_end", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="AWSCostEntryBill",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("billing_resource", models.CharField(default="aws", max_length=50)),
                ("bill_type", models.CharField(max_length=50, null=True)),
                ("payer_account_id", models.CharField(max_length=50, null=True)),
                ("billing_period_start", models.DateTimeField()),
                ("billing_period_end", models.DateTimeField()),
                ("summary_data_creation_datetime", models.DateTimeField(null=True)),
                ("summary_data_updated_datetime", models.DateTimeField(null=True)),
                ("finalized_datetime", models.DateTimeField(null=True)),
                ("derived_cost_datetime", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSCostEntryLineItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("tags", models.JSONField(null=True)),
                ("invoice_id", models.CharField(max_length=63, null=True)),
                ("line_item_type", models.CharField(max_length=50)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("usage_start", models.DateTimeField()),
                ("usage_end", models.DateTimeField()),
                ("product_code", models.CharField(max_length=50)),
                ("usage_type", models.CharField(max_length=50, null=True)),
                ("operation", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("resource_id", models.CharField(max_length=256, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("normalization_factor", models.FloatField(null=True)),
                ("normalized_usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("unblended_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("blended_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("blended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("public_on_demand_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("public_on_demand_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("reservation_amortized_upfront_fee", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                (
                    "reservation_amortized_upfront_cost_for_usage",
                    models.DecimalField(decimal_places=9, max_digits=24, null=True),
                ),
                (
                    "reservation_recurring_fee_for_usage",
                    models.DecimalField(decimal_places=9, max_digits=24, null=True),
                ),
                ("reservation_unused_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("reservation_unused_recurring_fee", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("tax_type", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSCostEntryLineItemDaily",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("line_item_type", models.CharField(max_length=50)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField(null=True)),
                ("product_code", models.CharField(max_length=50)),
                ("usage_type", models.CharField(max_length=50, null=True)),
                ("operation", models.CharField(max_length=50, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("resource_id", models.CharField(max_length=256, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("normalization_factor", models.FloatField(null=True)),
                ("normalized_usage_amount", models.FloatField(null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("unblended_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("blended_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("blended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("public_on_demand_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("public_on_demand_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("tax_type", models.TextField(null=True)),
                ("tags", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_awscostentrylineitem_daily"},
        ),
        migrations.CreateModel(
            name="AWSCostEntryLineItemDailySummary",
            fields=[
                ("uuid", models.UUIDField(primary_key=True, serialize=False)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField(null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                (
                    "resource_ids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
                ("resource_count", models.IntegerField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("normalization_factor", models.FloatField(null=True)),
                ("normalized_usage_amount", models.FloatField(null=True)),
                ("currency_code", models.CharField(max_length=10)),
                ("unblended_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("blended_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("blended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("public_on_demand_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("public_on_demand_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("tax_type", models.TextField(null=True)),
                ("tags", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_awscostentrylineitem_daily_summary"},
        ),
        migrations.CreateModel(
            name="AWSCostEntryPricing",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("term", models.CharField(max_length=63, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSCostEntryProduct",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sku", models.CharField(max_length=128, null=True)),
                ("product_name", models.TextField(null=True)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("service_code", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("memory", models.FloatField(null=True)),
                ("memory_unit", models.CharField(max_length=24, null=True)),
                ("vcpu", models.PositiveIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSCostEntryReservation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("reservation_arn", models.TextField(unique=True)),
                ("number_of_reservations", models.PositiveIntegerField(null=True)),
                ("units_per_reservation", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("start_time", models.DateTimeField(null=True)),
                ("end_time", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSEnabledTagKeys",
            fields=[
                ("key", models.CharField(max_length=253, primary_key=True, serialize=False)),
                ("enabled", models.BooleanField(default=True)),
            ],
            options={"db_table": "reporting_awsenabledtagkeys"},
        ),
        migrations.RunSQL("""ALTER TABLE reporting_awsenabledtagkeys ALTER COLUMN enabled SET DEFAULT true"""),
        migrations.CreateModel(
            name="AWSOrganizationalUnit",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("org_unit_name", models.CharField(max_length=250)),
                ("org_unit_id", models.CharField(max_length=50)),
                ("org_unit_path", models.TextField()),
                ("level", models.PositiveSmallIntegerField()),
                ("created_timestamp", models.DateField(auto_now_add=True)),
                ("deleted_timestamp", models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AWSTagsSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("usage_account_id", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_awstags_summary"},
        ),
        migrations.CreateModel(
            name="AWSTagsValues",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("value", models.TextField()),
                (
                    "usage_account_ids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                (
                    "account_aliases",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
            ],
            options={"db_table": "reporting_awstags_values"},
        ),
        migrations.CreateModel(
            name="AzureCostEntryBill",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("billing_period_start", models.DateTimeField()),
                ("billing_period_end", models.DateTimeField()),
                ("summary_data_creation_datetime", models.DateTimeField(null=True)),
                ("summary_data_updated_datetime", models.DateTimeField(null=True)),
                ("finalized_datetime", models.DateTimeField(null=True)),
                ("derived_cost_datetime", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AzureCostEntryLineItemDaily",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("subscription_guid", models.TextField()),
                ("tags", models.JSONField(null=True)),
                ("usage_date", models.DateField()),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
            ],
            options={"db_table": "reporting_azurecostentrylineitem_daily"},
        ),
        migrations.CreateModel(
            name="AzureCostEntryLineItemDailySummary",
            fields=[
                ("uuid", models.UUIDField(primary_key=True, serialize=False)),
                ("subscription_guid", models.TextField()),
                ("instance_type", models.TextField(null=True)),
                ("service_name", models.TextField(null=True)),
                ("resource_location", models.TextField(null=True)),
                ("tags", models.JSONField(null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                (
                    "instance_ids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
                ("instance_count", models.IntegerField(null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_azurecostentrylineitem_daily_summary"},
        ),
        migrations.CreateModel(
            name="AzureCostEntryProductService",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("instance_id", models.TextField(max_length=512)),
                ("resource_location", models.TextField(null=True)),
                ("consumed_service", models.TextField(null=True)),
                ("resource_type", models.TextField(null=True)),
                ("resource_group", models.TextField(null=True)),
                ("additional_info", models.JSONField(null=True)),
                ("service_tier", models.TextField(null=True)),
                ("service_name", models.TextField(null=True)),
                ("service_info1", models.TextField(null=True)),
                ("service_info2", models.TextField(null=True)),
                ("instance_type", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AzureEnabledTagKeys",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("key", models.CharField(max_length=253, unique=True)),
            ],
            options={"db_table": "reporting_azureenabledtagkeys"},
        ),
        migrations.CreateModel(
            name="AzureMeter",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("meter_id", models.UUIDField(editable=False, unique=True)),
                ("meter_name", models.TextField()),
                ("meter_category", models.TextField(null=True)),
                ("meter_subcategory", models.TextField(null=True)),
                ("meter_region", models.TextField(null=True)),
                ("resource_rate", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.TextField(null=True)),
                ("unit_of_measure", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AzureTagsSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("subscription_guid", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_azuretags_summary"},
        ),
        migrations.CreateModel(
            name="AzureTagsValues",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("value", models.TextField()),
                (
                    "subscription_guids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
            ],
            options={"db_table": "reporting_azuretags_values"},
        ),
        migrations.CreateModel(
            name="CostSummary",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                ("pod", models.CharField(max_length=253, null=True)),
                ("node", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("pod_charge_cpu_core_hours", models.DecimalField(decimal_places=9, max_digits=27, null=True)),
                ("pod_charge_memory_gigabyte_hours", models.DecimalField(decimal_places=9, max_digits=27, null=True)),
                (
                    "persistentvolumeclaim_charge_gb_month",
                    models.DecimalField(decimal_places=9, max_digits=27, null=True),
                ),
                ("infra_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("project_infra_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=27, null=True)),
                ("project_markup_cost", models.DecimalField(decimal_places=9, max_digits=27, null=True)),
                ("pod_labels", models.JSONField(null=True)),
                ("monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
            ],
            options={"db_table": "reporting_ocpcosts_summary"},
        ),
        migrations.CreateModel(
            name="GCPCostEntryBill",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("billing_period_start", models.DateTimeField()),
                ("billing_period_end", models.DateTimeField()),
                ("summary_data_creation_datetime", models.DateTimeField(blank=True, null=True)),
                ("summary_data_updated_datetime", models.DateTimeField(blank=True, null=True)),
                ("finalized_datetime", models.DateTimeField(blank=True, null=True)),
                ("derived_cost_datetime", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GCPCostEntryLineItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("usage_start", models.DateTimeField()),
                ("usage_end", models.DateTimeField()),
                ("tags", models.JSONField(null=True)),
                ("usage_type", models.CharField(max_length=50, null=True)),
                ("location", models.CharField(blank=True, max_length=256, null=True)),
                ("country", models.CharField(blank=True, max_length=256, null=True)),
                ("region", models.CharField(blank=True, max_length=256, null=True)),
                ("zone", models.CharField(blank=True, max_length=256, null=True)),
                ("export_time", models.CharField(blank=True, max_length=256, null=True)),
                ("cost", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(blank=True, max_length=256, null=True)),
                ("conversion_rate", models.CharField(blank=True, max_length=256, null=True)),
                ("usage_to_pricing_units", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("usage_pricing_unit", models.CharField(blank=True, max_length=256, null=True)),
                ("credits", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("cost_type", models.CharField(blank=True, max_length=256, null=True)),
                ("line_item_type", models.CharField(max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcpcostentrylineitem"},
        ),
        migrations.CreateModel(
            name="GCPCostEntryLineItemDaily",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("line_item_type", models.CharField(max_length=256, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField(null=True)),
                ("tags", models.JSONField(null=True)),
                ("usage_type", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(blank=True, max_length=256, null=True)),
                ("cost", models.DecimalField(blank=True, decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(blank=True, max_length=256, null=True)),
                ("conversion_rate", models.CharField(blank=True, max_length=256, null=True)),
                ("usage_in_pricing_units", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("usage_pricing_unit", models.CharField(blank=True, max_length=256, null=True)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("tax_type", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcpcostentrylineitem_daily"},
        ),
        migrations.CreateModel(
            name="GCPCostEntryLineItemDailySummary",
            fields=[
                ("uuid", models.UUIDField(primary_key=True, serialize=False)),
                ("account_id", models.CharField(max_length=20)),
                ("project_id", models.CharField(max_length=256)),
                ("project_name", models.CharField(max_length=256)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("sku_id", models.CharField(max_length=256, null=True)),
                ("sku_alias", models.CharField(max_length=256, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField(null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("line_item_type", models.CharField(max_length=256, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("currency", models.CharField(max_length=10)),
                ("invoice_month", models.CharField(blank=True, max_length=256, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("tags", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_gcpcostentrylineitem_daily_summary"},
        ),
        migrations.CreateModel(
            name="GCPCostEntryProductService",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("service_id", models.CharField(max_length=256, null=True)),
                ("service_alias", models.CharField(blank=True, max_length=256, null=True)),
                ("sku_id", models.CharField(max_length=256, null=True)),
                ("sku_alias", models.CharField(max_length=256, null=True)),
            ],
            options={"db_table": "reporting_gcpcostentryproductservice"},
        ),
        migrations.CreateModel(
            name="GCPEnabledTagKeys",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("key", models.CharField(max_length=253, unique=True)),
            ],
            options={"db_table": "reporting_gcpenabledtagkeys"},
        ),
        migrations.CreateModel(
            name="GCPProject",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("account_id", models.CharField(max_length=20)),
                ("project_id", models.CharField(max_length=256, unique=True)),
                ("project_name", models.CharField(max_length=256)),
                ("project_labels", models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GCPTagsSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("account_id", models.TextField(null=True)),
                ("project_id", models.TextField(null=True)),
                ("project_name", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_gcptags_summary"},
        ),
        migrations.CreateModel(
            name="GCPTagsValues",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("value", models.TextField()),
                ("account_ids", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "project_ids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
                (
                    "project_names",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
            ],
            options={"db_table": "reporting_gcptags_values"},
        ),
        migrations.CreateModel(
            name="OCPAWSCostLineItemDailySummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                (
                    "namespace",
                    django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None),
                ),
                ("node", models.CharField(max_length=253, null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("tags", models.JSONField(null=True)),
                ("usage_amount", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("normalized_usage_amount", models.FloatField(null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("shared_projects", models.IntegerField(default=1)),
                ("project_costs", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpawscostlineitem_daily_summary"},
        ),
        migrations.CreateModel(
            name="OCPAWSCostLineItemProjectDailySummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("node", models.CharField(max_length=253, null=True)),
                ("persistentvolumeclaim", models.CharField(max_length=253, null=True)),
                ("persistentvolume", models.CharField(max_length=253, null=True)),
                ("storageclass", models.CharField(max_length=50, null=True)),
                ("pod_labels", models.JSONField(null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("product_code", models.CharField(max_length=50)),
                ("product_family", models.CharField(max_length=150, null=True)),
                ("instance_type", models.CharField(max_length=50, null=True)),
                ("usage_account_id", models.CharField(max_length=50)),
                ("availability_zone", models.CharField(max_length=50, null=True)),
                ("region", models.CharField(max_length=50, null=True)),
                ("unit", models.CharField(max_length=63, null=True)),
                ("usage_amount", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("normalized_usage_amount", models.FloatField(null=True)),
                ("currency_code", models.CharField(max_length=10, null=True)),
                ("unblended_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("project_markup_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("pod_cost", models.DecimalField(decimal_places=15, max_digits=30, null=True)),
                ("tags", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpawscostlineitem_project_daily_summary"},
        ),
        migrations.CreateModel(
            name="OCPAWSTagsSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.CharField(max_length=253)),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("usage_account_id", models.CharField(max_length=50, null=True)),
                ("namespace", models.TextField()),
                ("node", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_ocpawstags_summary"},
        ),
        migrations.CreateModel(
            name="OCPAWSTagsValues",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("value", models.TextField()),
                (
                    "usage_account_ids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                (
                    "account_aliases",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                ("cluster_ids", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "cluster_aliases",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                ("namespaces", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "nodes",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
            ],
            options={"db_table": "reporting_ocpawstags_values"},
        ),
        migrations.CreateModel(
            name="OCPAzureCostLineItemDailySummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                (
                    "namespace",
                    django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=253), size=None),
                ),
                ("node", models.CharField(max_length=253, null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("instance_type", models.TextField(null=True)),
                ("service_name", models.TextField(null=True)),
                ("resource_location", models.TextField(null=True)),
                ("tags", models.JSONField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ("currency", models.TextField(null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("shared_projects", models.IntegerField(default=1)),
                ("project_costs", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazurecostlineitem_daily_summary"},
        ),
        migrations.CreateModel(
            name="OCPAzureCostLineItemProjectDailySummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("node", models.CharField(max_length=253, null=True)),
                ("persistentvolumeclaim", models.CharField(max_length=253, null=True)),
                ("persistentvolume", models.CharField(max_length=253, null=True)),
                ("storageclass", models.CharField(max_length=50, null=True)),
                ("pod_labels", models.JSONField(null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("subscription_guid", models.TextField()),
                ("instance_type", models.TextField(null=True)),
                ("service_name", models.TextField(null=True)),
                ("resource_location", models.TextField(null=True)),
                ("usage_quantity", models.DecimalField(decimal_places=9, max_digits=24, null=True)),
                ("unit_of_measure", models.TextField(null=True)),
                ("currency", models.TextField(null=True)),
                ("pretax_cost", models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ("markup_cost", models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ("project_markup_cost", models.DecimalField(decimal_places=9, max_digits=17, null=True)),
                ("pod_cost", models.DecimalField(decimal_places=6, max_digits=24, null=True)),
                ("tags", models.JSONField(null=True)),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpazurecostlineitem_project_daily_summary"},
        ),
        migrations.CreateModel(
            name="OCPAzureTagsSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.CharField(max_length=253)),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("subscription_guid", models.TextField(null=True)),
                ("namespace", models.TextField()),
                ("node", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_ocpazuretags_summary"},
        ),
        migrations.CreateModel(
            name="OCPAzureTagsValues",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("value", models.TextField()),
                (
                    "subscription_guids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                ("cluster_ids", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "cluster_aliases",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                ("namespaces", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "nodes",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
            ],
            options={"db_table": "reporting_ocpazuretags_values"},
        ),
        migrations.CreateModel(
            name="OCPCluster",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("cluster_id", models.TextField()),
                ("cluster_alias", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_ocp_clusters"},
        ),
        migrations.CreateModel(
            name="OCPEnabledTagKeys",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("key", models.CharField(max_length=253, unique=True)),
            ],
            options={"db_table": "reporting_ocpenabledtagkeys"},
        ),
        migrations.CreateModel(
            name="OCPNamespaceLabelLineItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("namespace", models.CharField(max_length=253, null=True)),
                ("namespace_labels", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocpnamespacelabellineitem"},
        ),
        migrations.CreateModel(
            name="OCPNode",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("node", models.TextField()),
                ("resource_id", models.TextField(null=True)),
                ("node_capacity_cpu_cores", models.DecimalField(decimal_places=2, max_digits=18, null=True)),
            ],
            options={"db_table": "reporting_ocp_nodes"},
        ),
        migrations.CreateModel(
            name="OCPNodeLabelLineItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("node", models.CharField(max_length=253, null=True)),
                ("node_labels", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocpnodelabellineitem"},
        ),
        migrations.CreateModel(
            name="OCPNodeLabelLineItemDaily",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("node", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("node_labels", models.JSONField(null=True)),
                ("total_seconds", models.IntegerField()),
            ],
            options={"db_table": "reporting_ocpnodelabellineitem_daily"},
        ),
        migrations.CreateModel(
            name="OCPProject",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("project", models.TextField()),
            ],
            options={"db_table": "reporting_ocp_projects"},
        ),
        migrations.CreateModel(
            name="OCPPVC",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("persistent_volume_claim", models.TextField()),
                ("persistent_volume", models.TextField()),
            ],
            options={"db_table": "reporting_ocp_pvcs"},
        ),
        migrations.CreateModel(
            name="OCPStorageLineItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("namespace", models.CharField(max_length=253)),
                ("pod", models.CharField(max_length=253, null=True)),
                ("persistentvolumeclaim", models.CharField(max_length=253)),
                ("persistentvolume", models.CharField(max_length=253)),
                ("storageclass", models.CharField(max_length=50, null=True)),
                (
                    "persistentvolumeclaim_capacity_bytes",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                (
                    "volume_request_storage_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                (
                    "persistentvolumeclaim_usage_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                ("persistentvolume_labels", models.JSONField(null=True)),
                ("persistentvolumeclaim_labels", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OCPStorageLineItemDaily",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("pod", models.CharField(max_length=253, null=True)),
                ("node", models.CharField(max_length=253, null=True)),
                ("persistentvolumeclaim", models.CharField(max_length=253)),
                ("persistentvolume", models.CharField(max_length=253)),
                ("storageclass", models.CharField(max_length=50, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                (
                    "persistentvolumeclaim_capacity_bytes",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                (
                    "volume_request_storage_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                (
                    "persistentvolumeclaim_usage_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                ("total_seconds", models.IntegerField()),
                ("persistentvolume_labels", models.JSONField(null=True)),
                ("persistentvolumeclaim_labels", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocpstoragelineitem_daily"},
        ),
        migrations.CreateModel(
            name="OCPStorageVolumeLabelSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("namespace", models.TextField()),
                ("node", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_ocpstoragevolumelabel_summary"},
        ),
        migrations.CreateModel(
            name="OCPTagsValues",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("value", models.TextField()),
                ("cluster_ids", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "cluster_aliases",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                ),
                ("namespaces", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "nodes",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
            ],
            options={"db_table": "reporting_ocptags_values"},
        ),
        migrations.CreateModel(
            name="OCPUsageLineItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("namespace", models.CharField(max_length=253)),
                ("pod", models.CharField(max_length=253)),
                ("node", models.CharField(max_length=253)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("pod_usage_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_request_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_limit_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_usage_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_request_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_limit_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_cpu_cores", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_memory_bytes", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_labels", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OCPUsageLineItemDaily",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("namespace", models.CharField(max_length=253)),
                ("pod", models.CharField(max_length=253)),
                ("node", models.CharField(max_length=253)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("pod_usage_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_request_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_limit_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_usage_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_request_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("pod_limit_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_cpu_cores", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_memory_bytes", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("node_capacity_memory_byte_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                ("cluster_capacity_cpu_core_seconds", models.DecimalField(decimal_places=9, max_digits=73, null=True)),
                (
                    "cluster_capacity_memory_byte_seconds",
                    models.DecimalField(decimal_places=9, max_digits=73, null=True),
                ),
                ("total_seconds", models.IntegerField()),
                ("pod_labels", models.JSONField(null=True)),
            ],
            options={"db_table": "reporting_ocpusagelineitem_daily"},
        ),
        migrations.CreateModel(
            name="OCPUsageLineItemDailySummary",
            fields=[
                ("uuid", models.UUIDField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("data_source", models.CharField(max_length=64, null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                ("node", models.CharField(max_length=253, null=True)),
                ("resource_id", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("pod_labels", models.JSONField(null=True)),
                ("pod_usage_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_usage_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_request_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("pod_limit_memory_gigabyte_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("node_capacity_cpu_cores", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("node_capacity_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                ("node_capacity_memory_gigabytes", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                (
                    "node_capacity_memory_gigabyte_hours",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("cluster_capacity_cpu_core_hours", models.DecimalField(decimal_places=6, max_digits=12, null=True)),
                (
                    "cluster_capacity_memory_gigabyte_hours",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                ("persistentvolumeclaim", models.CharField(max_length=253, null=True)),
                ("persistentvolume", models.CharField(max_length=253, null=True)),
                ("storageclass", models.CharField(max_length=50, null=True)),
                ("volume_labels", models.JSONField(null=True)),
                (
                    "persistentvolumeclaim_capacity_gigabyte",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "persistentvolumeclaim_capacity_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "volume_request_storage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "persistentvolumeclaim_usage_gigabyte_months",
                    models.DecimalField(decimal_places=6, max_digits=12, null=True),
                ),
                (
                    "infrastructure_raw_cost",
                    models.DecimalField(decimal_places=15, default=Decimal("0"), max_digits=33, null=True),
                ),
                (
                    "infrastructure_project_raw_cost",
                    models.DecimalField(decimal_places=15, default=Decimal("0"), max_digits=33, null=True),
                ),
                ("infrastructure_usage_cost", models.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                (
                    "infrastructure_project_markup_cost",
                    models.DecimalField(decimal_places=15, max_digits=33, null=True),
                ),
                ("infrastructure_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost_json", models.JSONField(null=True)),
                ("supplementary_usage_cost", models.JSONField(null=True)),
                ("supplementary_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_monthly_cost_json", models.JSONField(null=True)),
                ("infrastructure_project_monthly_cost", models.JSONField(null=True)),
                ("supplementary_project_monthly_cost", models.JSONField(null=True)),
                (
                    "monthly_cost_type",
                    models.TextField(choices=[("Node", "Node"), ("Cluster", "Cluster"), ("PVC", "PVC")], null=True),
                ),
                ("source_uuid", models.UUIDField(null=True)),
            ],
            options={"db_table": "reporting_ocpusagelineitem_daily_summary"},
        ),
        migrations.CreateModel(
            name="OCPUsagePodLabelSummary",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("key", models.TextField()),
                ("values", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ("namespace", models.TextField()),
                ("node", models.TextField(null=True)),
            ],
            options={"db_table": "reporting_ocpusagepodlabel_summary"},
        ),
        migrations.CreateModel(
            name="OCPUsageReport",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("interval_start", models.DateTimeField()),
                ("interval_end", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="OCPUsageReportPeriod",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("cluster_id", models.CharField(max_length=50)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("report_period_start", models.DateTimeField()),
                ("report_period_end", models.DateTimeField()),
                ("summary_data_creation_datetime", models.DateTimeField(null=True)),
                ("summary_data_updated_datetime", models.DateTimeField(null=True)),
                ("derived_cost_datetime", models.DateTimeField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name="ocpusagereportperiod",
            name="provider",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddField(
            model_name="ocpusagereport",
            name="report_period",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"),
        ),
        migrations.AddField(
            model_name="ocpusagepodlabelsummary",
            name="report_period",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"),
        ),
        migrations.AddField(
            model_name="ocpusagelineitemdailysummary",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpusagelineitemdaily",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpusagelineitem",
            name="report",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereport"
            ),
        ),
        migrations.AddField(
            model_name="ocpusagelineitem",
            name="report_period",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddIndex(
            model_name="ocptagsvalues", index=models.Index(fields=["key"], name="openshift_tags_value_key_idx")
        ),
        migrations.AlterUniqueTogether(name="ocptagsvalues", unique_together={("key", "value")}),
        migrations.AddField(
            model_name="ocpstoragevolumelabelsummary",
            name="report_period",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"),
        ),
        migrations.AddField(
            model_name="ocpstoragelineitemdaily",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpstoragelineitem",
            name="report",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereport"
            ),
        ),
        migrations.AddField(
            model_name="ocpstoragelineitem",
            name="report_period",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocppvc",
            name="cluster",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpcluster"),
        ),
        migrations.AddField(
            model_name="ocpproject",
            name="cluster",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpcluster"),
        ),
        migrations.AddField(
            model_name="ocpnodelabellineitemdaily",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpnodelabellineitem",
            name="report",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereport"
            ),
        ),
        migrations.AddField(
            model_name="ocpnodelabellineitem",
            name="report_period",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpnode",
            name="cluster",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpcluster"),
        ),
        migrations.AddField(
            model_name="ocpnamespacelabellineitem",
            name="report",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereport"),
        ),
        migrations.AddField(
            model_name="ocpnamespacelabellineitem",
            name="report_period",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"),
        ),
        migrations.AddField(
            model_name="ocpcluster",
            name="provider",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddIndex(
            model_name="ocpazuretagsvalues", index=models.Index(fields=["key"], name="ocp_azure_tags_value_key_idx")
        ),
        migrations.AlterUniqueTogether(name="ocpazuretagsvalues", unique_together={("key", "value")}),
        migrations.AddField(
            model_name="ocpazuretagssummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.azurecostentrybill"),
        ),
        migrations.AddField(
            model_name="ocpazuretagssummary",
            name="report_period",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"),
        ),
        migrations.AddField(
            model_name="ocpazurecostlineitemprojectdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.azurecostentrybill"),
        ),
        migrations.AddField(
            model_name="ocpazurecostlineitemprojectdailysummary",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpazurecostlineitemdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.azurecostentrybill"),
        ),
        migrations.AddField(
            model_name="ocpazurecostlineitemdailysummary",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddIndex(
            model_name="ocpawstagsvalues", index=models.Index(fields=["key"], name="ocp_aws_tags_value_key_idx")
        ),
        migrations.AlterUniqueTogether(name="ocpawstagsvalues", unique_together={("key", "value")}),
        migrations.AddField(
            model_name="ocpawstagssummary",
            name="account_alias",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awsaccountalias"
            ),
        ),
        migrations.AddField(
            model_name="ocpawstagssummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"),
        ),
        migrations.AddField(
            model_name="ocpawstagssummary",
            name="report_period",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"),
        ),
        migrations.AddField(
            model_name="ocpawscostlineitemprojectdailysummary",
            name="account_alias",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awsaccountalias"
            ),
        ),
        migrations.AddField(
            model_name="ocpawscostlineitemprojectdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"
            ),
        ),
        migrations.AddField(
            model_name="ocpawscostlineitemprojectdailysummary",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddField(
            model_name="ocpawscostlineitemdailysummary",
            name="account_alias",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awsaccountalias"
            ),
        ),
        migrations.AddField(
            model_name="ocpawscostlineitemdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"
            ),
        ),
        migrations.AddField(
            model_name="ocpawscostlineitemdailysummary",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddIndex(
            model_name="gcptagsvalues", index=models.Index(fields=["key"], name="gcp_tags_value_key_idx")
        ),
        migrations.AlterUniqueTogether(name="gcptagsvalues", unique_together={("key", "value")}),
        migrations.AddField(
            model_name="gcptagssummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpcostentrybill"),
        ),
        migrations.AlterUniqueTogether(
            name="gcpcostentryproductservice", unique_together={("service_id", "service_alias", "sku_id", "sku_alias")}
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitemdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpcostentrybill"),
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitemdaily",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpcostentrybill"),
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitemdaily",
            name="cost_entry_product",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpcostentryproductservice"
            ),
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitemdaily",
            name="project",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpproject"),
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitem",
            name="cost_entry_bill",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpcostentrybill"
            ),
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitem",
            name="cost_entry_product",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="reporting.gcpcostentryproductservice",
            ),
        ),
        migrations.AddField(
            model_name="gcpcostentrylineitem",
            name="project",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.gcpproject"
            ),
        ),
        migrations.AddField(
            model_name="gcpcostentrybill",
            name="provider",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddField(
            model_name="costsummary",
            name="report_period",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.ocpusagereportperiod"
            ),
        ),
        migrations.AddIndex(
            model_name="azuretagsvalues", index=models.Index(fields=["key"], name="azure_tags_value_key_idx")
        ),
        migrations.AlterUniqueTogether(name="azuretagsvalues", unique_together={("key", "value")}),
        migrations.AddField(
            model_name="azuretagssummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.azurecostentrybill"),
        ),
        migrations.AddField(
            model_name="azuremeter",
            name="provider",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddField(
            model_name="azurecostentryproductservice",
            name="provider",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddField(
            model_name="azurecostentrylineitemdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.azurecostentrybill"),
        ),
        migrations.AddField(
            model_name="azurecostentrylineitemdailysummary",
            name="meter",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.azuremeter"
            ),
        ),
        migrations.AddField(
            model_name="azurecostentrylineitemdaily",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.azurecostentrybill"),
        ),
        migrations.AddField(
            model_name="azurecostentrylineitemdaily",
            name="cost_entry_product",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.azurecostentryproductservice"
            ),
        ),
        migrations.AddField(
            model_name="azurecostentrylineitemdaily",
            name="meter",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.azuremeter"
            ),
        ),
        migrations.AddField(
            model_name="azurecostentrybill",
            name="provider",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddIndex(
            model_name="awstagsvalues", index=models.Index(fields=["key"], name="aws_tags_value_key_idx")
        ),
        migrations.AlterUniqueTogether(name="awstagsvalues", unique_together={("key", "value")}),
        migrations.AddField(
            model_name="awstagssummary",
            name="account_alias",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awsaccountalias"
            ),
        ),
        migrations.AddField(
            model_name="awstagssummary",
            name="cost_entry_bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"),
        ),
        migrations.AddField(
            model_name="awsorganizationalunit",
            name="account_alias",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, to="reporting.awsaccountalias"
            ),
        ),
        migrations.AddField(
            model_name="awsorganizationalunit",
            name="provider",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddIndex(
            model_name="awsenabledtagkeys", index=models.Index(fields=["key", "enabled"], name="aws_enabled_key_index")
        ),
        migrations.AddIndex(
            model_name="awscostentryproduct", index=models.Index(fields=["region"], name="region_idx")
        ),
        migrations.AlterUniqueTogether(
            name="awscostentryproduct", unique_together={("sku", "product_name", "region")}
        ),
        migrations.AlterUniqueTogether(name="awscostentrypricing", unique_together={("term", "unit")}),
        migrations.AddField(
            model_name="awscostentrylineitemdailysummary",
            name="account_alias",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, to="reporting.awsaccountalias"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitemdailysummary",
            name="cost_entry_bill",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitemdailysummary",
            name="organizational_unit",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awsorganizationalunit"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitemdaily",
            name="cost_entry_bill",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitemdaily",
            name="cost_entry_pricing",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awscostentrypricing"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitemdaily",
            name="cost_entry_product",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awscostentryproduct"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitemdaily",
            name="cost_entry_reservation",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="reporting.awscostentryreservation"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitem",
            name="cost_entry",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentry"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitem",
            name="cost_entry_bill",
            field=models.ForeignKey(
                db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitem",
            name="cost_entry_pricing",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="reporting.awscostentrypricing",
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitem",
            name="cost_entry_product",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="reporting.awscostentryproduct",
            ),
        ),
        migrations.AddField(
            model_name="awscostentrylineitem",
            name="cost_entry_reservation",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="reporting.awscostentryreservation",
            ),
        ),
        migrations.AddField(
            model_name="awscostentrybill",
            name="provider",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
        ),
        migrations.AddField(
            model_name="awscostentry",
            name="bill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="reporting.awscostentrybill"),
        ),
        migrations.AlterUniqueTogether(
            name="ocpusagereportperiod", unique_together={("cluster_id", "report_period_start", "provider")}
        ),
        migrations.AddIndex(
            model_name="ocpusagereport", index=models.Index(fields=["interval_start"], name="ocp_interval_start_idx")
        ),
        migrations.AlterUniqueTogether(name="ocpusagereport", unique_together={("report_period", "interval_start")}),
        migrations.AlterUniqueTogether(
            name="ocpusagepodlabelsummary", unique_together={("key", "report_period", "namespace", "node")}
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdailysummary",
            index=models.Index(fields=["usage_start"], name="summary_ocp_usage_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdailysummary",
            index=models.Index(fields=["namespace"], name="summary_namespace_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdailysummary",
            index=models.Index(fields=["node"], name="summary_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdailysummary",
            index=models.Index(fields=["data_source"], name="summary_data_source_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["pod_labels"], name="pod_labels_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdaily", index=models.Index(fields=["usage_start"], name="ocp_usage_idx")
        ),
        migrations.AddIndex(
            model_name="ocpusagelineitemdaily",
            index=models.Index(fields=["namespace"], name="namespace_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(model_name="ocpusagelineitemdaily", index=models.Index(fields=["pod"], name="pod_idx")),
        migrations.AddIndex(
            model_name="ocpusagelineitemdaily",
            index=models.Index(fields=["node"], name="node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AlterUniqueTogether(
            name="ocpusagelineitem", unique_together={("report", "namespace", "pod", "node")}
        ),
        migrations.AlterUniqueTogether(
            name="ocpstoragevolumelabelsummary", unique_together={("key", "report_period", "namespace", "node")}
        ),
        migrations.AddIndex(
            model_name="ocpstoragelineitemdaily",
            index=models.Index(
                fields=["namespace"], name="ocp_storage_li_namespace_idx", opclasses=["varchar_pattern_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="ocpstoragelineitemdaily",
            index=models.Index(fields=["node"], name="ocp_storage_li_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AlterUniqueTogether(
            name="ocpstoragelineitem", unique_together={("report", "namespace", "persistentvolumeclaim")}
        ),
        migrations.AddIndex(
            model_name="ocpnodelabellineitemdaily",
            index=models.Index(fields=["usage_start"], name="ocplblnitdly_usage_start"),
        ),
        migrations.AddIndex(
            model_name="ocpnodelabellineitemdaily",
            index=django.contrib.postgres.indexes.GinIndex(fields=["node_labels"], name="ocplblnitdly_node_labels"),
        ),
        migrations.AlterUniqueTogether(name="ocpnodelabellineitem", unique_together={("report", "node")}),
        migrations.AlterUniqueTogether(name="ocpnamespacelabellineitem", unique_together={("report", "namespace")}),
        migrations.AlterUniqueTogether(
            name="ocpazuretagssummary",
            unique_together={("key", "cost_entry_bill", "report_period", "subscription_guid", "namespace", "node")},
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=models.Index(fields=["usage_start"], name="ocpazure_proj_usage_start_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=models.Index(
                fields=["namespace"], name="ocpazure_proj_namespace_idx", opclasses=["varchar_pattern_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=models.Index(fields=["node"], name="ocpazure_proj_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=models.Index(fields=["resource_id"], name="ocpazure_proj_resource_id_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["pod_labels"], name="ocpazure_proj_pod_labels_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=models.Index(fields=["service_name"], name="ocpazure_proj_service_name_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemprojectdailysummary",
            index=models.Index(fields=["instance_type"], name="ocpazure_proj_inst_type_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=models.Index(fields=["usage_start"], name="ocpazure_usage_start_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=models.Index(fields=["namespace"], name="ocpazure_namespace_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=models.Index(fields=["node"], name="ocpazure_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=models.Index(fields=["resource_id"], name="ocpazure_resource_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["tags"], name="ocpazure_tags_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=models.Index(fields=["service_name"], name="ocpazure_service_name_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpazurecostlineitemdailysummary",
            index=models.Index(fields=["instance_type"], name="ocpazure_instance_type_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="ocpawstagssummary",
            unique_together={("key", "cost_entry_bill", "report_period", "usage_account_id", "namespace", "node")},
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=models.Index(fields=["usage_start"], name="cost_proj_sum_ocp_usage_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=models.Index(
                fields=["namespace"], name="cost__proj_sum_namespace_idx", opclasses=["varchar_pattern_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=models.Index(fields=["node"], name="cost_proj_sum_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=models.Index(fields=["resource_id"], name="cost_proj_sum_resource_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["pod_labels"], name="cost_proj_pod_labels_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=models.Index(fields=["product_family"], name="ocp_aws_proj_prod_fam_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemprojectdailysummary",
            index=models.Index(fields=["instance_type"], name="ocp_aws_proj_inst_type_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=models.Index(fields=["usage_start"], name="cost_summary_ocp_usage_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=models.Index(fields=["namespace"], name="cost_summary_namespace_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=models.Index(fields=["node"], name="cost_summary_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=models.Index(fields=["resource_id"], name="cost_summary_resource_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["tags"], name="cost_tags_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=models.Index(fields=["product_family"], name="ocp_aws_product_family_idx"),
        ),
        migrations.AddIndex(
            model_name="ocpawscostlineitemdailysummary",
            index=models.Index(fields=["instance_type"], name="ocp_aws_instance_type_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="gcptagssummary",
            unique_together={("key", "cost_entry_bill", "account_id", "project_id", "project_name")},
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=models.Index(fields=["usage_start"], name="gcp_summary_usage_start_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=models.Index(fields=["instance_type"], name="gcp_summary_instance_type_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["tags"], name="gcp_tags_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=models.Index(fields=["project_id"], name="gcp_summary_project_id_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=models.Index(fields=["project_name"], name="gcp_summary_project_name_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=models.Index(fields=["service_id"], name="gcp_summary_service_id_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdailysummary",
            index=models.Index(fields=["service_alias"], name="gcp_summary_service_alias_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdaily",
            index=models.Index(fields=["usage_start"], name="gcp_usage_start_idx"),
        ),
        migrations.AddIndex(
            model_name="gcpcostentrylineitemdaily",
            index=django.contrib.postgres.indexes.GinIndex(fields=["tags"], name="gcp_cost_entry"),
        ),
        migrations.AlterUniqueTogether(
            name="gcpcostentrybill", unique_together={("billing_period_start", "provider")}
        ),
        migrations.AddIndex(
            model_name="costsummary", index=models.Index(fields=["usage_start"], name="ocpcostsum_usage_start_idx")
        ),
        migrations.AddIndex(
            model_name="costsummary",
            index=models.Index(
                fields=["namespace"], name="ocpcostsum_namespace_idx", opclasses=["varchar_pattern_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="costsummary",
            index=models.Index(fields=["node"], name="ocpcostsum_node_idx", opclasses=["varchar_pattern_ops"]),
        ),
        migrations.AddIndex(
            model_name="costsummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["pod_labels"], name="ocpcostsum_pod_labels_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="azuretagssummary", unique_together={("key", "cost_entry_bill", "subscription_guid")}
        ),
        migrations.AlterUniqueTogether(
            name="azurecostentryproductservice",
            unique_together={("instance_id", "instance_type", "service_tier", "service_name")},
        ),
        migrations.AddIndex(
            model_name="azurecostentrylineitemdailysummary",
            index=models.Index(fields=["usage_start"], name="ix_azurecstentrydlysumm_start"),
        ),
        migrations.AlterUniqueTogether(
            name="azurecostentrybill", unique_together={("billing_period_start", "provider")}
        ),
        migrations.AlterUniqueTogether(
            name="awstagssummary", unique_together={("key", "cost_entry_bill", "usage_account_id")}
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=models.Index(fields=["usage_start"], name="summary_usage_start_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=models.Index(fields=["product_code"], name="summary_product_code_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=models.Index(fields=["usage_account_id"], name="summary_usage_account_id_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=django.contrib.postgres.indexes.GinIndex(fields=["tags"], name="tags_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=models.Index(fields=["account_alias"], name="summary_account_alias_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=models.Index(fields=["product_family"], name="summary_product_family_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdailysummary",
            index=models.Index(fields=["instance_type"], name="summary_instance_type_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdaily", index=models.Index(fields=["usage_start"], name="usage_start_idx")
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdaily",
            index=models.Index(fields=["product_code"], name="product_code_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdaily",
            index=models.Index(fields=["usage_account_id"], name="usage_account_id_idx"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdaily", index=models.Index(fields=["resource_id"], name="resource_id_idx")
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdaily",
            index=django.contrib.postgres.indexes.GinIndex(fields=["tags"], name="aws_cost_entry"),
        ),
        migrations.AddIndex(
            model_name="awscostentrylineitemdaily",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["product_code"], name="aws_cost_pcode_like", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AlterUniqueTogether(
            name="awscostentrybill",
            unique_together={("bill_type", "payer_account_id", "billing_period_start", "provider")},
        ),
        migrations.AddIndex(
            model_name="awscostentry", index=models.Index(fields=["interval_start"], name="interval_start_idx")
        ),
        migrations.RunPython(code=unset_partitioned_mode),
        migrations.RunSQL(
            """
create table if not exists presto_delete_wrapper_log (
    id uuid primary key default public.uuid_generate_v4(),
    action_ts timestamptz not null default now(),
    table_name text not null,
    where_clause text not null,
    result_rows bigint
);
comment on table presto_delete_wrapper_log is 'Table to log and execute delete statements initiated from Presto';
comment on column presto_delete_wrapper_log.table_name is 'Target table from which to delete';
comment on column presto_delete_wrapper_log.where_clause is 'Where clause for delete action';
comment on column presto_delete_wrapper_log.result_rows is 'Number of records affected by the delete action';
"""
        ),
        migrations.RunSQL(
            """
drop trigger if exists tr_presto_before_insert on presto_delete_wrapper_log ;
create trigger tr_presto_before_insert
before insert on presto_delete_wrapper_log
   for each row execute function public.tr_presto_delete_wrapper_log_action();
"""
        ),
        migrations.RunSQL(
            """
create table if not exists presto_pk_delete_wrapper_log (
    transaction_id text not null,
    action_ts timestamptz not null default now(),
    table_name text not null,
    pk_column text not null,
    pk_value text not null,
    pk_value_cast text not null
);
comment on table presto_pk_delete_wrapper_log is 'Table to hold primary key values to use when bulk-deleting using the presto delete wrapper log';
comment on column presto_pk_delete_wrapper_log.transaction_id is 'Presto transaction identifier';
comment on column presto_pk_delete_wrapper_log.table_name is 'Target table in which the primary key values reside';
comment on column presto_pk_delete_wrapper_log.pk_column is 'Name of the primary key column for the target table';
comment on column presto_pk_delete_wrapper_log.pk_value is 'String representation of the primary key value';
comment on column presto_pk_delete_wrapper_log.pk_value_cast is 'Data type to which the string primary key value should be cast';
create index presto_pk_delete_wrapper_log_tx on presto_pk_delete_wrapper_log (transaction_id, table_name);
"""
        ),
        migrations.RunSQL(
            """
create view reporting_ocpusagelineitem_daily_summary_presto as
select cluster_id,
       cluster_alias,
       data_source,
       namespace,
       node,
       resource_id,
       usage_start,
       usage_end,
       pod_labels::json,
       pod_usage_cpu_core_hours::text,
       pod_request_cpu_core_hours::text,
       pod_limit_cpu_core_hours::text,
       pod_usage_memory_gigabyte_hours::text,
       pod_request_memory_gigabyte_hours::text,
       pod_limit_memory_gigabyte_hours::text,
       node_capacity_cpu_cores::text,
       node_capacity_cpu_core_hours::text,
       node_capacity_memory_gigabytes::text,
       node_capacity_memory_gigabyte_hours::text,
       cluster_capacity_cpu_core_hours::text,
       cluster_capacity_memory_gigabyte_hours::text,
       persistentvolumeclaim,
       persistentvolume,
       storageclass,
       volume_labels::json,
       persistentvolumeclaim_capacity_gigabyte::text,
       persistentvolumeclaim_capacity_gigabyte_months::text,
       volume_request_storage_gigabyte_months::text,
       persistentvolumeclaim_usage_gigabyte_months::text,
       infrastructure_raw_cost::text,
       infrastructure_project_raw_cost::text,
       infrastructure_usage_cost::json,
       infrastructure_markup_cost::text,
       infrastructure_project_markup_cost::text,
       infrastructure_monthly_cost::text,
       supplementary_usage_cost::json,
       supplementary_monthly_cost::text,
       monthly_cost_type,
       source_uuid,
       report_period_id,
       uuid
from reporting_ocpusagelineitem_daily_summary;
"""
        ),
        migrations.RunSQL(
            """
create rule ins_reporting_ocpusagelineitem_daily_summary_presto as
    on insert to reporting_ocpusagelineitem_daily_summary_presto
    do instead
       insert into reporting_ocpusagelineitem_daily_summary (
           cluster_id,
           cluster_alias,
           data_source,
           namespace,
           node,
           resource_id,
           usage_start,
           usage_end,
           pod_labels,
           pod_usage_cpu_core_hours,
           pod_request_cpu_core_hours,
           pod_limit_cpu_core_hours,
           pod_usage_memory_gigabyte_hours,
           pod_request_memory_gigabyte_hours,
           pod_limit_memory_gigabyte_hours,
           node_capacity_cpu_cores,
           node_capacity_cpu_core_hours,
           node_capacity_memory_gigabytes,
           node_capacity_memory_gigabyte_hours,
           cluster_capacity_cpu_core_hours,
           cluster_capacity_memory_gigabyte_hours,
           persistentvolumeclaim,
           persistentvolume,
           storageclass,
           volume_labels,
           persistentvolumeclaim_capacity_gigabyte,
           persistentvolumeclaim_capacity_gigabyte_months,
           volume_request_storage_gigabyte_months,
           persistentvolumeclaim_usage_gigabyte_months,
           infrastructure_raw_cost,
           infrastructure_project_raw_cost,
           infrastructure_usage_cost,
           infrastructure_markup_cost,
           infrastructure_project_markup_cost,
           infrastructure_monthly_cost,
           supplementary_usage_cost,
           supplementary_monthly_cost,
           monthly_cost_type,
           source_uuid,
           report_period_id,
           uuid
       )
       values (
           NEW.cluster_id,
           NEW.cluster_alias,
           NEW.data_source,
           NEW.namespace,
           NEW.node,
           NEW.resource_id,
           NEW.usage_start,
           NEW.usage_end,
           NEW.pod_labels::jsonb,
           NEW.pod_usage_cpu_core_hours::numeric(73,9),
           NEW.pod_request_cpu_core_hours::numeric(73,9),
           NEW.pod_limit_cpu_core_hours::numeric(73,9),
           NEW.pod_usage_memory_gigabyte_hours::numeric(73,9),
           NEW.pod_request_memory_gigabyte_hours::numeric(73,9),
           NEW.pod_limit_memory_gigabyte_hours::numeric(73,9),
           NEW.node_capacity_cpu_cores::numeric(73,9),
           NEW.node_capacity_cpu_core_hours::numeric(73,9),
           NEW.node_capacity_memory_gigabytes::numeric(73,9),
           NEW.node_capacity_memory_gigabyte_hours::numeric(73,9),
           NEW.cluster_capacity_cpu_core_hours::numeric(73,9),
           NEW.cluster_capacity_memory_gigabyte_hours::numeric(73,9),
           NEW.persistentvolumeclaim,
           NEW.persistentvolume,
           NEW.storageclass,
           NEW.volume_labels::jsonb,
           NEW.persistentvolumeclaim_capacity_gigabyte::numeric(73,9),
           NEW.persistentvolumeclaim_capacity_gigabyte_months::numeric(73,9),
           NEW.volume_request_storage_gigabyte_months::numeric(73,9),
           NEW.persistentvolumeclaim_usage_gigabyte_months::numeric(73,9),
           NEW.infrastructure_raw_cost::numeric(33,15),
           NEW.infrastructure_project_raw_cost::numeric(33,15),
           NEW.infrastructure_usage_cost::jsonb,
           NEW.infrastructure_markup_cost::numeric(33,15),
           NEW.infrastructure_project_markup_cost::numeric(33,15),
           NEW.infrastructure_monthly_cost::numeric(33,15),
           NEW.supplementary_usage_cost::jsonb,
           NEW.supplementary_monthly_cost::numeric(33,15),
           NEW.monthly_cost_type,
           NEW.source_uuid,
           NEW.report_period_id,
           NEW.uuid
       );
comment on view reporting_ocpusagelineitem_daily_summary_presto is 'Interface to reporting_ocpusagelineitem_daily_summary table for Presto';
"""
        ),
        migrations.RunPython(code=apply_views),
    ]
