# Generated by Django 3.1.2 on 2020-10-05 19:29
import os
import uuid

import django.db.models.deletion
import django_tenants.postgresql_backend.base
from django.db import migrations
from django.db import models

from koku import migration_sql_helpers as msh

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:


def apply_create_partition_procedure(apps, schema_editor):
    path = msh.find_db_functions_dir()
    for funcfile in ("create_table_date_range_partition.sql", "create_date_partitions.sql"):
        msh.apply_sql_file(schema_editor, os.path.join(path, funcfile))


def apply_public_function_updates(apps, schema_editor):
    path = msh.find_db_functions_dir()
    for funcfile in (
        "partitioned_tables_manage_trigger_function.sql",
        "partitioned_tables_active_trigger_function.sql",
        "scan_date_partitions.sql",
    ):
        msh.apply_sql_file(schema_editor, os.path.join(path, funcfile), literal_placeholder=True)


class Migration(migrations.Migration):

    initial = True

    replaces = []

    dependencies = []

    operations = [
        ###### begin customization; preserve this if you squash migrations ######
        migrations.RunPython(code=apply_create_partition_procedure),
        migrations.RunPython(code=apply_public_function_updates),
        migrations.RunSQL('create extension if not exists "uuid-ossp" SCHEMA public'),
        ###### end customization ######
        migrations.CreateModel(
            name="Customer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now_add=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ("account_id", models.CharField(max_length=150, null=True, unique=True)),
                ("schema_name", models.TextField(default="public", unique=True)),
            ],
            options={"ordering": ["schema_name"]},
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=256)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("AWS", "AWS"),
                            ("OCP", "OCP"),
                            ("Azure", "Azure"),
                            ("GCP", "GCP"),
                            ("AWS-local", "AWS-local"),
                            ("Azure-local", "Azure-local"),
                            ("GCP-local", "GCP-local"),
                        ],
                        default="AWS",
                        max_length=50,
                    ),
                ),
                ("setup_complete", models.BooleanField(default=False)),
                ("created_timestamp", models.DateTimeField(auto_now_add=True, null=True)),
                ("data_updated_timestamp", models.DateTimeField(null=True)),
                ("active", models.BooleanField(default=True)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="ProviderAuthentication",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ("credentials", models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="ProviderBillingSource",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ("data_source", models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="Sources",
            fields=[
                ("source_id", models.IntegerField(primary_key=True, serialize=False)),
                ("source_uuid", models.UUIDField(null=True, unique=True)),
                ("name", models.CharField(max_length=256, null=True)),
                ("auth_header", models.TextField(null=True)),
                ("offset", models.IntegerField()),
                ("endpoint_id", models.IntegerField(null=True)),
                ("account_id", models.CharField(max_length=150, null=True)),
                ("source_type", models.CharField(max_length=50)),
                ("authentication", models.JSONField(default=dict)),
                ("billing_source", models.JSONField(default=dict, null=True)),
                ("koku_uuid", models.CharField(max_length=512, null=True, unique=True)),
                ("pending_delete", models.BooleanField(default=False)),
                ("pending_update", models.BooleanField(default=False)),
                ("out_of_order_delete", models.BooleanField(default=False)),
                ("status", models.JSONField(default=dict, null=True)),
            ],
            options={"db_table": "api_sources", "ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Tenant",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "schema_name",
                    models.CharField(
                        max_length=63,
                        unique=True,
                        validators=[django_tenants.postgresql_backend.base._check_schema_name],
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.NullBooleanField(default=True)),
                (
                    "customer",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="api.customer"),
                ),
            ],
            options={"ordering": ["username"]},
        ),
        migrations.CreateModel(
            name="ProviderInfrastructureMap",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "infrastructure_type",
                    models.CharField(
                        choices=[
                            ("AWS", "AWS"),
                            ("Azure", "Azure"),
                            ("GCP", "GCP"),
                            ("AWS-local", "AWS-local"),
                            ("Azure-local", "Azure-local"),
                            ("GCP-local", "GCP-local"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "infrastructure_provider",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.provider"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="provider",
            name="authentication",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.DO_NOTHING, to="api.providerauthentication"
            ),
        ),
        migrations.AddField(
            model_name="provider",
            name="billing_source",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to="api.providerbillingsource"
            ),
        ),
        migrations.AddField(
            model_name="provider",
            name="created_by",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.user"),
        ),
        migrations.AddField(
            model_name="provider",
            name="customer",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="api.customer"),
        ),
        migrations.AddField(
            model_name="provider",
            name="infrastructure",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.providerinfrastructuremap"
            ),
        ),
        migrations.CreateModel(
            name="DataExportRequest",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_timestamp", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("waiting", "Waiting"),
                            ("complete", "Complete"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("bucket_name", models.CharField(max_length=63)),
                ("created_by", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.user")),
            ],
            options={"ordering": ("created_timestamp",)},
        ),
        migrations.AlterUniqueTogether(
            name="provider", unique_together={("authentication", "billing_source", "customer")}
        ),
    ]
