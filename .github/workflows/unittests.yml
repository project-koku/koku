name: Unit Tests

on:
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-16.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7]

    services:
      postgres:
        # Docker Hub image
        image: postgres:9.6
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repsository
        uses: actions/checkout@v1

      - name: Display build environment
        run: printenv

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: set PY
        run: echo "::set-env name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pipenv
          key: pipenv|${{ env.PY }}|${{ hashFiles('Pipfile') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip pipenv
          sed -ri 's/python_version = ".+"/python_version = "${{ matrix.python }}"/g' Pipfile
          pipenv install --dev --ignore-pipfile

      - name: Create DB User
        run: |
          PGPASSWORD=postgres psql -U postgres -h localhost -p ${{ job.services.postgres.ports[5432] }} \
          -c "DROP USER IF EXISTS koku_tester; \
          CREATE USER koku_tester PASSWORD '';" |
          createdb -U postgres -h localhost -p ${{ job.services.postgres.ports[5432] }} postgres
        env:
          DATABASE_USER: koku_tester
          DATABASE_PASSWORD: ''
          POSTGRES_SQL_SERVICE_PORT: ${{ job.services.postgres.ports[5432] }}
          POSTGRES_SQL_SERVICE_HOST: localhost
          DATABASE_ADMIN: postgres

      - name: Run Unittests
        run: |
          pipenv run coverage run ./koku/manage.py test --noinput --verbosity 2 ./koku/ |
          pipenv run coverage report --show-missing
        env:
          DATABASE_SERVICE_NAME: POSTGRES_SQL
          DATABASE_ENGINE: postgresql
          DATABASE_USER: koku_tester
          DATABASE_ADMIN: postgres
          DATABASE_PASSWORD: ''
          POSTGRES_SQL_SERVICE_HOST: localhost
          POSTGRES_SQL_SERVICE_PORT: ${{ job.services.postgres.ports[5432] }}
          prometheus_multiproc_dir: /tmp
